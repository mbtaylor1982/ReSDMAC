-- Copyright (C) 1991-2013 Altera Corporation
-- Your use of Altera Corporation's design tools, logic functions 
-- and other software and tools, and its AMPP partner logic 
-- functions, and any output files from any of the foregoing 
-- (including device programming or simulation files), and any 
-- associated documentation or information are expressly subject 
-- to the terms and conditions of the Altera Program License 
-- Subscription Agreement, Altera MegaCore Function License 
-- Agreement, or other applicable license agreement, including, 
-- without limitation, that your use is for the sole purpose of 
-- programming logic devices manufactured by Altera and sold by 
-- Altera or its authorized distributors.  Please refer to the 
-- applicable agreement for further details.
--GC1__clk0 is PLL:u_PLL|atpll:APLL_inst1|altpll:altpll_component|_clk0
GC1__clk0 = PLL.CLK0(.ENA(), .CLKSWITCH(), .ARESET(!_RST), .PFDENA(), .INCLK(SCLK), .INCLK());

--GC1__clk1 is PLL:u_PLL|atpll:APLL_inst1|altpll:altpll_component|_clk1
GC1__clk1 = PLL.CLK1(.ENA(), .CLKSWITCH(), .ARESET(!_RST), .PFDENA(), .INCLK(SCLK), .INCLK());

--GC1__clk2 is PLL:u_PLL|atpll:APLL_inst1|altpll:altpll_component|_clk2
GC1__clk2 = PLL.CLK2(.ENA(), .CLKSWITCH(), .ARESET(!_RST), .PFDENA(), .INCLK(SCLK), .INCLK());


--WB1_ram_block1a0 is fifo:int_fifo|altsyncram:BUFFER_rtl_0|altsyncram_faj1:auto_generated|ram_block1a0
--RAM Block Operation Mode: Simple Dual-Port
--Port A Depth: 8, Port A Width: 1, Port B Depth: 8, Port B Width: 1
--Port A Logical Depth: 8, Port A Logical Width: 32, Port B Logical Depth: 8, Port B Logical Width: 32
--Port A Input: Registered, Port B Input: Registered, Port B Output: Un-registered
WB1_ram_block1a0_PORT_A_data_in = A1L140;
WB1_ram_block1a0_PORT_A_data_in_reg = DFFE(WB1_ram_block1a0_PORT_A_data_in, WB1_ram_block1a0_clock_0, , , );
WB1_ram_block1a0_PORT_A_address = BUS(UB1_COUNT[0], UB1_COUNT[1], UB1_COUNT[2]);
WB1_ram_block1a0_PORT_A_address_reg = DFFE(WB1_ram_block1a0_PORT_A_address, WB1_ram_block1a0_clock_0, , , );
WB1_ram_block1a0_PORT_B_address = BUS(UB2_COUNT[0], UB2_COUNT[1], UB2_COUNT[2]);
WB1_ram_block1a0_PORT_B_address_reg = DFFE(WB1_ram_block1a0_PORT_B_address, WB1_ram_block1a0_clock_0, , , );
WB1_ram_block1a0_PORT_A_write_enable = D1L1;
WB1_ram_block1a0_PORT_A_write_enable_reg = DFFE(WB1_ram_block1a0_PORT_A_write_enable, WB1_ram_block1a0_clock_0, , , );
WB1_ram_block1a0_PORT_B_read_enable = VCC;
WB1_ram_block1a0_PORT_B_read_enable_reg = DFFE(WB1_ram_block1a0_PORT_B_read_enable, WB1_ram_block1a0_clock_0, , , );
WB1_ram_block1a0_PORT_A_byte_mask = VB1_UUWS;
WB1_ram_block1a0_PORT_A_byte_mask_reg = DFFE(WB1_ram_block1a0_PORT_A_byte_mask, WB1_ram_block1a0_clock_0, , , );
WB1_ram_block1a0_clock_0 = SCLK;
WB1_ram_block1a0_PORT_B_data_out = MEMORY(WB1_ram_block1a0_PORT_A_data_in_reg, , WB1_ram_block1a0_PORT_A_address_reg, WB1_ram_block1a0_PORT_B_address_reg, WB1_ram_block1a0_PORT_A_write_enable_reg, WB1_ram_block1a0_PORT_B_read_enable_reg, WB1_ram_block1a0_PORT_A_byte_mask_reg, , WB1_ram_block1a0_clock_0, , , , , );
WB1_ram_block1a0 = WB1_ram_block1a0_PORT_B_data_out[0];


--WB1_ram_block1a16 is fifo:int_fifo|altsyncram:BUFFER_rtl_0|altsyncram_faj1:auto_generated|ram_block1a16
--RAM Block Operation Mode: Simple Dual-Port
--Port A Depth: 8, Port A Width: 1, Port B Depth: 8, Port B Width: 1
--Port A Logical Depth: 8, Port A Logical Width: 32, Port B Logical Depth: 8, Port B Logical Width: 32
--Port A Input: Registered, Port B Input: Registered, Port B Output: Un-registered
WB1_ram_block1a16_PORT_A_data_in = A1L140;
WB1_ram_block1a16_PORT_A_data_in_reg = DFFE(WB1_ram_block1a16_PORT_A_data_in, WB1_ram_block1a16_clock_0, , , );
WB1_ram_block1a16_PORT_A_address = BUS(UB1_COUNT[0], UB1_COUNT[1], UB1_COUNT[2]);
WB1_ram_block1a16_PORT_A_address_reg = DFFE(WB1_ram_block1a16_PORT_A_address, WB1_ram_block1a16_clock_0, , , );
WB1_ram_block1a16_PORT_B_address = BUS(UB2_COUNT[0], UB2_COUNT[1], UB2_COUNT[2]);
WB1_ram_block1a16_PORT_B_address_reg = DFFE(WB1_ram_block1a16_PORT_B_address, WB1_ram_block1a16_clock_0, , , );
WB1_ram_block1a16_PORT_A_write_enable = D1L1;
WB1_ram_block1a16_PORT_A_write_enable_reg = DFFE(WB1_ram_block1a16_PORT_A_write_enable, WB1_ram_block1a16_clock_0, , , );
WB1_ram_block1a16_PORT_B_read_enable = VCC;
WB1_ram_block1a16_PORT_B_read_enable_reg = DFFE(WB1_ram_block1a16_PORT_B_read_enable, WB1_ram_block1a16_clock_0, , , );
WB1_ram_block1a16_PORT_A_byte_mask = VB1_LMWS;
WB1_ram_block1a16_PORT_A_byte_mask_reg = DFFE(WB1_ram_block1a16_PORT_A_byte_mask, WB1_ram_block1a16_clock_0, , , );
WB1_ram_block1a16_clock_0 = SCLK;
WB1_ram_block1a16_PORT_B_data_out = MEMORY(WB1_ram_block1a16_PORT_A_data_in_reg, , WB1_ram_block1a16_PORT_A_address_reg, WB1_ram_block1a16_PORT_B_address_reg, WB1_ram_block1a16_PORT_A_write_enable_reg, WB1_ram_block1a16_PORT_B_read_enable_reg, WB1_ram_block1a16_PORT_A_byte_mask_reg, , WB1_ram_block1a16_clock_0, , , , , );
WB1_ram_block1a16 = WB1_ram_block1a16_PORT_B_data_out[0];


--WB1_ram_block1a8 is fifo:int_fifo|altsyncram:BUFFER_rtl_0|altsyncram_faj1:auto_generated|ram_block1a8
--RAM Block Operation Mode: Simple Dual-Port
--Port A Depth: 8, Port A Width: 1, Port B Depth: 8, Port B Width: 1
--Port A Logical Depth: 8, Port A Logical Width: 32, Port B Logical Depth: 8, Port B Logical Width: 32
--Port A Input: Registered, Port B Input: Registered, Port B Output: Un-registered
WB1_ram_block1a8_PORT_A_data_in = A1L140;
WB1_ram_block1a8_PORT_A_data_in_reg = DFFE(WB1_ram_block1a8_PORT_A_data_in, WB1_ram_block1a8_clock_0, , , );
WB1_ram_block1a8_PORT_A_address = BUS(UB1_COUNT[0], UB1_COUNT[1], UB1_COUNT[2]);
WB1_ram_block1a8_PORT_A_address_reg = DFFE(WB1_ram_block1a8_PORT_A_address, WB1_ram_block1a8_clock_0, , , );
WB1_ram_block1a8_PORT_B_address = BUS(UB2_COUNT[0], UB2_COUNT[1], UB2_COUNT[2]);
WB1_ram_block1a8_PORT_B_address_reg = DFFE(WB1_ram_block1a8_PORT_B_address, WB1_ram_block1a8_clock_0, , , );
WB1_ram_block1a8_PORT_A_write_enable = D1L1;
WB1_ram_block1a8_PORT_A_write_enable_reg = DFFE(WB1_ram_block1a8_PORT_A_write_enable, WB1_ram_block1a8_clock_0, , , );
WB1_ram_block1a8_PORT_B_read_enable = VCC;
WB1_ram_block1a8_PORT_B_read_enable_reg = DFFE(WB1_ram_block1a8_PORT_B_read_enable, WB1_ram_block1a8_clock_0, , , );
WB1_ram_block1a8_PORT_A_byte_mask = VB1_UMWS;
WB1_ram_block1a8_PORT_A_byte_mask_reg = DFFE(WB1_ram_block1a8_PORT_A_byte_mask, WB1_ram_block1a8_clock_0, , , );
WB1_ram_block1a8_clock_0 = SCLK;
WB1_ram_block1a8_PORT_B_data_out = MEMORY(WB1_ram_block1a8_PORT_A_data_in_reg, , WB1_ram_block1a8_PORT_A_address_reg, WB1_ram_block1a8_PORT_B_address_reg, WB1_ram_block1a8_PORT_A_write_enable_reg, WB1_ram_block1a8_PORT_B_read_enable_reg, WB1_ram_block1a8_PORT_A_byte_mask_reg, , WB1_ram_block1a8_clock_0, , , , , );
WB1_ram_block1a8 = WB1_ram_block1a8_PORT_B_data_out[0];


--WB1_ram_block1a24 is fifo:int_fifo|altsyncram:BUFFER_rtl_0|altsyncram_faj1:auto_generated|ram_block1a24
--RAM Block Operation Mode: Simple Dual-Port
--Port A Depth: 8, Port A Width: 1, Port B Depth: 8, Port B Width: 1
--Port A Logical Depth: 8, Port A Logical Width: 32, Port B Logical Depth: 8, Port B Logical Width: 32
--Port A Input: Registered, Port B Input: Registered, Port B Output: Un-registered
WB1_ram_block1a24_PORT_A_data_in = H1L1;
WB1_ram_block1a24_PORT_A_data_in_reg = DFFE(WB1_ram_block1a24_PORT_A_data_in, WB1_ram_block1a24_clock_0, , , );
WB1_ram_block1a24_PORT_A_address = BUS(UB1_COUNT[0], UB1_COUNT[1], UB1_COUNT[2]);
WB1_ram_block1a24_PORT_A_address_reg = DFFE(WB1_ram_block1a24_PORT_A_address, WB1_ram_block1a24_clock_0, , , );
WB1_ram_block1a24_PORT_B_address = BUS(UB2_COUNT[0], UB2_COUNT[1], UB2_COUNT[2]);
WB1_ram_block1a24_PORT_B_address_reg = DFFE(WB1_ram_block1a24_PORT_B_address, WB1_ram_block1a24_clock_0, , , );
WB1_ram_block1a24_PORT_A_write_enable = D1L1;
WB1_ram_block1a24_PORT_A_write_enable_reg = DFFE(WB1_ram_block1a24_PORT_A_write_enable, WB1_ram_block1a24_clock_0, , , );
WB1_ram_block1a24_PORT_B_read_enable = VCC;
WB1_ram_block1a24_PORT_B_read_enable_reg = DFFE(WB1_ram_block1a24_PORT_B_read_enable, WB1_ram_block1a24_clock_0, , , );
WB1_ram_block1a24_PORT_A_byte_mask = VB1_LLWS;
WB1_ram_block1a24_PORT_A_byte_mask_reg = DFFE(WB1_ram_block1a24_PORT_A_byte_mask, WB1_ram_block1a24_clock_0, , , );
WB1_ram_block1a24_clock_0 = SCLK;
WB1_ram_block1a24_PORT_B_data_out = MEMORY(WB1_ram_block1a24_PORT_A_data_in_reg, , WB1_ram_block1a24_PORT_A_address_reg, WB1_ram_block1a24_PORT_B_address_reg, WB1_ram_block1a24_PORT_A_write_enable_reg, WB1_ram_block1a24_PORT_B_read_enable_reg, WB1_ram_block1a24_PORT_A_byte_mask_reg, , WB1_ram_block1a24_clock_0, , , , , );
WB1_ram_block1a24 = WB1_ram_block1a24_PORT_B_data_out[0];


--WB1_ram_block1a1 is fifo:int_fifo|altsyncram:BUFFER_rtl_0|altsyncram_faj1:auto_generated|ram_block1a1
--RAM Block Operation Mode: Simple Dual-Port
--Port A Depth: 8, Port A Width: 1, Port B Depth: 8, Port B Width: 1
--Port A Logical Depth: 8, Port A Logical Width: 32, Port B Logical Depth: 8, Port B Logical Width: 32
--Port A Input: Registered, Port B Input: Registered, Port B Output: Un-registered
WB1_ram_block1a1_PORT_A_data_in = A1L140;
WB1_ram_block1a1_PORT_A_data_in_reg = DFFE(WB1_ram_block1a1_PORT_A_data_in, WB1_ram_block1a1_clock_0, , , );
WB1_ram_block1a1_PORT_A_address = BUS(UB1_COUNT[0], UB1_COUNT[1], UB1_COUNT[2]);
WB1_ram_block1a1_PORT_A_address_reg = DFFE(WB1_ram_block1a1_PORT_A_address, WB1_ram_block1a1_clock_0, , , );
WB1_ram_block1a1_PORT_B_address = BUS(UB2_COUNT[0], UB2_COUNT[1], UB2_COUNT[2]);
WB1_ram_block1a1_PORT_B_address_reg = DFFE(WB1_ram_block1a1_PORT_B_address, WB1_ram_block1a1_clock_0, , , );
WB1_ram_block1a1_PORT_A_write_enable = D1L1;
WB1_ram_block1a1_PORT_A_write_enable_reg = DFFE(WB1_ram_block1a1_PORT_A_write_enable, WB1_ram_block1a1_clock_0, , , );
WB1_ram_block1a1_PORT_B_read_enable = VCC;
WB1_ram_block1a1_PORT_B_read_enable_reg = DFFE(WB1_ram_block1a1_PORT_B_read_enable, WB1_ram_block1a1_clock_0, , , );
WB1_ram_block1a1_PORT_A_byte_mask = VB1_UUWS;
WB1_ram_block1a1_PORT_A_byte_mask_reg = DFFE(WB1_ram_block1a1_PORT_A_byte_mask, WB1_ram_block1a1_clock_0, , , );
WB1_ram_block1a1_clock_0 = SCLK;
WB1_ram_block1a1_PORT_B_data_out = MEMORY(WB1_ram_block1a1_PORT_A_data_in_reg, , WB1_ram_block1a1_PORT_A_address_reg, WB1_ram_block1a1_PORT_B_address_reg, WB1_ram_block1a1_PORT_A_write_enable_reg, WB1_ram_block1a1_PORT_B_read_enable_reg, WB1_ram_block1a1_PORT_A_byte_mask_reg, , WB1_ram_block1a1_clock_0, , , , , );
WB1_ram_block1a1 = WB1_ram_block1a1_PORT_B_data_out[0];


--WB1_ram_block1a17 is fifo:int_fifo|altsyncram:BUFFER_rtl_0|altsyncram_faj1:auto_generated|ram_block1a17
--RAM Block Operation Mode: Simple Dual-Port
--Port A Depth: 8, Port A Width: 1, Port B Depth: 8, Port B Width: 1
--Port A Logical Depth: 8, Port A Logical Width: 32, Port B Logical Depth: 8, Port B Logical Width: 32
--Port A Input: Registered, Port B Input: Registered, Port B Output: Un-registered
WB1_ram_block1a17_PORT_A_data_in = A1L140;
WB1_ram_block1a17_PORT_A_data_in_reg = DFFE(WB1_ram_block1a17_PORT_A_data_in, WB1_ram_block1a17_clock_0, , , );
WB1_ram_block1a17_PORT_A_address = BUS(UB1_COUNT[0], UB1_COUNT[1], UB1_COUNT[2]);
WB1_ram_block1a17_PORT_A_address_reg = DFFE(WB1_ram_block1a17_PORT_A_address, WB1_ram_block1a17_clock_0, , , );
WB1_ram_block1a17_PORT_B_address = BUS(UB2_COUNT[0], UB2_COUNT[1], UB2_COUNT[2]);
WB1_ram_block1a17_PORT_B_address_reg = DFFE(WB1_ram_block1a17_PORT_B_address, WB1_ram_block1a17_clock_0, , , );
WB1_ram_block1a17_PORT_A_write_enable = D1L1;
WB1_ram_block1a17_PORT_A_write_enable_reg = DFFE(WB1_ram_block1a17_PORT_A_write_enable, WB1_ram_block1a17_clock_0, , , );
WB1_ram_block1a17_PORT_B_read_enable = VCC;
WB1_ram_block1a17_PORT_B_read_enable_reg = DFFE(WB1_ram_block1a17_PORT_B_read_enable, WB1_ram_block1a17_clock_0, , , );
WB1_ram_block1a17_PORT_A_byte_mask = VB1_LMWS;
WB1_ram_block1a17_PORT_A_byte_mask_reg = DFFE(WB1_ram_block1a17_PORT_A_byte_mask, WB1_ram_block1a17_clock_0, , , );
WB1_ram_block1a17_clock_0 = SCLK;
WB1_ram_block1a17_PORT_B_data_out = MEMORY(WB1_ram_block1a17_PORT_A_data_in_reg, , WB1_ram_block1a17_PORT_A_address_reg, WB1_ram_block1a17_PORT_B_address_reg, WB1_ram_block1a17_PORT_A_write_enable_reg, WB1_ram_block1a17_PORT_B_read_enable_reg, WB1_ram_block1a17_PORT_A_byte_mask_reg, , WB1_ram_block1a17_clock_0, , , , , );
WB1_ram_block1a17 = WB1_ram_block1a17_PORT_B_data_out[0];


--WB1_ram_block1a9 is fifo:int_fifo|altsyncram:BUFFER_rtl_0|altsyncram_faj1:auto_generated|ram_block1a9
--RAM Block Operation Mode: Simple Dual-Port
--Port A Depth: 8, Port A Width: 1, Port B Depth: 8, Port B Width: 1
--Port A Logical Depth: 8, Port A Logical Width: 32, Port B Logical Depth: 8, Port B Logical Width: 32
--Port A Input: Registered, Port B Input: Registered, Port B Output: Un-registered
WB1_ram_block1a9_PORT_A_data_in = A1L140;
WB1_ram_block1a9_PORT_A_data_in_reg = DFFE(WB1_ram_block1a9_PORT_A_data_in, WB1_ram_block1a9_clock_0, , , );
WB1_ram_block1a9_PORT_A_address = BUS(UB1_COUNT[0], UB1_COUNT[1], UB1_COUNT[2]);
WB1_ram_block1a9_PORT_A_address_reg = DFFE(WB1_ram_block1a9_PORT_A_address, WB1_ram_block1a9_clock_0, , , );
WB1_ram_block1a9_PORT_B_address = BUS(UB2_COUNT[0], UB2_COUNT[1], UB2_COUNT[2]);
WB1_ram_block1a9_PORT_B_address_reg = DFFE(WB1_ram_block1a9_PORT_B_address, WB1_ram_block1a9_clock_0, , , );
WB1_ram_block1a9_PORT_A_write_enable = D1L1;
WB1_ram_block1a9_PORT_A_write_enable_reg = DFFE(WB1_ram_block1a9_PORT_A_write_enable, WB1_ram_block1a9_clock_0, , , );
WB1_ram_block1a9_PORT_B_read_enable = VCC;
WB1_ram_block1a9_PORT_B_read_enable_reg = DFFE(WB1_ram_block1a9_PORT_B_read_enable, WB1_ram_block1a9_clock_0, , , );
WB1_ram_block1a9_PORT_A_byte_mask = VB1_UMWS;
WB1_ram_block1a9_PORT_A_byte_mask_reg = DFFE(WB1_ram_block1a9_PORT_A_byte_mask, WB1_ram_block1a9_clock_0, , , );
WB1_ram_block1a9_clock_0 = SCLK;
WB1_ram_block1a9_PORT_B_data_out = MEMORY(WB1_ram_block1a9_PORT_A_data_in_reg, , WB1_ram_block1a9_PORT_A_address_reg, WB1_ram_block1a9_PORT_B_address_reg, WB1_ram_block1a9_PORT_A_write_enable_reg, WB1_ram_block1a9_PORT_B_read_enable_reg, WB1_ram_block1a9_PORT_A_byte_mask_reg, , WB1_ram_block1a9_clock_0, , , , , );
WB1_ram_block1a9 = WB1_ram_block1a9_PORT_B_data_out[0];


--WB1_ram_block1a25 is fifo:int_fifo|altsyncram:BUFFER_rtl_0|altsyncram_faj1:auto_generated|ram_block1a25
--RAM Block Operation Mode: Simple Dual-Port
--Port A Depth: 8, Port A Width: 1, Port B Depth: 8, Port B Width: 1
--Port A Logical Depth: 8, Port A Logical Width: 32, Port B Logical Depth: 8, Port B Logical Width: 32
--Port A Input: Registered, Port B Input: Registered, Port B Output: Un-registered
WB1_ram_block1a25_PORT_A_data_in = H1L2;
WB1_ram_block1a25_PORT_A_data_in_reg = DFFE(WB1_ram_block1a25_PORT_A_data_in, WB1_ram_block1a25_clock_0, , , );
WB1_ram_block1a25_PORT_A_address = BUS(UB1_COUNT[0], UB1_COUNT[1], UB1_COUNT[2]);
WB1_ram_block1a25_PORT_A_address_reg = DFFE(WB1_ram_block1a25_PORT_A_address, WB1_ram_block1a25_clock_0, , , );
WB1_ram_block1a25_PORT_B_address = BUS(UB2_COUNT[0], UB2_COUNT[1], UB2_COUNT[2]);
WB1_ram_block1a25_PORT_B_address_reg = DFFE(WB1_ram_block1a25_PORT_B_address, WB1_ram_block1a25_clock_0, , , );
WB1_ram_block1a25_PORT_A_write_enable = D1L1;
WB1_ram_block1a25_PORT_A_write_enable_reg = DFFE(WB1_ram_block1a25_PORT_A_write_enable, WB1_ram_block1a25_clock_0, , , );
WB1_ram_block1a25_PORT_B_read_enable = VCC;
WB1_ram_block1a25_PORT_B_read_enable_reg = DFFE(WB1_ram_block1a25_PORT_B_read_enable, WB1_ram_block1a25_clock_0, , , );
WB1_ram_block1a25_PORT_A_byte_mask = VB1_LLWS;
WB1_ram_block1a25_PORT_A_byte_mask_reg = DFFE(WB1_ram_block1a25_PORT_A_byte_mask, WB1_ram_block1a25_clock_0, , , );
WB1_ram_block1a25_clock_0 = SCLK;
WB1_ram_block1a25_PORT_B_data_out = MEMORY(WB1_ram_block1a25_PORT_A_data_in_reg, , WB1_ram_block1a25_PORT_A_address_reg, WB1_ram_block1a25_PORT_B_address_reg, WB1_ram_block1a25_PORT_A_write_enable_reg, WB1_ram_block1a25_PORT_B_read_enable_reg, WB1_ram_block1a25_PORT_A_byte_mask_reg, , WB1_ram_block1a25_clock_0, , , , , );
WB1_ram_block1a25 = WB1_ram_block1a25_PORT_B_data_out[0];


--WB1_ram_block1a2 is fifo:int_fifo|altsyncram:BUFFER_rtl_0|altsyncram_faj1:auto_generated|ram_block1a2
--RAM Block Operation Mode: Simple Dual-Port
--Port A Depth: 8, Port A Width: 1, Port B Depth: 8, Port B Width: 1
--Port A Logical Depth: 8, Port A Logical Width: 32, Port B Logical Depth: 8, Port B Logical Width: 32
--Port A Input: Registered, Port B Input: Registered, Port B Output: Un-registered
WB1_ram_block1a2_PORT_A_data_in = A1L140;
WB1_ram_block1a2_PORT_A_data_in_reg = DFFE(WB1_ram_block1a2_PORT_A_data_in, WB1_ram_block1a2_clock_0, , , );
WB1_ram_block1a2_PORT_A_address = BUS(UB1_COUNT[0], UB1_COUNT[1], UB1_COUNT[2]);
WB1_ram_block1a2_PORT_A_address_reg = DFFE(WB1_ram_block1a2_PORT_A_address, WB1_ram_block1a2_clock_0, , , );
WB1_ram_block1a2_PORT_B_address = BUS(UB2_COUNT[0], UB2_COUNT[1], UB2_COUNT[2]);
WB1_ram_block1a2_PORT_B_address_reg = DFFE(WB1_ram_block1a2_PORT_B_address, WB1_ram_block1a2_clock_0, , , );
WB1_ram_block1a2_PORT_A_write_enable = D1L1;
WB1_ram_block1a2_PORT_A_write_enable_reg = DFFE(WB1_ram_block1a2_PORT_A_write_enable, WB1_ram_block1a2_clock_0, , , );
WB1_ram_block1a2_PORT_B_read_enable = VCC;
WB1_ram_block1a2_PORT_B_read_enable_reg = DFFE(WB1_ram_block1a2_PORT_B_read_enable, WB1_ram_block1a2_clock_0, , , );
WB1_ram_block1a2_PORT_A_byte_mask = VB1_UUWS;
WB1_ram_block1a2_PORT_A_byte_mask_reg = DFFE(WB1_ram_block1a2_PORT_A_byte_mask, WB1_ram_block1a2_clock_0, , , );
WB1_ram_block1a2_clock_0 = SCLK;
WB1_ram_block1a2_PORT_B_data_out = MEMORY(WB1_ram_block1a2_PORT_A_data_in_reg, , WB1_ram_block1a2_PORT_A_address_reg, WB1_ram_block1a2_PORT_B_address_reg, WB1_ram_block1a2_PORT_A_write_enable_reg, WB1_ram_block1a2_PORT_B_read_enable_reg, WB1_ram_block1a2_PORT_A_byte_mask_reg, , WB1_ram_block1a2_clock_0, , , , , );
WB1_ram_block1a2 = WB1_ram_block1a2_PORT_B_data_out[0];


--WB1_ram_block1a18 is fifo:int_fifo|altsyncram:BUFFER_rtl_0|altsyncram_faj1:auto_generated|ram_block1a18
--RAM Block Operation Mode: Simple Dual-Port
--Port A Depth: 8, Port A Width: 1, Port B Depth: 8, Port B Width: 1
--Port A Logical Depth: 8, Port A Logical Width: 32, Port B Logical Depth: 8, Port B Logical Width: 32
--Port A Input: Registered, Port B Input: Registered, Port B Output: Un-registered
WB1_ram_block1a18_PORT_A_data_in = A1L140;
WB1_ram_block1a18_PORT_A_data_in_reg = DFFE(WB1_ram_block1a18_PORT_A_data_in, WB1_ram_block1a18_clock_0, , , );
WB1_ram_block1a18_PORT_A_address = BUS(UB1_COUNT[0], UB1_COUNT[1], UB1_COUNT[2]);
WB1_ram_block1a18_PORT_A_address_reg = DFFE(WB1_ram_block1a18_PORT_A_address, WB1_ram_block1a18_clock_0, , , );
WB1_ram_block1a18_PORT_B_address = BUS(UB2_COUNT[0], UB2_COUNT[1], UB2_COUNT[2]);
WB1_ram_block1a18_PORT_B_address_reg = DFFE(WB1_ram_block1a18_PORT_B_address, WB1_ram_block1a18_clock_0, , , );
WB1_ram_block1a18_PORT_A_write_enable = D1L1;
WB1_ram_block1a18_PORT_A_write_enable_reg = DFFE(WB1_ram_block1a18_PORT_A_write_enable, WB1_ram_block1a18_clock_0, , , );
WB1_ram_block1a18_PORT_B_read_enable = VCC;
WB1_ram_block1a18_PORT_B_read_enable_reg = DFFE(WB1_ram_block1a18_PORT_B_read_enable, WB1_ram_block1a18_clock_0, , , );
WB1_ram_block1a18_PORT_A_byte_mask = VB1_LMWS;
WB1_ram_block1a18_PORT_A_byte_mask_reg = DFFE(WB1_ram_block1a18_PORT_A_byte_mask, WB1_ram_block1a18_clock_0, , , );
WB1_ram_block1a18_clock_0 = SCLK;
WB1_ram_block1a18_PORT_B_data_out = MEMORY(WB1_ram_block1a18_PORT_A_data_in_reg, , WB1_ram_block1a18_PORT_A_address_reg, WB1_ram_block1a18_PORT_B_address_reg, WB1_ram_block1a18_PORT_A_write_enable_reg, WB1_ram_block1a18_PORT_B_read_enable_reg, WB1_ram_block1a18_PORT_A_byte_mask_reg, , WB1_ram_block1a18_clock_0, , , , , );
WB1_ram_block1a18 = WB1_ram_block1a18_PORT_B_data_out[0];


--WB1_ram_block1a10 is fifo:int_fifo|altsyncram:BUFFER_rtl_0|altsyncram_faj1:auto_generated|ram_block1a10
--RAM Block Operation Mode: Simple Dual-Port
--Port A Depth: 8, Port A Width: 1, Port B Depth: 8, Port B Width: 1
--Port A Logical Depth: 8, Port A Logical Width: 32, Port B Logical Depth: 8, Port B Logical Width: 32
--Port A Input: Registered, Port B Input: Registered, Port B Output: Un-registered
WB1_ram_block1a10_PORT_A_data_in = A1L140;
WB1_ram_block1a10_PORT_A_data_in_reg = DFFE(WB1_ram_block1a10_PORT_A_data_in, WB1_ram_block1a10_clock_0, , , );
WB1_ram_block1a10_PORT_A_address = BUS(UB1_COUNT[0], UB1_COUNT[1], UB1_COUNT[2]);
WB1_ram_block1a10_PORT_A_address_reg = DFFE(WB1_ram_block1a10_PORT_A_address, WB1_ram_block1a10_clock_0, , , );
WB1_ram_block1a10_PORT_B_address = BUS(UB2_COUNT[0], UB2_COUNT[1], UB2_COUNT[2]);
WB1_ram_block1a10_PORT_B_address_reg = DFFE(WB1_ram_block1a10_PORT_B_address, WB1_ram_block1a10_clock_0, , , );
WB1_ram_block1a10_PORT_A_write_enable = D1L1;
WB1_ram_block1a10_PORT_A_write_enable_reg = DFFE(WB1_ram_block1a10_PORT_A_write_enable, WB1_ram_block1a10_clock_0, , , );
WB1_ram_block1a10_PORT_B_read_enable = VCC;
WB1_ram_block1a10_PORT_B_read_enable_reg = DFFE(WB1_ram_block1a10_PORT_B_read_enable, WB1_ram_block1a10_clock_0, , , );
WB1_ram_block1a10_PORT_A_byte_mask = VB1_UMWS;
WB1_ram_block1a10_PORT_A_byte_mask_reg = DFFE(WB1_ram_block1a10_PORT_A_byte_mask, WB1_ram_block1a10_clock_0, , , );
WB1_ram_block1a10_clock_0 = SCLK;
WB1_ram_block1a10_PORT_B_data_out = MEMORY(WB1_ram_block1a10_PORT_A_data_in_reg, , WB1_ram_block1a10_PORT_A_address_reg, WB1_ram_block1a10_PORT_B_address_reg, WB1_ram_block1a10_PORT_A_write_enable_reg, WB1_ram_block1a10_PORT_B_read_enable_reg, WB1_ram_block1a10_PORT_A_byte_mask_reg, , WB1_ram_block1a10_clock_0, , , , , );
WB1_ram_block1a10 = WB1_ram_block1a10_PORT_B_data_out[0];


--WB1_ram_block1a26 is fifo:int_fifo|altsyncram:BUFFER_rtl_0|altsyncram_faj1:auto_generated|ram_block1a26
--RAM Block Operation Mode: Simple Dual-Port
--Port A Depth: 8, Port A Width: 1, Port B Depth: 8, Port B Width: 1
--Port A Logical Depth: 8, Port A Logical Width: 32, Port B Logical Depth: 8, Port B Logical Width: 32
--Port A Input: Registered, Port B Input: Registered, Port B Output: Un-registered
WB1_ram_block1a26_PORT_A_data_in = H1L3;
WB1_ram_block1a26_PORT_A_data_in_reg = DFFE(WB1_ram_block1a26_PORT_A_data_in, WB1_ram_block1a26_clock_0, , , );
WB1_ram_block1a26_PORT_A_address = BUS(UB1_COUNT[0], UB1_COUNT[1], UB1_COUNT[2]);
WB1_ram_block1a26_PORT_A_address_reg = DFFE(WB1_ram_block1a26_PORT_A_address, WB1_ram_block1a26_clock_0, , , );
WB1_ram_block1a26_PORT_B_address = BUS(UB2_COUNT[0], UB2_COUNT[1], UB2_COUNT[2]);
WB1_ram_block1a26_PORT_B_address_reg = DFFE(WB1_ram_block1a26_PORT_B_address, WB1_ram_block1a26_clock_0, , , );
WB1_ram_block1a26_PORT_A_write_enable = D1L1;
WB1_ram_block1a26_PORT_A_write_enable_reg = DFFE(WB1_ram_block1a26_PORT_A_write_enable, WB1_ram_block1a26_clock_0, , , );
WB1_ram_block1a26_PORT_B_read_enable = VCC;
WB1_ram_block1a26_PORT_B_read_enable_reg = DFFE(WB1_ram_block1a26_PORT_B_read_enable, WB1_ram_block1a26_clock_0, , , );
WB1_ram_block1a26_PORT_A_byte_mask = VB1_LLWS;
WB1_ram_block1a26_PORT_A_byte_mask_reg = DFFE(WB1_ram_block1a26_PORT_A_byte_mask, WB1_ram_block1a26_clock_0, , , );
WB1_ram_block1a26_clock_0 = SCLK;
WB1_ram_block1a26_PORT_B_data_out = MEMORY(WB1_ram_block1a26_PORT_A_data_in_reg, , WB1_ram_block1a26_PORT_A_address_reg, WB1_ram_block1a26_PORT_B_address_reg, WB1_ram_block1a26_PORT_A_write_enable_reg, WB1_ram_block1a26_PORT_B_read_enable_reg, WB1_ram_block1a26_PORT_A_byte_mask_reg, , WB1_ram_block1a26_clock_0, , , , , );
WB1_ram_block1a26 = WB1_ram_block1a26_PORT_B_data_out[0];


--WB1_ram_block1a3 is fifo:int_fifo|altsyncram:BUFFER_rtl_0|altsyncram_faj1:auto_generated|ram_block1a3
--RAM Block Operation Mode: Simple Dual-Port
--Port A Depth: 8, Port A Width: 1, Port B Depth: 8, Port B Width: 1
--Port A Logical Depth: 8, Port A Logical Width: 32, Port B Logical Depth: 8, Port B Logical Width: 32
--Port A Input: Registered, Port B Input: Registered, Port B Output: Un-registered
WB1_ram_block1a3_PORT_A_data_in = A1L140;
WB1_ram_block1a3_PORT_A_data_in_reg = DFFE(WB1_ram_block1a3_PORT_A_data_in, WB1_ram_block1a3_clock_0, , , );
WB1_ram_block1a3_PORT_A_address = BUS(UB1_COUNT[0], UB1_COUNT[1], UB1_COUNT[2]);
WB1_ram_block1a3_PORT_A_address_reg = DFFE(WB1_ram_block1a3_PORT_A_address, WB1_ram_block1a3_clock_0, , , );
WB1_ram_block1a3_PORT_B_address = BUS(UB2_COUNT[0], UB2_COUNT[1], UB2_COUNT[2]);
WB1_ram_block1a3_PORT_B_address_reg = DFFE(WB1_ram_block1a3_PORT_B_address, WB1_ram_block1a3_clock_0, , , );
WB1_ram_block1a3_PORT_A_write_enable = D1L1;
WB1_ram_block1a3_PORT_A_write_enable_reg = DFFE(WB1_ram_block1a3_PORT_A_write_enable, WB1_ram_block1a3_clock_0, , , );
WB1_ram_block1a3_PORT_B_read_enable = VCC;
WB1_ram_block1a3_PORT_B_read_enable_reg = DFFE(WB1_ram_block1a3_PORT_B_read_enable, WB1_ram_block1a3_clock_0, , , );
WB1_ram_block1a3_PORT_A_byte_mask = VB1_UUWS;
WB1_ram_block1a3_PORT_A_byte_mask_reg = DFFE(WB1_ram_block1a3_PORT_A_byte_mask, WB1_ram_block1a3_clock_0, , , );
WB1_ram_block1a3_clock_0 = SCLK;
WB1_ram_block1a3_PORT_B_data_out = MEMORY(WB1_ram_block1a3_PORT_A_data_in_reg, , WB1_ram_block1a3_PORT_A_address_reg, WB1_ram_block1a3_PORT_B_address_reg, WB1_ram_block1a3_PORT_A_write_enable_reg, WB1_ram_block1a3_PORT_B_read_enable_reg, WB1_ram_block1a3_PORT_A_byte_mask_reg, , WB1_ram_block1a3_clock_0, , , , , );
WB1_ram_block1a3 = WB1_ram_block1a3_PORT_B_data_out[0];


--WB1_ram_block1a19 is fifo:int_fifo|altsyncram:BUFFER_rtl_0|altsyncram_faj1:auto_generated|ram_block1a19
--RAM Block Operation Mode: Simple Dual-Port
--Port A Depth: 8, Port A Width: 1, Port B Depth: 8, Port B Width: 1
--Port A Logical Depth: 8, Port A Logical Width: 32, Port B Logical Depth: 8, Port B Logical Width: 32
--Port A Input: Registered, Port B Input: Registered, Port B Output: Un-registered
WB1_ram_block1a19_PORT_A_data_in = A1L140;
WB1_ram_block1a19_PORT_A_data_in_reg = DFFE(WB1_ram_block1a19_PORT_A_data_in, WB1_ram_block1a19_clock_0, , , );
WB1_ram_block1a19_PORT_A_address = BUS(UB1_COUNT[0], UB1_COUNT[1], UB1_COUNT[2]);
WB1_ram_block1a19_PORT_A_address_reg = DFFE(WB1_ram_block1a19_PORT_A_address, WB1_ram_block1a19_clock_0, , , );
WB1_ram_block1a19_PORT_B_address = BUS(UB2_COUNT[0], UB2_COUNT[1], UB2_COUNT[2]);
WB1_ram_block1a19_PORT_B_address_reg = DFFE(WB1_ram_block1a19_PORT_B_address, WB1_ram_block1a19_clock_0, , , );
WB1_ram_block1a19_PORT_A_write_enable = D1L1;
WB1_ram_block1a19_PORT_A_write_enable_reg = DFFE(WB1_ram_block1a19_PORT_A_write_enable, WB1_ram_block1a19_clock_0, , , );
WB1_ram_block1a19_PORT_B_read_enable = VCC;
WB1_ram_block1a19_PORT_B_read_enable_reg = DFFE(WB1_ram_block1a19_PORT_B_read_enable, WB1_ram_block1a19_clock_0, , , );
WB1_ram_block1a19_PORT_A_byte_mask = VB1_LMWS;
WB1_ram_block1a19_PORT_A_byte_mask_reg = DFFE(WB1_ram_block1a19_PORT_A_byte_mask, WB1_ram_block1a19_clock_0, , , );
WB1_ram_block1a19_clock_0 = SCLK;
WB1_ram_block1a19_PORT_B_data_out = MEMORY(WB1_ram_block1a19_PORT_A_data_in_reg, , WB1_ram_block1a19_PORT_A_address_reg, WB1_ram_block1a19_PORT_B_address_reg, WB1_ram_block1a19_PORT_A_write_enable_reg, WB1_ram_block1a19_PORT_B_read_enable_reg, WB1_ram_block1a19_PORT_A_byte_mask_reg, , WB1_ram_block1a19_clock_0, , , , , );
WB1_ram_block1a19 = WB1_ram_block1a19_PORT_B_data_out[0];


--WB1_ram_block1a11 is fifo:int_fifo|altsyncram:BUFFER_rtl_0|altsyncram_faj1:auto_generated|ram_block1a11
--RAM Block Operation Mode: Simple Dual-Port
--Port A Depth: 8, Port A Width: 1, Port B Depth: 8, Port B Width: 1
--Port A Logical Depth: 8, Port A Logical Width: 32, Port B Logical Depth: 8, Port B Logical Width: 32
--Port A Input: Registered, Port B Input: Registered, Port B Output: Un-registered
WB1_ram_block1a11_PORT_A_data_in = A1L140;
WB1_ram_block1a11_PORT_A_data_in_reg = DFFE(WB1_ram_block1a11_PORT_A_data_in, WB1_ram_block1a11_clock_0, , , );
WB1_ram_block1a11_PORT_A_address = BUS(UB1_COUNT[0], UB1_COUNT[1], UB1_COUNT[2]);
WB1_ram_block1a11_PORT_A_address_reg = DFFE(WB1_ram_block1a11_PORT_A_address, WB1_ram_block1a11_clock_0, , , );
WB1_ram_block1a11_PORT_B_address = BUS(UB2_COUNT[0], UB2_COUNT[1], UB2_COUNT[2]);
WB1_ram_block1a11_PORT_B_address_reg = DFFE(WB1_ram_block1a11_PORT_B_address, WB1_ram_block1a11_clock_0, , , );
WB1_ram_block1a11_PORT_A_write_enable = D1L1;
WB1_ram_block1a11_PORT_A_write_enable_reg = DFFE(WB1_ram_block1a11_PORT_A_write_enable, WB1_ram_block1a11_clock_0, , , );
WB1_ram_block1a11_PORT_B_read_enable = VCC;
WB1_ram_block1a11_PORT_B_read_enable_reg = DFFE(WB1_ram_block1a11_PORT_B_read_enable, WB1_ram_block1a11_clock_0, , , );
WB1_ram_block1a11_PORT_A_byte_mask = VB1_UMWS;
WB1_ram_block1a11_PORT_A_byte_mask_reg = DFFE(WB1_ram_block1a11_PORT_A_byte_mask, WB1_ram_block1a11_clock_0, , , );
WB1_ram_block1a11_clock_0 = SCLK;
WB1_ram_block1a11_PORT_B_data_out = MEMORY(WB1_ram_block1a11_PORT_A_data_in_reg, , WB1_ram_block1a11_PORT_A_address_reg, WB1_ram_block1a11_PORT_B_address_reg, WB1_ram_block1a11_PORT_A_write_enable_reg, WB1_ram_block1a11_PORT_B_read_enable_reg, WB1_ram_block1a11_PORT_A_byte_mask_reg, , WB1_ram_block1a11_clock_0, , , , , );
WB1_ram_block1a11 = WB1_ram_block1a11_PORT_B_data_out[0];


--WB1_ram_block1a27 is fifo:int_fifo|altsyncram:BUFFER_rtl_0|altsyncram_faj1:auto_generated|ram_block1a27
--RAM Block Operation Mode: Simple Dual-Port
--Port A Depth: 8, Port A Width: 1, Port B Depth: 8, Port B Width: 1
--Port A Logical Depth: 8, Port A Logical Width: 32, Port B Logical Depth: 8, Port B Logical Width: 32
--Port A Input: Registered, Port B Input: Registered, Port B Output: Un-registered
WB1_ram_block1a27_PORT_A_data_in = H1L4;
WB1_ram_block1a27_PORT_A_data_in_reg = DFFE(WB1_ram_block1a27_PORT_A_data_in, WB1_ram_block1a27_clock_0, , , );
WB1_ram_block1a27_PORT_A_address = BUS(UB1_COUNT[0], UB1_COUNT[1], UB1_COUNT[2]);
WB1_ram_block1a27_PORT_A_address_reg = DFFE(WB1_ram_block1a27_PORT_A_address, WB1_ram_block1a27_clock_0, , , );
WB1_ram_block1a27_PORT_B_address = BUS(UB2_COUNT[0], UB2_COUNT[1], UB2_COUNT[2]);
WB1_ram_block1a27_PORT_B_address_reg = DFFE(WB1_ram_block1a27_PORT_B_address, WB1_ram_block1a27_clock_0, , , );
WB1_ram_block1a27_PORT_A_write_enable = D1L1;
WB1_ram_block1a27_PORT_A_write_enable_reg = DFFE(WB1_ram_block1a27_PORT_A_write_enable, WB1_ram_block1a27_clock_0, , , );
WB1_ram_block1a27_PORT_B_read_enable = VCC;
WB1_ram_block1a27_PORT_B_read_enable_reg = DFFE(WB1_ram_block1a27_PORT_B_read_enable, WB1_ram_block1a27_clock_0, , , );
WB1_ram_block1a27_PORT_A_byte_mask = VB1_LLWS;
WB1_ram_block1a27_PORT_A_byte_mask_reg = DFFE(WB1_ram_block1a27_PORT_A_byte_mask, WB1_ram_block1a27_clock_0, , , );
WB1_ram_block1a27_clock_0 = SCLK;
WB1_ram_block1a27_PORT_B_data_out = MEMORY(WB1_ram_block1a27_PORT_A_data_in_reg, , WB1_ram_block1a27_PORT_A_address_reg, WB1_ram_block1a27_PORT_B_address_reg, WB1_ram_block1a27_PORT_A_write_enable_reg, WB1_ram_block1a27_PORT_B_read_enable_reg, WB1_ram_block1a27_PORT_A_byte_mask_reg, , WB1_ram_block1a27_clock_0, , , , , );
WB1_ram_block1a27 = WB1_ram_block1a27_PORT_B_data_out[0];


--WB1_ram_block1a4 is fifo:int_fifo|altsyncram:BUFFER_rtl_0|altsyncram_faj1:auto_generated|ram_block1a4
--RAM Block Operation Mode: Simple Dual-Port
--Port A Depth: 8, Port A Width: 1, Port B Depth: 8, Port B Width: 1
--Port A Logical Depth: 8, Port A Logical Width: 32, Port B Logical Depth: 8, Port B Logical Width: 32
--Port A Input: Registered, Port B Input: Registered, Port B Output: Un-registered
WB1_ram_block1a4_PORT_A_data_in = A1L140;
WB1_ram_block1a4_PORT_A_data_in_reg = DFFE(WB1_ram_block1a4_PORT_A_data_in, WB1_ram_block1a4_clock_0, , , );
WB1_ram_block1a4_PORT_A_address = BUS(UB1_COUNT[0], UB1_COUNT[1], UB1_COUNT[2]);
WB1_ram_block1a4_PORT_A_address_reg = DFFE(WB1_ram_block1a4_PORT_A_address, WB1_ram_block1a4_clock_0, , , );
WB1_ram_block1a4_PORT_B_address = BUS(UB2_COUNT[0], UB2_COUNT[1], UB2_COUNT[2]);
WB1_ram_block1a4_PORT_B_address_reg = DFFE(WB1_ram_block1a4_PORT_B_address, WB1_ram_block1a4_clock_0, , , );
WB1_ram_block1a4_PORT_A_write_enable = D1L1;
WB1_ram_block1a4_PORT_A_write_enable_reg = DFFE(WB1_ram_block1a4_PORT_A_write_enable, WB1_ram_block1a4_clock_0, , , );
WB1_ram_block1a4_PORT_B_read_enable = VCC;
WB1_ram_block1a4_PORT_B_read_enable_reg = DFFE(WB1_ram_block1a4_PORT_B_read_enable, WB1_ram_block1a4_clock_0, , , );
WB1_ram_block1a4_PORT_A_byte_mask = VB1_UUWS;
WB1_ram_block1a4_PORT_A_byte_mask_reg = DFFE(WB1_ram_block1a4_PORT_A_byte_mask, WB1_ram_block1a4_clock_0, , , );
WB1_ram_block1a4_clock_0 = SCLK;
WB1_ram_block1a4_PORT_B_data_out = MEMORY(WB1_ram_block1a4_PORT_A_data_in_reg, , WB1_ram_block1a4_PORT_A_address_reg, WB1_ram_block1a4_PORT_B_address_reg, WB1_ram_block1a4_PORT_A_write_enable_reg, WB1_ram_block1a4_PORT_B_read_enable_reg, WB1_ram_block1a4_PORT_A_byte_mask_reg, , WB1_ram_block1a4_clock_0, , , , , );
WB1_ram_block1a4 = WB1_ram_block1a4_PORT_B_data_out[0];


--WB1_ram_block1a20 is fifo:int_fifo|altsyncram:BUFFER_rtl_0|altsyncram_faj1:auto_generated|ram_block1a20
--RAM Block Operation Mode: Simple Dual-Port
--Port A Depth: 8, Port A Width: 1, Port B Depth: 8, Port B Width: 1
--Port A Logical Depth: 8, Port A Logical Width: 32, Port B Logical Depth: 8, Port B Logical Width: 32
--Port A Input: Registered, Port B Input: Registered, Port B Output: Un-registered
WB1_ram_block1a20_PORT_A_data_in = A1L140;
WB1_ram_block1a20_PORT_A_data_in_reg = DFFE(WB1_ram_block1a20_PORT_A_data_in, WB1_ram_block1a20_clock_0, , , );
WB1_ram_block1a20_PORT_A_address = BUS(UB1_COUNT[0], UB1_COUNT[1], UB1_COUNT[2]);
WB1_ram_block1a20_PORT_A_address_reg = DFFE(WB1_ram_block1a20_PORT_A_address, WB1_ram_block1a20_clock_0, , , );
WB1_ram_block1a20_PORT_B_address = BUS(UB2_COUNT[0], UB2_COUNT[1], UB2_COUNT[2]);
WB1_ram_block1a20_PORT_B_address_reg = DFFE(WB1_ram_block1a20_PORT_B_address, WB1_ram_block1a20_clock_0, , , );
WB1_ram_block1a20_PORT_A_write_enable = D1L1;
WB1_ram_block1a20_PORT_A_write_enable_reg = DFFE(WB1_ram_block1a20_PORT_A_write_enable, WB1_ram_block1a20_clock_0, , , );
WB1_ram_block1a20_PORT_B_read_enable = VCC;
WB1_ram_block1a20_PORT_B_read_enable_reg = DFFE(WB1_ram_block1a20_PORT_B_read_enable, WB1_ram_block1a20_clock_0, , , );
WB1_ram_block1a20_PORT_A_byte_mask = VB1_LMWS;
WB1_ram_block1a20_PORT_A_byte_mask_reg = DFFE(WB1_ram_block1a20_PORT_A_byte_mask, WB1_ram_block1a20_clock_0, , , );
WB1_ram_block1a20_clock_0 = SCLK;
WB1_ram_block1a20_PORT_B_data_out = MEMORY(WB1_ram_block1a20_PORT_A_data_in_reg, , WB1_ram_block1a20_PORT_A_address_reg, WB1_ram_block1a20_PORT_B_address_reg, WB1_ram_block1a20_PORT_A_write_enable_reg, WB1_ram_block1a20_PORT_B_read_enable_reg, WB1_ram_block1a20_PORT_A_byte_mask_reg, , WB1_ram_block1a20_clock_0, , , , , );
WB1_ram_block1a20 = WB1_ram_block1a20_PORT_B_data_out[0];


--WB1_ram_block1a12 is fifo:int_fifo|altsyncram:BUFFER_rtl_0|altsyncram_faj1:auto_generated|ram_block1a12
--RAM Block Operation Mode: Simple Dual-Port
--Port A Depth: 8, Port A Width: 1, Port B Depth: 8, Port B Width: 1
--Port A Logical Depth: 8, Port A Logical Width: 32, Port B Logical Depth: 8, Port B Logical Width: 32
--Port A Input: Registered, Port B Input: Registered, Port B Output: Un-registered
WB1_ram_block1a12_PORT_A_data_in = A1L140;
WB1_ram_block1a12_PORT_A_data_in_reg = DFFE(WB1_ram_block1a12_PORT_A_data_in, WB1_ram_block1a12_clock_0, , , );
WB1_ram_block1a12_PORT_A_address = BUS(UB1_COUNT[0], UB1_COUNT[1], UB1_COUNT[2]);
WB1_ram_block1a12_PORT_A_address_reg = DFFE(WB1_ram_block1a12_PORT_A_address, WB1_ram_block1a12_clock_0, , , );
WB1_ram_block1a12_PORT_B_address = BUS(UB2_COUNT[0], UB2_COUNT[1], UB2_COUNT[2]);
WB1_ram_block1a12_PORT_B_address_reg = DFFE(WB1_ram_block1a12_PORT_B_address, WB1_ram_block1a12_clock_0, , , );
WB1_ram_block1a12_PORT_A_write_enable = D1L1;
WB1_ram_block1a12_PORT_A_write_enable_reg = DFFE(WB1_ram_block1a12_PORT_A_write_enable, WB1_ram_block1a12_clock_0, , , );
WB1_ram_block1a12_PORT_B_read_enable = VCC;
WB1_ram_block1a12_PORT_B_read_enable_reg = DFFE(WB1_ram_block1a12_PORT_B_read_enable, WB1_ram_block1a12_clock_0, , , );
WB1_ram_block1a12_PORT_A_byte_mask = VB1_UMWS;
WB1_ram_block1a12_PORT_A_byte_mask_reg = DFFE(WB1_ram_block1a12_PORT_A_byte_mask, WB1_ram_block1a12_clock_0, , , );
WB1_ram_block1a12_clock_0 = SCLK;
WB1_ram_block1a12_PORT_B_data_out = MEMORY(WB1_ram_block1a12_PORT_A_data_in_reg, , WB1_ram_block1a12_PORT_A_address_reg, WB1_ram_block1a12_PORT_B_address_reg, WB1_ram_block1a12_PORT_A_write_enable_reg, WB1_ram_block1a12_PORT_B_read_enable_reg, WB1_ram_block1a12_PORT_A_byte_mask_reg, , WB1_ram_block1a12_clock_0, , , , , );
WB1_ram_block1a12 = WB1_ram_block1a12_PORT_B_data_out[0];


--WB1_ram_block1a28 is fifo:int_fifo|altsyncram:BUFFER_rtl_0|altsyncram_faj1:auto_generated|ram_block1a28
--RAM Block Operation Mode: Simple Dual-Port
--Port A Depth: 8, Port A Width: 1, Port B Depth: 8, Port B Width: 1
--Port A Logical Depth: 8, Port A Logical Width: 32, Port B Logical Depth: 8, Port B Logical Width: 32
--Port A Input: Registered, Port B Input: Registered, Port B Output: Un-registered
WB1_ram_block1a28_PORT_A_data_in = H1L5;
WB1_ram_block1a28_PORT_A_data_in_reg = DFFE(WB1_ram_block1a28_PORT_A_data_in, WB1_ram_block1a28_clock_0, , , );
WB1_ram_block1a28_PORT_A_address = BUS(UB1_COUNT[0], UB1_COUNT[1], UB1_COUNT[2]);
WB1_ram_block1a28_PORT_A_address_reg = DFFE(WB1_ram_block1a28_PORT_A_address, WB1_ram_block1a28_clock_0, , , );
WB1_ram_block1a28_PORT_B_address = BUS(UB2_COUNT[0], UB2_COUNT[1], UB2_COUNT[2]);
WB1_ram_block1a28_PORT_B_address_reg = DFFE(WB1_ram_block1a28_PORT_B_address, WB1_ram_block1a28_clock_0, , , );
WB1_ram_block1a28_PORT_A_write_enable = D1L1;
WB1_ram_block1a28_PORT_A_write_enable_reg = DFFE(WB1_ram_block1a28_PORT_A_write_enable, WB1_ram_block1a28_clock_0, , , );
WB1_ram_block1a28_PORT_B_read_enable = VCC;
WB1_ram_block1a28_PORT_B_read_enable_reg = DFFE(WB1_ram_block1a28_PORT_B_read_enable, WB1_ram_block1a28_clock_0, , , );
WB1_ram_block1a28_PORT_A_byte_mask = VB1_LLWS;
WB1_ram_block1a28_PORT_A_byte_mask_reg = DFFE(WB1_ram_block1a28_PORT_A_byte_mask, WB1_ram_block1a28_clock_0, , , );
WB1_ram_block1a28_clock_0 = SCLK;
WB1_ram_block1a28_PORT_B_data_out = MEMORY(WB1_ram_block1a28_PORT_A_data_in_reg, , WB1_ram_block1a28_PORT_A_address_reg, WB1_ram_block1a28_PORT_B_address_reg, WB1_ram_block1a28_PORT_A_write_enable_reg, WB1_ram_block1a28_PORT_B_read_enable_reg, WB1_ram_block1a28_PORT_A_byte_mask_reg, , WB1_ram_block1a28_clock_0, , , , , );
WB1_ram_block1a28 = WB1_ram_block1a28_PORT_B_data_out[0];


--WB1_ram_block1a5 is fifo:int_fifo|altsyncram:BUFFER_rtl_0|altsyncram_faj1:auto_generated|ram_block1a5
--RAM Block Operation Mode: Simple Dual-Port
--Port A Depth: 8, Port A Width: 1, Port B Depth: 8, Port B Width: 1
--Port A Logical Depth: 8, Port A Logical Width: 32, Port B Logical Depth: 8, Port B Logical Width: 32
--Port A Input: Registered, Port B Input: Registered, Port B Output: Un-registered
WB1_ram_block1a5_PORT_A_data_in = A1L140;
WB1_ram_block1a5_PORT_A_data_in_reg = DFFE(WB1_ram_block1a5_PORT_A_data_in, WB1_ram_block1a5_clock_0, , , );
WB1_ram_block1a5_PORT_A_address = BUS(UB1_COUNT[0], UB1_COUNT[1], UB1_COUNT[2]);
WB1_ram_block1a5_PORT_A_address_reg = DFFE(WB1_ram_block1a5_PORT_A_address, WB1_ram_block1a5_clock_0, , , );
WB1_ram_block1a5_PORT_B_address = BUS(UB2_COUNT[0], UB2_COUNT[1], UB2_COUNT[2]);
WB1_ram_block1a5_PORT_B_address_reg = DFFE(WB1_ram_block1a5_PORT_B_address, WB1_ram_block1a5_clock_0, , , );
WB1_ram_block1a5_PORT_A_write_enable = D1L1;
WB1_ram_block1a5_PORT_A_write_enable_reg = DFFE(WB1_ram_block1a5_PORT_A_write_enable, WB1_ram_block1a5_clock_0, , , );
WB1_ram_block1a5_PORT_B_read_enable = VCC;
WB1_ram_block1a5_PORT_B_read_enable_reg = DFFE(WB1_ram_block1a5_PORT_B_read_enable, WB1_ram_block1a5_clock_0, , , );
WB1_ram_block1a5_PORT_A_byte_mask = VB1_UUWS;
WB1_ram_block1a5_PORT_A_byte_mask_reg = DFFE(WB1_ram_block1a5_PORT_A_byte_mask, WB1_ram_block1a5_clock_0, , , );
WB1_ram_block1a5_clock_0 = SCLK;
WB1_ram_block1a5_PORT_B_data_out = MEMORY(WB1_ram_block1a5_PORT_A_data_in_reg, , WB1_ram_block1a5_PORT_A_address_reg, WB1_ram_block1a5_PORT_B_address_reg, WB1_ram_block1a5_PORT_A_write_enable_reg, WB1_ram_block1a5_PORT_B_read_enable_reg, WB1_ram_block1a5_PORT_A_byte_mask_reg, , WB1_ram_block1a5_clock_0, , , , , );
WB1_ram_block1a5 = WB1_ram_block1a5_PORT_B_data_out[0];


--WB1_ram_block1a21 is fifo:int_fifo|altsyncram:BUFFER_rtl_0|altsyncram_faj1:auto_generated|ram_block1a21
--RAM Block Operation Mode: Simple Dual-Port
--Port A Depth: 8, Port A Width: 1, Port B Depth: 8, Port B Width: 1
--Port A Logical Depth: 8, Port A Logical Width: 32, Port B Logical Depth: 8, Port B Logical Width: 32
--Port A Input: Registered, Port B Input: Registered, Port B Output: Un-registered
WB1_ram_block1a21_PORT_A_data_in = A1L140;
WB1_ram_block1a21_PORT_A_data_in_reg = DFFE(WB1_ram_block1a21_PORT_A_data_in, WB1_ram_block1a21_clock_0, , , );
WB1_ram_block1a21_PORT_A_address = BUS(UB1_COUNT[0], UB1_COUNT[1], UB1_COUNT[2]);
WB1_ram_block1a21_PORT_A_address_reg = DFFE(WB1_ram_block1a21_PORT_A_address, WB1_ram_block1a21_clock_0, , , );
WB1_ram_block1a21_PORT_B_address = BUS(UB2_COUNT[0], UB2_COUNT[1], UB2_COUNT[2]);
WB1_ram_block1a21_PORT_B_address_reg = DFFE(WB1_ram_block1a21_PORT_B_address, WB1_ram_block1a21_clock_0, , , );
WB1_ram_block1a21_PORT_A_write_enable = D1L1;
WB1_ram_block1a21_PORT_A_write_enable_reg = DFFE(WB1_ram_block1a21_PORT_A_write_enable, WB1_ram_block1a21_clock_0, , , );
WB1_ram_block1a21_PORT_B_read_enable = VCC;
WB1_ram_block1a21_PORT_B_read_enable_reg = DFFE(WB1_ram_block1a21_PORT_B_read_enable, WB1_ram_block1a21_clock_0, , , );
WB1_ram_block1a21_PORT_A_byte_mask = VB1_LMWS;
WB1_ram_block1a21_PORT_A_byte_mask_reg = DFFE(WB1_ram_block1a21_PORT_A_byte_mask, WB1_ram_block1a21_clock_0, , , );
WB1_ram_block1a21_clock_0 = SCLK;
WB1_ram_block1a21_PORT_B_data_out = MEMORY(WB1_ram_block1a21_PORT_A_data_in_reg, , WB1_ram_block1a21_PORT_A_address_reg, WB1_ram_block1a21_PORT_B_address_reg, WB1_ram_block1a21_PORT_A_write_enable_reg, WB1_ram_block1a21_PORT_B_read_enable_reg, WB1_ram_block1a21_PORT_A_byte_mask_reg, , WB1_ram_block1a21_clock_0, , , , , );
WB1_ram_block1a21 = WB1_ram_block1a21_PORT_B_data_out[0];


--WB1_ram_block1a13 is fifo:int_fifo|altsyncram:BUFFER_rtl_0|altsyncram_faj1:auto_generated|ram_block1a13
--RAM Block Operation Mode: Simple Dual-Port
--Port A Depth: 8, Port A Width: 1, Port B Depth: 8, Port B Width: 1
--Port A Logical Depth: 8, Port A Logical Width: 32, Port B Logical Depth: 8, Port B Logical Width: 32
--Port A Input: Registered, Port B Input: Registered, Port B Output: Un-registered
WB1_ram_block1a13_PORT_A_data_in = A1L140;
WB1_ram_block1a13_PORT_A_data_in_reg = DFFE(WB1_ram_block1a13_PORT_A_data_in, WB1_ram_block1a13_clock_0, , , );
WB1_ram_block1a13_PORT_A_address = BUS(UB1_COUNT[0], UB1_COUNT[1], UB1_COUNT[2]);
WB1_ram_block1a13_PORT_A_address_reg = DFFE(WB1_ram_block1a13_PORT_A_address, WB1_ram_block1a13_clock_0, , , );
WB1_ram_block1a13_PORT_B_address = BUS(UB2_COUNT[0], UB2_COUNT[1], UB2_COUNT[2]);
WB1_ram_block1a13_PORT_B_address_reg = DFFE(WB1_ram_block1a13_PORT_B_address, WB1_ram_block1a13_clock_0, , , );
WB1_ram_block1a13_PORT_A_write_enable = D1L1;
WB1_ram_block1a13_PORT_A_write_enable_reg = DFFE(WB1_ram_block1a13_PORT_A_write_enable, WB1_ram_block1a13_clock_0, , , );
WB1_ram_block1a13_PORT_B_read_enable = VCC;
WB1_ram_block1a13_PORT_B_read_enable_reg = DFFE(WB1_ram_block1a13_PORT_B_read_enable, WB1_ram_block1a13_clock_0, , , );
WB1_ram_block1a13_PORT_A_byte_mask = VB1_UMWS;
WB1_ram_block1a13_PORT_A_byte_mask_reg = DFFE(WB1_ram_block1a13_PORT_A_byte_mask, WB1_ram_block1a13_clock_0, , , );
WB1_ram_block1a13_clock_0 = SCLK;
WB1_ram_block1a13_PORT_B_data_out = MEMORY(WB1_ram_block1a13_PORT_A_data_in_reg, , WB1_ram_block1a13_PORT_A_address_reg, WB1_ram_block1a13_PORT_B_address_reg, WB1_ram_block1a13_PORT_A_write_enable_reg, WB1_ram_block1a13_PORT_B_read_enable_reg, WB1_ram_block1a13_PORT_A_byte_mask_reg, , WB1_ram_block1a13_clock_0, , , , , );
WB1_ram_block1a13 = WB1_ram_block1a13_PORT_B_data_out[0];


--WB1_ram_block1a29 is fifo:int_fifo|altsyncram:BUFFER_rtl_0|altsyncram_faj1:auto_generated|ram_block1a29
--RAM Block Operation Mode: Simple Dual-Port
--Port A Depth: 8, Port A Width: 1, Port B Depth: 8, Port B Width: 1
--Port A Logical Depth: 8, Port A Logical Width: 32, Port B Logical Depth: 8, Port B Logical Width: 32
--Port A Input: Registered, Port B Input: Registered, Port B Output: Un-registered
WB1_ram_block1a29_PORT_A_data_in = H1L6;
WB1_ram_block1a29_PORT_A_data_in_reg = DFFE(WB1_ram_block1a29_PORT_A_data_in, WB1_ram_block1a29_clock_0, , , );
WB1_ram_block1a29_PORT_A_address = BUS(UB1_COUNT[0], UB1_COUNT[1], UB1_COUNT[2]);
WB1_ram_block1a29_PORT_A_address_reg = DFFE(WB1_ram_block1a29_PORT_A_address, WB1_ram_block1a29_clock_0, , , );
WB1_ram_block1a29_PORT_B_address = BUS(UB2_COUNT[0], UB2_COUNT[1], UB2_COUNT[2]);
WB1_ram_block1a29_PORT_B_address_reg = DFFE(WB1_ram_block1a29_PORT_B_address, WB1_ram_block1a29_clock_0, , , );
WB1_ram_block1a29_PORT_A_write_enable = D1L1;
WB1_ram_block1a29_PORT_A_write_enable_reg = DFFE(WB1_ram_block1a29_PORT_A_write_enable, WB1_ram_block1a29_clock_0, , , );
WB1_ram_block1a29_PORT_B_read_enable = VCC;
WB1_ram_block1a29_PORT_B_read_enable_reg = DFFE(WB1_ram_block1a29_PORT_B_read_enable, WB1_ram_block1a29_clock_0, , , );
WB1_ram_block1a29_PORT_A_byte_mask = VB1_LLWS;
WB1_ram_block1a29_PORT_A_byte_mask_reg = DFFE(WB1_ram_block1a29_PORT_A_byte_mask, WB1_ram_block1a29_clock_0, , , );
WB1_ram_block1a29_clock_0 = SCLK;
WB1_ram_block1a29_PORT_B_data_out = MEMORY(WB1_ram_block1a29_PORT_A_data_in_reg, , WB1_ram_block1a29_PORT_A_address_reg, WB1_ram_block1a29_PORT_B_address_reg, WB1_ram_block1a29_PORT_A_write_enable_reg, WB1_ram_block1a29_PORT_B_read_enable_reg, WB1_ram_block1a29_PORT_A_byte_mask_reg, , WB1_ram_block1a29_clock_0, , , , , );
WB1_ram_block1a29 = WB1_ram_block1a29_PORT_B_data_out[0];


--WB1_ram_block1a6 is fifo:int_fifo|altsyncram:BUFFER_rtl_0|altsyncram_faj1:auto_generated|ram_block1a6
--RAM Block Operation Mode: Simple Dual-Port
--Port A Depth: 8, Port A Width: 1, Port B Depth: 8, Port B Width: 1
--Port A Logical Depth: 8, Port A Logical Width: 32, Port B Logical Depth: 8, Port B Logical Width: 32
--Port A Input: Registered, Port B Input: Registered, Port B Output: Un-registered
WB1_ram_block1a6_PORT_A_data_in = A1L140;
WB1_ram_block1a6_PORT_A_data_in_reg = DFFE(WB1_ram_block1a6_PORT_A_data_in, WB1_ram_block1a6_clock_0, , , );
WB1_ram_block1a6_PORT_A_address = BUS(UB1_COUNT[0], UB1_COUNT[1], UB1_COUNT[2]);
WB1_ram_block1a6_PORT_A_address_reg = DFFE(WB1_ram_block1a6_PORT_A_address, WB1_ram_block1a6_clock_0, , , );
WB1_ram_block1a6_PORT_B_address = BUS(UB2_COUNT[0], UB2_COUNT[1], UB2_COUNT[2]);
WB1_ram_block1a6_PORT_B_address_reg = DFFE(WB1_ram_block1a6_PORT_B_address, WB1_ram_block1a6_clock_0, , , );
WB1_ram_block1a6_PORT_A_write_enable = D1L1;
WB1_ram_block1a6_PORT_A_write_enable_reg = DFFE(WB1_ram_block1a6_PORT_A_write_enable, WB1_ram_block1a6_clock_0, , , );
WB1_ram_block1a6_PORT_B_read_enable = VCC;
WB1_ram_block1a6_PORT_B_read_enable_reg = DFFE(WB1_ram_block1a6_PORT_B_read_enable, WB1_ram_block1a6_clock_0, , , );
WB1_ram_block1a6_PORT_A_byte_mask = VB1_UUWS;
WB1_ram_block1a6_PORT_A_byte_mask_reg = DFFE(WB1_ram_block1a6_PORT_A_byte_mask, WB1_ram_block1a6_clock_0, , , );
WB1_ram_block1a6_clock_0 = SCLK;
WB1_ram_block1a6_PORT_B_data_out = MEMORY(WB1_ram_block1a6_PORT_A_data_in_reg, , WB1_ram_block1a6_PORT_A_address_reg, WB1_ram_block1a6_PORT_B_address_reg, WB1_ram_block1a6_PORT_A_write_enable_reg, WB1_ram_block1a6_PORT_B_read_enable_reg, WB1_ram_block1a6_PORT_A_byte_mask_reg, , WB1_ram_block1a6_clock_0, , , , , );
WB1_ram_block1a6 = WB1_ram_block1a6_PORT_B_data_out[0];


--WB1_ram_block1a22 is fifo:int_fifo|altsyncram:BUFFER_rtl_0|altsyncram_faj1:auto_generated|ram_block1a22
--RAM Block Operation Mode: Simple Dual-Port
--Port A Depth: 8, Port A Width: 1, Port B Depth: 8, Port B Width: 1
--Port A Logical Depth: 8, Port A Logical Width: 32, Port B Logical Depth: 8, Port B Logical Width: 32
--Port A Input: Registered, Port B Input: Registered, Port B Output: Un-registered
WB1_ram_block1a22_PORT_A_data_in = A1L140;
WB1_ram_block1a22_PORT_A_data_in_reg = DFFE(WB1_ram_block1a22_PORT_A_data_in, WB1_ram_block1a22_clock_0, , , );
WB1_ram_block1a22_PORT_A_address = BUS(UB1_COUNT[0], UB1_COUNT[1], UB1_COUNT[2]);
WB1_ram_block1a22_PORT_A_address_reg = DFFE(WB1_ram_block1a22_PORT_A_address, WB1_ram_block1a22_clock_0, , , );
WB1_ram_block1a22_PORT_B_address = BUS(UB2_COUNT[0], UB2_COUNT[1], UB2_COUNT[2]);
WB1_ram_block1a22_PORT_B_address_reg = DFFE(WB1_ram_block1a22_PORT_B_address, WB1_ram_block1a22_clock_0, , , );
WB1_ram_block1a22_PORT_A_write_enable = D1L1;
WB1_ram_block1a22_PORT_A_write_enable_reg = DFFE(WB1_ram_block1a22_PORT_A_write_enable, WB1_ram_block1a22_clock_0, , , );
WB1_ram_block1a22_PORT_B_read_enable = VCC;
WB1_ram_block1a22_PORT_B_read_enable_reg = DFFE(WB1_ram_block1a22_PORT_B_read_enable, WB1_ram_block1a22_clock_0, , , );
WB1_ram_block1a22_PORT_A_byte_mask = VB1_LMWS;
WB1_ram_block1a22_PORT_A_byte_mask_reg = DFFE(WB1_ram_block1a22_PORT_A_byte_mask, WB1_ram_block1a22_clock_0, , , );
WB1_ram_block1a22_clock_0 = SCLK;
WB1_ram_block1a22_PORT_B_data_out = MEMORY(WB1_ram_block1a22_PORT_A_data_in_reg, , WB1_ram_block1a22_PORT_A_address_reg, WB1_ram_block1a22_PORT_B_address_reg, WB1_ram_block1a22_PORT_A_write_enable_reg, WB1_ram_block1a22_PORT_B_read_enable_reg, WB1_ram_block1a22_PORT_A_byte_mask_reg, , WB1_ram_block1a22_clock_0, , , , , );
WB1_ram_block1a22 = WB1_ram_block1a22_PORT_B_data_out[0];


--WB1_ram_block1a14 is fifo:int_fifo|altsyncram:BUFFER_rtl_0|altsyncram_faj1:auto_generated|ram_block1a14
--RAM Block Operation Mode: Simple Dual-Port
--Port A Depth: 8, Port A Width: 1, Port B Depth: 8, Port B Width: 1
--Port A Logical Depth: 8, Port A Logical Width: 32, Port B Logical Depth: 8, Port B Logical Width: 32
--Port A Input: Registered, Port B Input: Registered, Port B Output: Un-registered
WB1_ram_block1a14_PORT_A_data_in = A1L140;
WB1_ram_block1a14_PORT_A_data_in_reg = DFFE(WB1_ram_block1a14_PORT_A_data_in, WB1_ram_block1a14_clock_0, , , );
WB1_ram_block1a14_PORT_A_address = BUS(UB1_COUNT[0], UB1_COUNT[1], UB1_COUNT[2]);
WB1_ram_block1a14_PORT_A_address_reg = DFFE(WB1_ram_block1a14_PORT_A_address, WB1_ram_block1a14_clock_0, , , );
WB1_ram_block1a14_PORT_B_address = BUS(UB2_COUNT[0], UB2_COUNT[1], UB2_COUNT[2]);
WB1_ram_block1a14_PORT_B_address_reg = DFFE(WB1_ram_block1a14_PORT_B_address, WB1_ram_block1a14_clock_0, , , );
WB1_ram_block1a14_PORT_A_write_enable = D1L1;
WB1_ram_block1a14_PORT_A_write_enable_reg = DFFE(WB1_ram_block1a14_PORT_A_write_enable, WB1_ram_block1a14_clock_0, , , );
WB1_ram_block1a14_PORT_B_read_enable = VCC;
WB1_ram_block1a14_PORT_B_read_enable_reg = DFFE(WB1_ram_block1a14_PORT_B_read_enable, WB1_ram_block1a14_clock_0, , , );
WB1_ram_block1a14_PORT_A_byte_mask = VB1_UMWS;
WB1_ram_block1a14_PORT_A_byte_mask_reg = DFFE(WB1_ram_block1a14_PORT_A_byte_mask, WB1_ram_block1a14_clock_0, , , );
WB1_ram_block1a14_clock_0 = SCLK;
WB1_ram_block1a14_PORT_B_data_out = MEMORY(WB1_ram_block1a14_PORT_A_data_in_reg, , WB1_ram_block1a14_PORT_A_address_reg, WB1_ram_block1a14_PORT_B_address_reg, WB1_ram_block1a14_PORT_A_write_enable_reg, WB1_ram_block1a14_PORT_B_read_enable_reg, WB1_ram_block1a14_PORT_A_byte_mask_reg, , WB1_ram_block1a14_clock_0, , , , , );
WB1_ram_block1a14 = WB1_ram_block1a14_PORT_B_data_out[0];


--WB1_ram_block1a30 is fifo:int_fifo|altsyncram:BUFFER_rtl_0|altsyncram_faj1:auto_generated|ram_block1a30
--RAM Block Operation Mode: Simple Dual-Port
--Port A Depth: 8, Port A Width: 1, Port B Depth: 8, Port B Width: 1
--Port A Logical Depth: 8, Port A Logical Width: 32, Port B Logical Depth: 8, Port B Logical Width: 32
--Port A Input: Registered, Port B Input: Registered, Port B Output: Un-registered
WB1_ram_block1a30_PORT_A_data_in = H1L7;
WB1_ram_block1a30_PORT_A_data_in_reg = DFFE(WB1_ram_block1a30_PORT_A_data_in, WB1_ram_block1a30_clock_0, , , );
WB1_ram_block1a30_PORT_A_address = BUS(UB1_COUNT[0], UB1_COUNT[1], UB1_COUNT[2]);
WB1_ram_block1a30_PORT_A_address_reg = DFFE(WB1_ram_block1a30_PORT_A_address, WB1_ram_block1a30_clock_0, , , );
WB1_ram_block1a30_PORT_B_address = BUS(UB2_COUNT[0], UB2_COUNT[1], UB2_COUNT[2]);
WB1_ram_block1a30_PORT_B_address_reg = DFFE(WB1_ram_block1a30_PORT_B_address, WB1_ram_block1a30_clock_0, , , );
WB1_ram_block1a30_PORT_A_write_enable = D1L1;
WB1_ram_block1a30_PORT_A_write_enable_reg = DFFE(WB1_ram_block1a30_PORT_A_write_enable, WB1_ram_block1a30_clock_0, , , );
WB1_ram_block1a30_PORT_B_read_enable = VCC;
WB1_ram_block1a30_PORT_B_read_enable_reg = DFFE(WB1_ram_block1a30_PORT_B_read_enable, WB1_ram_block1a30_clock_0, , , );
WB1_ram_block1a30_PORT_A_byte_mask = VB1_LLWS;
WB1_ram_block1a30_PORT_A_byte_mask_reg = DFFE(WB1_ram_block1a30_PORT_A_byte_mask, WB1_ram_block1a30_clock_0, , , );
WB1_ram_block1a30_clock_0 = SCLK;
WB1_ram_block1a30_PORT_B_data_out = MEMORY(WB1_ram_block1a30_PORT_A_data_in_reg, , WB1_ram_block1a30_PORT_A_address_reg, WB1_ram_block1a30_PORT_B_address_reg, WB1_ram_block1a30_PORT_A_write_enable_reg, WB1_ram_block1a30_PORT_B_read_enable_reg, WB1_ram_block1a30_PORT_A_byte_mask_reg, , WB1_ram_block1a30_clock_0, , , , , );
WB1_ram_block1a30 = WB1_ram_block1a30_PORT_B_data_out[0];


--WB1_ram_block1a7 is fifo:int_fifo|altsyncram:BUFFER_rtl_0|altsyncram_faj1:auto_generated|ram_block1a7
--RAM Block Operation Mode: Simple Dual-Port
--Port A Depth: 8, Port A Width: 1, Port B Depth: 8, Port B Width: 1
--Port A Logical Depth: 8, Port A Logical Width: 32, Port B Logical Depth: 8, Port B Logical Width: 32
--Port A Input: Registered, Port B Input: Registered, Port B Output: Un-registered
WB1_ram_block1a7_PORT_A_data_in = A1L140;
WB1_ram_block1a7_PORT_A_data_in_reg = DFFE(WB1_ram_block1a7_PORT_A_data_in, WB1_ram_block1a7_clock_0, , , );
WB1_ram_block1a7_PORT_A_address = BUS(UB1_COUNT[0], UB1_COUNT[1], UB1_COUNT[2]);
WB1_ram_block1a7_PORT_A_address_reg = DFFE(WB1_ram_block1a7_PORT_A_address, WB1_ram_block1a7_clock_0, , , );
WB1_ram_block1a7_PORT_B_address = BUS(UB2_COUNT[0], UB2_COUNT[1], UB2_COUNT[2]);
WB1_ram_block1a7_PORT_B_address_reg = DFFE(WB1_ram_block1a7_PORT_B_address, WB1_ram_block1a7_clock_0, , , );
WB1_ram_block1a7_PORT_A_write_enable = D1L1;
WB1_ram_block1a7_PORT_A_write_enable_reg = DFFE(WB1_ram_block1a7_PORT_A_write_enable, WB1_ram_block1a7_clock_0, , , );
WB1_ram_block1a7_PORT_B_read_enable = VCC;
WB1_ram_block1a7_PORT_B_read_enable_reg = DFFE(WB1_ram_block1a7_PORT_B_read_enable, WB1_ram_block1a7_clock_0, , , );
WB1_ram_block1a7_PORT_A_byte_mask = VB1_UUWS;
WB1_ram_block1a7_PORT_A_byte_mask_reg = DFFE(WB1_ram_block1a7_PORT_A_byte_mask, WB1_ram_block1a7_clock_0, , , );
WB1_ram_block1a7_clock_0 = SCLK;
WB1_ram_block1a7_PORT_B_data_out = MEMORY(WB1_ram_block1a7_PORT_A_data_in_reg, , WB1_ram_block1a7_PORT_A_address_reg, WB1_ram_block1a7_PORT_B_address_reg, WB1_ram_block1a7_PORT_A_write_enable_reg, WB1_ram_block1a7_PORT_B_read_enable_reg, WB1_ram_block1a7_PORT_A_byte_mask_reg, , WB1_ram_block1a7_clock_0, , , , , );
WB1_ram_block1a7 = WB1_ram_block1a7_PORT_B_data_out[0];


--WB1_ram_block1a23 is fifo:int_fifo|altsyncram:BUFFER_rtl_0|altsyncram_faj1:auto_generated|ram_block1a23
--RAM Block Operation Mode: Simple Dual-Port
--Port A Depth: 8, Port A Width: 1, Port B Depth: 8, Port B Width: 1
--Port A Logical Depth: 8, Port A Logical Width: 32, Port B Logical Depth: 8, Port B Logical Width: 32
--Port A Input: Registered, Port B Input: Registered, Port B Output: Un-registered
WB1_ram_block1a23_PORT_A_data_in = A1L140;
WB1_ram_block1a23_PORT_A_data_in_reg = DFFE(WB1_ram_block1a23_PORT_A_data_in, WB1_ram_block1a23_clock_0, , , );
WB1_ram_block1a23_PORT_A_address = BUS(UB1_COUNT[0], UB1_COUNT[1], UB1_COUNT[2]);
WB1_ram_block1a23_PORT_A_address_reg = DFFE(WB1_ram_block1a23_PORT_A_address, WB1_ram_block1a23_clock_0, , , );
WB1_ram_block1a23_PORT_B_address = BUS(UB2_COUNT[0], UB2_COUNT[1], UB2_COUNT[2]);
WB1_ram_block1a23_PORT_B_address_reg = DFFE(WB1_ram_block1a23_PORT_B_address, WB1_ram_block1a23_clock_0, , , );
WB1_ram_block1a23_PORT_A_write_enable = D1L1;
WB1_ram_block1a23_PORT_A_write_enable_reg = DFFE(WB1_ram_block1a23_PORT_A_write_enable, WB1_ram_block1a23_clock_0, , , );
WB1_ram_block1a23_PORT_B_read_enable = VCC;
WB1_ram_block1a23_PORT_B_read_enable_reg = DFFE(WB1_ram_block1a23_PORT_B_read_enable, WB1_ram_block1a23_clock_0, , , );
WB1_ram_block1a23_PORT_A_byte_mask = VB1_LMWS;
WB1_ram_block1a23_PORT_A_byte_mask_reg = DFFE(WB1_ram_block1a23_PORT_A_byte_mask, WB1_ram_block1a23_clock_0, , , );
WB1_ram_block1a23_clock_0 = SCLK;
WB1_ram_block1a23_PORT_B_data_out = MEMORY(WB1_ram_block1a23_PORT_A_data_in_reg, , WB1_ram_block1a23_PORT_A_address_reg, WB1_ram_block1a23_PORT_B_address_reg, WB1_ram_block1a23_PORT_A_write_enable_reg, WB1_ram_block1a23_PORT_B_read_enable_reg, WB1_ram_block1a23_PORT_A_byte_mask_reg, , WB1_ram_block1a23_clock_0, , , , , );
WB1_ram_block1a23 = WB1_ram_block1a23_PORT_B_data_out[0];


--WB1_ram_block1a15 is fifo:int_fifo|altsyncram:BUFFER_rtl_0|altsyncram_faj1:auto_generated|ram_block1a15
--RAM Block Operation Mode: Simple Dual-Port
--Port A Depth: 8, Port A Width: 1, Port B Depth: 8, Port B Width: 1
--Port A Logical Depth: 8, Port A Logical Width: 32, Port B Logical Depth: 8, Port B Logical Width: 32
--Port A Input: Registered, Port B Input: Registered, Port B Output: Un-registered
WB1_ram_block1a15_PORT_A_data_in = A1L140;
WB1_ram_block1a15_PORT_A_data_in_reg = DFFE(WB1_ram_block1a15_PORT_A_data_in, WB1_ram_block1a15_clock_0, , , );
WB1_ram_block1a15_PORT_A_address = BUS(UB1_COUNT[0], UB1_COUNT[1], UB1_COUNT[2]);
WB1_ram_block1a15_PORT_A_address_reg = DFFE(WB1_ram_block1a15_PORT_A_address, WB1_ram_block1a15_clock_0, , , );
WB1_ram_block1a15_PORT_B_address = BUS(UB2_COUNT[0], UB2_COUNT[1], UB2_COUNT[2]);
WB1_ram_block1a15_PORT_B_address_reg = DFFE(WB1_ram_block1a15_PORT_B_address, WB1_ram_block1a15_clock_0, , , );
WB1_ram_block1a15_PORT_A_write_enable = D1L1;
WB1_ram_block1a15_PORT_A_write_enable_reg = DFFE(WB1_ram_block1a15_PORT_A_write_enable, WB1_ram_block1a15_clock_0, , , );
WB1_ram_block1a15_PORT_B_read_enable = VCC;
WB1_ram_block1a15_PORT_B_read_enable_reg = DFFE(WB1_ram_block1a15_PORT_B_read_enable, WB1_ram_block1a15_clock_0, , , );
WB1_ram_block1a15_PORT_A_byte_mask = VB1_UMWS;
WB1_ram_block1a15_PORT_A_byte_mask_reg = DFFE(WB1_ram_block1a15_PORT_A_byte_mask, WB1_ram_block1a15_clock_0, , , );
WB1_ram_block1a15_clock_0 = SCLK;
WB1_ram_block1a15_PORT_B_data_out = MEMORY(WB1_ram_block1a15_PORT_A_data_in_reg, , WB1_ram_block1a15_PORT_A_address_reg, WB1_ram_block1a15_PORT_B_address_reg, WB1_ram_block1a15_PORT_A_write_enable_reg, WB1_ram_block1a15_PORT_B_read_enable_reg, WB1_ram_block1a15_PORT_A_byte_mask_reg, , WB1_ram_block1a15_clock_0, , , , , );
WB1_ram_block1a15 = WB1_ram_block1a15_PORT_B_data_out[0];


--WB1_ram_block1a31 is fifo:int_fifo|altsyncram:BUFFER_rtl_0|altsyncram_faj1:auto_generated|ram_block1a31
--RAM Block Operation Mode: Simple Dual-Port
--Port A Depth: 8, Port A Width: 1, Port B Depth: 8, Port B Width: 1
--Port A Logical Depth: 8, Port A Logical Width: 32, Port B Logical Depth: 8, Port B Logical Width: 32
--Port A Input: Registered, Port B Input: Registered, Port B Output: Un-registered
WB1_ram_block1a31_PORT_A_data_in = H1L8;
WB1_ram_block1a31_PORT_A_data_in_reg = DFFE(WB1_ram_block1a31_PORT_A_data_in, WB1_ram_block1a31_clock_0, , , );
WB1_ram_block1a31_PORT_A_address = BUS(UB1_COUNT[0], UB1_COUNT[1], UB1_COUNT[2]);
WB1_ram_block1a31_PORT_A_address_reg = DFFE(WB1_ram_block1a31_PORT_A_address, WB1_ram_block1a31_clock_0, , , );
WB1_ram_block1a31_PORT_B_address = BUS(UB2_COUNT[0], UB2_COUNT[1], UB2_COUNT[2]);
WB1_ram_block1a31_PORT_B_address_reg = DFFE(WB1_ram_block1a31_PORT_B_address, WB1_ram_block1a31_clock_0, , , );
WB1_ram_block1a31_PORT_A_write_enable = D1L1;
WB1_ram_block1a31_PORT_A_write_enable_reg = DFFE(WB1_ram_block1a31_PORT_A_write_enable, WB1_ram_block1a31_clock_0, , , );
WB1_ram_block1a31_PORT_B_read_enable = VCC;
WB1_ram_block1a31_PORT_B_read_enable_reg = DFFE(WB1_ram_block1a31_PORT_B_read_enable, WB1_ram_block1a31_clock_0, , , );
WB1_ram_block1a31_PORT_A_byte_mask = VB1_LLWS;
WB1_ram_block1a31_PORT_A_byte_mask_reg = DFFE(WB1_ram_block1a31_PORT_A_byte_mask, WB1_ram_block1a31_clock_0, , , );
WB1_ram_block1a31_clock_0 = SCLK;
WB1_ram_block1a31_PORT_B_data_out = MEMORY(WB1_ram_block1a31_PORT_A_data_in_reg, , WB1_ram_block1a31_PORT_A_address_reg, WB1_ram_block1a31_PORT_B_address_reg, WB1_ram_block1a31_PORT_A_write_enable_reg, WB1_ram_block1a31_PORT_B_read_enable_reg, WB1_ram_block1a31_PORT_A_byte_mask_reg, , WB1_ram_block1a31_clock_0, , , , , );
WB1_ram_block1a31 = WB1_ram_block1a31_PORT_B_data_out[0];


--INT is INT
INT = OUTPUT(RC1_INT);


--_SIZ1 is _SIZ1
_SIZ1 = OUTPUT(A1L138);


--DSACK_O[0] is DSACK_O[0]
DSACK_O[0] = OUTPUT(A1L70);


--DSACK_O[1] is DSACK_O[1]
DSACK_O[1] = OUTPUT(A1L70);


--BR is BR
BR = OUTPUT(E1_BREQ);


--_DMAEN is _DMAEN
_DMAEN = OUTPUT(E1L2);


--_DACK is _DACK
_DACK = OUTPUT(G1L7);


--_CSS is _CSS
_CSS = OUTPUT(G1L23);


--_IOR is _IOR
_IOR = OUTPUT(A1L127);


--_IOW is _IOW
_IOW = OUTPUT(A1L130);


--_LED_RD is _LED_RD
_LED_RD = OUTPUT(A1L133);


--_LED_WR is _LED_WR
_LED_WR = OUTPUT(A1L135);


--_LED_DMA is _LED_DMA
_LED_DMA = OUTPUT(E1L2);


--OWN is OWN
OWN = OUTPUT(E1L2);


--DATA_OE_ is DATA_OE_
DATA_OE_ = OUTPUT(A1L61);


--PDATA_OE_ is PDATA_OE_
PDATA_OE_ = OUTPUT(A1L84);


--R_W_IO is R_W_IO
R_W_IO = BIDIR(R_W_IO);


--_AS_IO is _AS_IO
_AS_IO = BIDIR(_AS_IO);


--_DS_IO is _DS_IO
_DS_IO = BIDIR(_DS_IO);


--DATA_IO[0] is DATA_IO[0]
DATA_IO[0] = BIDIR(DATA_IO[0]);


--DATA_IO[1] is DATA_IO[1]
DATA_IO[1] = BIDIR(DATA_IO[1]);


--DATA_IO[2] is DATA_IO[2]
DATA_IO[2] = BIDIR(DATA_IO[2]);


--DATA_IO[3] is DATA_IO[3]
DATA_IO[3] = BIDIR(DATA_IO[3]);


--DATA_IO[4] is DATA_IO[4]
DATA_IO[4] = BIDIR(DATA_IO[4]);


--DATA_IO[5] is DATA_IO[5]
DATA_IO[5] = BIDIR(DATA_IO[5]);


--DATA_IO[6] is DATA_IO[6]
DATA_IO[6] = BIDIR(DATA_IO[6]);


--DATA_IO[7] is DATA_IO[7]
DATA_IO[7] = BIDIR(DATA_IO[7]);


--DATA_IO[8] is DATA_IO[8]
DATA_IO[8] = BIDIR(DATA_IO[8]);


--DATA_IO[9] is DATA_IO[9]
DATA_IO[9] = BIDIR(DATA_IO[9]);


--DATA_IO[10] is DATA_IO[10]
DATA_IO[10] = BIDIR(DATA_IO[10]);


--DATA_IO[11] is DATA_IO[11]
DATA_IO[11] = BIDIR(DATA_IO[11]);


--DATA_IO[12] is DATA_IO[12]
DATA_IO[12] = BIDIR(DATA_IO[12]);


--DATA_IO[13] is DATA_IO[13]
DATA_IO[13] = BIDIR(DATA_IO[13]);


--DATA_IO[14] is DATA_IO[14]
DATA_IO[14] = BIDIR(DATA_IO[14]);


--DATA_IO[15] is DATA_IO[15]
DATA_IO[15] = BIDIR(DATA_IO[15]);


--DATA_IO[16] is DATA_IO[16]
DATA_IO[16] = BIDIR(DATA_IO[16]);


--DATA_IO[17] is DATA_IO[17]
DATA_IO[17] = BIDIR(DATA_IO[17]);


--DATA_IO[18] is DATA_IO[18]
DATA_IO[18] = BIDIR(DATA_IO[18]);


--DATA_IO[19] is DATA_IO[19]
DATA_IO[19] = BIDIR(DATA_IO[19]);


--DATA_IO[20] is DATA_IO[20]
DATA_IO[20] = BIDIR(DATA_IO[20]);


--DATA_IO[21] is DATA_IO[21]
DATA_IO[21] = BIDIR(DATA_IO[21]);


--DATA_IO[22] is DATA_IO[22]
DATA_IO[22] = BIDIR(DATA_IO[22]);


--DATA_IO[23] is DATA_IO[23]
DATA_IO[23] = BIDIR(DATA_IO[23]);


--DATA_IO[24] is DATA_IO[24]
DATA_IO[24] = BIDIR(DATA_IO[24]);


--DATA_IO[25] is DATA_IO[25]
DATA_IO[25] = BIDIR(DATA_IO[25]);


--DATA_IO[26] is DATA_IO[26]
DATA_IO[26] = BIDIR(DATA_IO[26]);


--DATA_IO[27] is DATA_IO[27]
DATA_IO[27] = BIDIR(DATA_IO[27]);


--DATA_IO[28] is DATA_IO[28]
DATA_IO[28] = BIDIR(DATA_IO[28]);


--DATA_IO[29] is DATA_IO[29]
DATA_IO[29] = BIDIR(DATA_IO[29]);


--DATA_IO[30] is DATA_IO[30]
DATA_IO[30] = BIDIR(DATA_IO[30]);


--DATA_IO[31] is DATA_IO[31]
DATA_IO[31] = BIDIR(DATA_IO[31]);


--_BGACK_IO is _BGACK_IO
_BGACK_IO = BIDIR(_BGACK_IO);


--PD_PORT[0] is PD_PORT[0]
PD_PORT[0] = BIDIR(PD_PORT[0]);


--PD_PORT[1] is PD_PORT[1]
PD_PORT[1] = BIDIR(PD_PORT[1]);


--PD_PORT[2] is PD_PORT[2]
PD_PORT[2] = BIDIR(PD_PORT[2]);


--PD_PORT[3] is PD_PORT[3]
PD_PORT[3] = BIDIR(PD_PORT[3]);


--PD_PORT[4] is PD_PORT[4]
PD_PORT[4] = BIDIR(PD_PORT[4]);


--PD_PORT[5] is PD_PORT[5]
PD_PORT[5] = BIDIR(PD_PORT[5]);


--PD_PORT[6] is PD_PORT[6]
PD_PORT[6] = BIDIR(PD_PORT[6]);


--PD_PORT[7] is PD_PORT[7]
PD_PORT[7] = BIDIR(PD_PORT[7]);


--PD_PORT[8] is PD_PORT[8]
PD_PORT[8] = BIDIR(PD_PORT[8]);


--PD_PORT[9] is PD_PORT[9]
PD_PORT[9] = BIDIR(PD_PORT[9]);


--PD_PORT[10] is PD_PORT[10]
PD_PORT[10] = BIDIR(PD_PORT[10]);


--PD_PORT[11] is PD_PORT[11]
PD_PORT[11] = BIDIR(PD_PORT[11]);


--PD_PORT[12] is PD_PORT[12]
PD_PORT[12] = BIDIR(PD_PORT[12]);


--PD_PORT[13] is PD_PORT[13]
PD_PORT[13] = BIDIR(PD_PORT[13]);


--PD_PORT[14] is PD_PORT[14]
PD_PORT[14] = BIDIR(PD_PORT[14]);


--PD_PORT[15] is PD_PORT[15]
PD_PORT[15] = BIDIR(PD_PORT[15]);


--INTA is INTA
INTA = INPUT();


--QC1_CNTR_O[2] is registers:u_registers|registers_cntr:u_registers_cntr|CNTR_O[2]
QC1_CNTR_O[2] = DFFEAS(QC1L5, !GC1__clk0, _RST,  ,  ,  ,  ,  ,  );


--RC1_INT is registers:u_registers|registers_istr:u_registers_istr|INT
RC1_INT = (INTA & QC1_CNTR_O[2]);


--E1_BGACK is CPU_SM:u_CPU_SM|BGACK
E1_BGACK = DFFEAS(ZB1L3, GC1__clk1, E1_CCRESET_,  ,  ,  ,  ,  ,  );


--E1_SIZE1 is CPU_SM:u_CPU_SM|SIZE1
E1_SIZE1 = DFFEAS(ZB1L73, GC1__clk1, E1_CCRESET_,  ,  ,  ,  ,  ,  );


--A1L138 is _SIZ1~0
A1L138 = (E1_BGACK & E1_SIZE1);


--SC1_REG_DSK_ is registers:u_registers|registers_term:u_registers_term|REG_DSK_
SC1_REG_DSK_ = DFFEAS(SC1L4, GC1__clk0, !A1L114,  ,  ,  ,  ,  ,  );


--G1_nLS2CPU is SCSI_SM:u_SCSI_SM|nLS2CPU
G1_nLS2CPU = DFFEAS(G1L26, GC1__clk2, !A1L114,  ,  ,  ,  ,  ,  );


--A1L69 is DSACK_O~0
A1L69 = (!SC1_REG_DSK_ & !G1_nLS2CPU);


--E1_BREQ is CPU_SM:u_CPU_SM|BREQ
E1_BREQ = DFFEAS(ZB1L75, GC1__clk1, E1_CCRESET_,  ,  ,  ,  ,  ,  );


--G1_DACK_o is SCSI_SM:u_SCSI_SM|DACK_o
G1_DACK_o = DFFEAS(HC1L5, GC1__clk1, G1_CRESET_,  ,  ,  ,  ,  ,  );


--G1_SCSI_CS_o is SCSI_SM:u_SCSI_SM|SCSI_CS_o
G1_SCSI_CS_o = DFFEAS(HC1_WideOr30, GC1__clk1, G1_CRESET_,  ,  ,  ,  ,  ,  );


--QC1_CNTR_O[4] is registers:u_registers|registers_cntr:u_registers_cntr|CNTR_O[4]
QC1_CNTR_O[4] = DFFEAS(QC1L7, !GC1__clk0, _RST,  ,  ,  ,  ,  ,  );


--G1_RE_o is SCSI_SM:u_SCSI_SM|RE_o
G1_RE_o = DFFEAS(HC1L19, GC1__clk1, G1_CRESET_,  ,  ,  ,  ,  ,  );


--A1L126 is _IOR~0
A1L126 = (QC1_CNTR_O[4]) # (G1_RE_o);


--G1_WE_o is SCSI_SM:u_SCSI_SM|WE_o
G1_WE_o = DFFEAS(HC1L17, GC1__clk1, G1_CRESET_,  ,  ,  ,  ,  ,  );


--A1L129 is _IOW~0
A1L129 = (QC1_CNTR_O[4]) # (G1_WE_o);


--_CS is _CS
_CS = INPUT();


--QC1L9 is registers:u_registers|registers_cntr:u_registers_cntr|CNTR_O[8]~0
QC1L9 = (!_CS & !A1L114);


--QC1_CNTR_O[1] is registers:u_registers|registers_cntr:u_registers_cntr|CNTR_O[1]
QC1_CNTR_O[1] = DFFEAS(QC1L3, !GC1__clk0, _RST,  ,  ,  ,  ,  ,  );


--A1L133 is _LED_RD~0
A1L133 = (E1_BGACK & (((!QC1_CNTR_O[1])))) # (!E1_BGACK & (((!QC1L9)) # (!A1L111)));


--A1L135 is _LED_WR~0
A1L135 = (E1_BGACK & (QC1_CNTR_O[1])) # (!E1_BGACK & (((A1L111) # (!QC1L9))));


--ADDR[3] is ADDR[3]
ADDR[3] = INPUT();


--ADDR[6] is ADDR[6]
ADDR[6] = INPUT();


--QC1L10 is registers:u_registers|registers_cntr:u_registers_cntr|CNTR_O[8]~1
QC1L10 = (ADDR[3] & (!_CS & (!A1L114 & !ADDR[6])));


--ADDR[2] is ADDR[2]
ADDR[2] = INPUT();


--ADDR[5] is ADDR[5]
ADDR[5] = INPUT();


--ADDR[4] is ADDR[4]
ADDR[4] = INPUT();


--PC1_h_0C is registers:u_registers|addr_decoder:u_addr_decoder|h_0C
PC1_h_0C = (QC1L10 & (ADDR[2] & (!ADDR[5] & !ADDR[4])));


--A1L61 is DATA_OE_~0
A1L61 = (A1L118 & ((_CS) # ((A1L114) # (PC1_h_0C))));


--A1L83 is PDATA_OE_~0
A1L83 = (G1_DACK_o) # (G1_SCSI_CS_o);


--PC1L2 is registers:u_registers|addr_decoder:u_addr_decoder|CONTR_RD_~0
PC1L2 = (!ADDR[2] & !ADDR[4]);


--PC1L4 is registers:u_registers|addr_decoder:u_addr_decoder|CONTR_WR~0
PC1L4 = (QC1L10 & (PC1L2 & (!A1L111 & !ADDR[5])));


--QC1L5 is registers:u_registers|registers_cntr:u_registers_cntr|CNTR_O[2]~2
QC1L5 = (PC1L4 & (A1L16)) # (!PC1L4 & ((QC1_CNTR_O[2])));


--_RST is _RST
_RST = INPUT();


--E1_STATE[0] is CPU_SM:u_CPU_SM|STATE[0]
E1_STATE[0] = DFFEAS(AC1L7, GC1__clk1, E1_CCRESET_,  ,  ,  ,  ,  ,  );


--E1_STATE[1] is CPU_SM:u_CPU_SM|STATE[1]
E1_STATE[1] = DFFEAS(BC1L10, GC1__clk1, E1_CCRESET_,  ,  ,  ,  ,  ,  );


--E1_STATE[3] is CPU_SM:u_CPU_SM|STATE[3]
E1_STATE[3] = DFFEAS(DC1L13, GC1__clk1, E1_CCRESET_,  ,  ,  ,  ,  ,  );


--E1_STATE[2] is CPU_SM:u_CPU_SM|STATE[2]
E1_STATE[2] = DFFEAS(CC1L10, GC1__clk1, E1_CCRESET_,  ,  ,  ,  ,  ,  );


--E1_BGRANT_ is CPU_SM:u_CPU_SM|BGRANT_
E1_BGRANT_ = DFFEAS(E1L4, GC1__clk2, E1_CCRESET_,  ,  ,  ,  ,  ,  );


--E1_nCYCLEDONE is CPU_SM:u_CPU_SM|nCYCLEDONE
E1_nCYCLEDONE = DFFEAS(E1L38, GC1__clk2, E1_CCRESET_,  ,  ,  ,  ,  ,  );


--E1_STATE[4] is CPU_SM:u_CPU_SM|STATE[4]
E1_STATE[4] = DFFEAS(EC1L12, GC1__clk1, E1_CCRESET_,  ,  ,  ,  ,  ,  );


--ZB1L1 is CPU_SM:u_CPU_SM|CPU_SM_outputs:u_CPU_SM_outputs|BGACK_d~0
ZB1L1 = (E1_STATE[4]) # ((!E1_STATE[2] & (E1_BGRANT_ & E1_nCYCLEDONE)));


--ZB1L2 is CPU_SM:u_CPU_SM|CPU_SM_outputs:u_CPU_SM_outputs|BGACK_d~1
ZB1L2 = (E1_STATE[1] & ((E1_STATE[3] & ((!ZB1L1) # (!E1_STATE[2]))) # (!E1_STATE[3] & ((E1_STATE[2]) # (ZB1L1))))) # (!E1_STATE[1] & ((E1_STATE[2]) # ((E1_STATE[3] & ZB1L1))));


--ZB1L3 is CPU_SM:u_CPU_SM|CPU_SM_outputs:u_CPU_SM_outputs|BGACK_d~2
ZB1L3 = (E1_STATE[0]) # (ZB1L2);


--E1_CCRESET_ is CPU_SM:u_CPU_SM|CCRESET_
E1_CCRESET_ = DFFEAS(_RST, !SCLK,  ,  ,  ,  ,  ,  ,  );


--ZB1L65 is CPU_SM:u_CPU_SM|CPU_SM_outputs:u_CPU_SM_outputs|SIZE1_Y~0
ZB1L65 = (E1_STATE[0] & (E1_STATE[1] & (E1_STATE[2] $ (E1_STATE[4]))));


--_STERM is _STERM
_STERM = INPUT();


--ZB1L13 is CPU_SM:u_CPU_SM|CPU_SM_outputs:u_CPU_SM_outputs|Equal2~0
ZB1L13 = (E1_STATE[0] & !E1_STATE[3]);


--ZB1L14 is CPU_SM:u_CPU_SM|CPU_SM_outputs:u_CPU_SM_outputs|Equal2~1
ZB1L14 = (E1_STATE[1] & (E1_STATE[4] & (ZB1L13 & !E1_STATE[2])));


--ZB1L66 is CPU_SM:u_CPU_SM|CPU_SM_outputs:u_CPU_SM_outputs|SIZE1_d~0
ZB1L66 = (_STERM & (((!ZB1L14)))) # (!_STERM & ((E1_STATE[3]) # ((!ZB1L65))));


--E1_DSACK_LATCHED_[0] is CPU_SM:u_CPU_SM|DSACK_LATCHED_[0]
E1_DSACK_LATCHED_[0] = DFFEAS(A1L71, !GC1__clk0, !A1L114,  ,  ,  ,  ,  ,  );


--E1_DSACK_LATCHED_[1] is CPU_SM:u_CPU_SM|DSACK_LATCHED_[1]
E1_DSACK_LATCHED_[1] = DFFEAS(A1L72, !GC1__clk0, !A1L114,  ,  ,  ,  ,  ,  );


--DSACK_I_[1] is DSACK_I_[1]
DSACK_I_[1] = INPUT();


--_BERR is _BERR
_BERR = INPUT();


--EC1L1 is CPU_SM:u_CPU_SM|cpudff5:u_cpudff5|cpudff5_d~0
EC1L1 = (E1_DSACK_LATCHED_[0] & (((!_BERR) # (!DSACK_I_[1])))) # (!E1_DSACK_LATCHED_[0] & (E1_DSACK_LATCHED_[1] & ((!_BERR) # (!DSACK_I_[1]))));


--DSACK_I_[0] is DSACK_I_[0]
DSACK_I_[0] = INPUT();


--A1L71 is DSK0_IN_~0
A1L71 = (!DSACK_I_[0]) # (!_BERR);


--YB1L13 is CPU_SM:u_CPU_SM|CPU_SM_inputs:u_CPU_SM_inputs|E[51]~0
YB1L13 = (E1_STATE[1] & (E1_STATE[3] & (E1_STATE[2] & !E1_STATE[4])));


--ZB1L67 is CPU_SM:u_CPU_SM|CPU_SM_outputs:u_CPU_SM_outputs|SIZE1_d~1
ZB1L67 = ((_STERM & ((A1L71) # (!EC1L1)))) # (!YB1L13);


--E1_nDSACK is CPU_SM:u_CPU_SM|nDSACK
E1_nDSACK = (!E1_DSACK_LATCHED_[0] & !E1_DSACK_LATCHED_[1]);


--ZB1L15 is CPU_SM:u_CPU_SM|CPU_SM_outputs:u_CPU_SM_outputs|Equal2~2
ZB1L15 = (E1_STATE[0] & (!E1_STATE[3] & (!E1_STATE[2] & !E1_STATE[4])));


--ZB1L68 is CPU_SM:u_CPU_SM|CPU_SM_outputs:u_CPU_SM_outputs|SIZE1_d~2
ZB1L68 = (((_STERM & !E1_nDSACK)) # (!ZB1L15)) # (!E1_STATE[1]);


--YB1L14 is CPU_SM:u_CPU_SM|CPU_SM_inputs:u_CPU_SM_inputs|E[51]~1
YB1L14 = (E1_STATE[1] & (E1_STATE[2] & !E1_STATE[4]));


--ZB1L69 is CPU_SM:u_CPU_SM|CPU_SM_outputs:u_CPU_SM_outputs|SIZE1_d~3
ZB1L69 = ((!E1_STATE[0] & !E1_STATE[3])) # (!_STERM);


--ZB1L70 is CPU_SM:u_CPU_SM|CPU_SM_outputs:u_CPU_SM_outputs|SIZE1_d~4
ZB1L70 = ((E1_DSACK_LATCHED_[0]) # ((E1_DSACK_LATCHED_[1]) # (ZB1L69))) # (!YB1L14);


--ZB1L16 is CPU_SM:u_CPU_SM|CPU_SM_outputs:u_CPU_SM_outputs|Equal2~3
ZB1L16 = (E1_STATE[4] & !E1_STATE[1]);


--ZB1L17 is CPU_SM:u_CPU_SM|CPU_SM_outputs:u_CPU_SM_outputs|Equal2~4
ZB1L17 = (E1_STATE[0] & (ZB1L16 & (!E1_STATE[3] & !E1_STATE[2])));


--YB1L9 is CPU_SM:u_CPU_SM|CPU_SM_inputs:u_CPU_SM_inputs|E[46]~2
YB1L9 = (E1_STATE[0] & (E1_STATE[2] & (E1_STATE[4] & !E1_STATE[1])));


--ZB1L71 is CPU_SM:u_CPU_SM|CPU_SM_outputs:u_CPU_SM_outputs|SIZE1_d~5
ZB1L71 = (ZB1L70 & (!ZB1L17 & !YB1L9));


--ZB1L72 is CPU_SM:u_CPU_SM|CPU_SM_outputs:u_CPU_SM_outputs|SIZE1_d~6
ZB1L72 = (ZB1L66 & (ZB1L67 & (ZB1L68 & ZB1L71)));


--YB1L20 is CPU_SM:u_CPU_SM|CPU_SM_inputs:u_CPU_SM_inputs|E[62]~3
YB1L20 = (E1_STATE[0] & (E1_STATE[3] & (!E1_STATE[1] & !E1_STATE[4])));


--YB1L18 is CPU_SM:u_CPU_SM|CPU_SM_inputs:u_CPU_SM_inputs|E[61]~4
YB1L18 = (E1_STATE[1] & (E1_STATE[3] & (!E1_STATE[0] & !E1_STATE[4])));


--YB1L11 is CPU_SM:u_CPU_SM|CPU_SM_inputs:u_CPU_SM_inputs|E[50]~5
YB1L11 = (E1_STATE[0] & (E1_STATE[2] & (!E1_STATE[1] & !E1_STATE[4])));


--YB1L16 is CPU_SM:u_CPU_SM|CPU_SM_inputs:u_CPU_SM_inputs|E[56]~6
YB1L16 = (E1_STATE[1] & (E1_STATE[3] & (E1_STATE[4] & !E1_STATE[0])));


--ZB1L58 is CPU_SM:u_CPU_SM|CPU_SM_outputs:u_CPU_SM_outputs|SIZE1_X~2
ZB1L58 = (YB1L20) # ((YB1L18) # ((YB1L11) # (YB1L16)));


--ZB1L59 is CPU_SM:u_CPU_SM|CPU_SM_outputs:u_CPU_SM_outputs|SIZE1_X~3
ZB1L59 = (E1_STATE[3] & (YB1L14 & ((!DSACK_I_[0]) # (!_BERR))));


--ZB1L60 is CPU_SM:u_CPU_SM|CPU_SM_outputs:u_CPU_SM_outputs|SIZE1_X~4
ZB1L60 = (E1_STATE[1] & (!ZB1L15 & ((!YB1L14) # (!ZB1L13)))) # (!E1_STATE[1] & (((!YB1L14) # (!ZB1L13))));


--ZB1L61 is CPU_SM:u_CPU_SM|CPU_SM_outputs:u_CPU_SM_outputs|SIZE1_X~5
ZB1L61 = (ZB1L58) # ((EC1L1 & ((ZB1L59) # (!ZB1L60))));


--YB1L12 is CPU_SM:u_CPU_SM|CPU_SM_inputs:u_CPU_SM_inputs|E[50]~7
YB1L12 = (!E1_STATE[1] & !E1_STATE[4]);


--ZB1L18 is CPU_SM:u_CPU_SM|CPU_SM_outputs:u_CPU_SM_outputs|Equal2~5
ZB1L18 = (E1_STATE[2] & (YB1L12 & (!E1_STATE[0] & !E1_STATE[3])));


--YB1L17 is CPU_SM:u_CPU_SM|CPU_SM_inputs:u_CPU_SM_inputs|E[60]~8
YB1L17 = (E1_STATE[4] & (!E1_STATE[0] & !E1_STATE[3]));


--J1_FLUSHFIFO is registers:u_registers|FLUSHFIFO
J1_FLUSHFIFO = DFFEAS(J1L4, !GC1__clk0, _RST,  ,  ,  ,  ,  ,  );


--SB1_PTR[0] is fifo:int_fifo|fifo_byte_ptr:u_byte_ptr|PTR[0]
SB1_PTR[0] = DFFEAS(SB1L5, GC1__clk2, QC1_CNTR_O[8],  ,  ,  ,  ,  ,  );


--SB1_PTR[1] is fifo:int_fifo|fifo_byte_ptr:u_byte_ptr|PTR[1]
SB1_PTR[1] = DFFEAS(SB1L8, GC1__clk2, QC1_CNTR_O[8],  ,  ,  ,  ,  ,  );


--E1L24 is CPU_SM:u_CPU_SM|LASTWORD~0
E1L24 = (J1_FLUSHFIFO & ((SB1_PTR[0]) # (SB1_PTR[1])));


--NC1L1 is datapath:u_datapath|datapath_scsi:u_datapath_scsi|datapath_24dec:u_datapath_24dec|D1~0
NC1L1 = (SB1_PTR[0] & SB1_PTR[1]);


--YB1L22 is CPU_SM:u_CPU_SM|CPU_SM_inputs:u_CPU_SM_inputs|nE~0
YB1L22 = (E1_STATE[3] & (E1_STATE[2] & (E1_STATE[4] & !E1_STATE[1])));


--TB1_FIFOEMPTY is fifo:int_fifo|fifo__full_empty_ctr:u_full_empty_ctr|FIFOEMPTY
TB1_FIFOEMPTY = DFFEAS(TB1L24, !SCLK, QC1_CNTR_O[8],  ,  ,  ,  ,  ,  );


--ZB1L62 is CPU_SM:u_CPU_SM|CPU_SM_outputs:u_CPU_SM_outputs|SIZE1_X~6
ZB1L62 = (E1_STATE[2] & (!YB1L17 & ((ZB1L64) # (!E1L24)))) # (!E1_STATE[2] & (((ZB1L64) # (!E1L24))));


--ZB1L73 is CPU_SM:u_CPU_SM|CPU_SM_outputs:u_CPU_SM_outputs|SIZE1_d~7
ZB1L73 = ((!ZB1L61 & (!ZB1L18 & ZB1L62))) # (!ZB1L72);


--SC1_TERM_COUNTER[2] is registers:u_registers|registers_term:u_registers_term|TERM_COUNTER[2]
SC1_TERM_COUNTER[2] = DFFEAS(SC1L9, !GC1__clk0,  ,  ,  ,  ,  ,  ,  );


--SC1_TERM_COUNTER[0] is registers:u_registers|registers_term:u_registers_term|TERM_COUNTER[0]
SC1_TERM_COUNTER[0] = DFFEAS(SC1L10, !GC1__clk0,  ,  ,  ,  ,  ,  ,  );


--SC1_TERM_COUNTER[1] is registers:u_registers|registers_term:u_registers_term|TERM_COUNTER[1]
SC1_TERM_COUNTER[1] = DFFEAS(SC1L11, !GC1__clk0,  ,  ,  ,  ,  ,  ,  );


--SC1L4 is registers:u_registers|registers_term:u_registers_term|REG_DSK_~0
SC1L4 = (SC1_REG_DSK_) # ((!SC1_TERM_COUNTER[2] & (SC1_TERM_COUNTER[0] & SC1_TERM_COUNTER[1])));


--HC1_state_reg.s6 is SCSI_SM:u_SCSI_SM|SCSI_SM_INTERNALS:u_SCSI_SM_INTERNALS|state_reg.s6
HC1_state_reg.s6 = DFFEAS(HC1_state_reg.s26, GC1__clk1, G1_CRESET_,  ,  ,  ,  ,  ,  );


--HC1_state_reg.s19 is SCSI_SM:u_SCSI_SM|SCSI_SM_INTERNALS:u_SCSI_SM_INTERNALS|state_reg.s19
HC1_state_reg.s19 = DFFEAS(HC1_state_reg.s3, GC1__clk1, G1_CRESET_,  ,  ,  ,  ,  ,  );


--G1L26 is SCSI_SM:u_SCSI_SM|nLS2CPU~0
G1L26 = (G1_nLS2CPU) # ((HC1_state_reg.s6) # (HC1_state_reg.s19));


--ZB1L19 is CPU_SM:u_CPU_SM|CPU_SM_outputs:u_CPU_SM_outputs|Equal2~6
ZB1L19 = (!E1_STATE[0] & (!E1_STATE[3] & (!E1_STATE[2] & !E1_STATE[4])));


--E1_DMAENA is CPU_SM:u_CPU_SM|DMAENA
E1_DMAENA = DFFEAS(QC1_CNTR_O[8], GC1__clk2, E1_CCRESET_,  ,  ,  ,  ,  ,  );


--YB1L1 is CPU_SM:u_CPU_SM|CPU_SM_inputs:u_CPU_SM_inputs|E[0]~9
YB1L1 = (QC1_CNTR_O[1] & (ZB1L19 & (E1_DMAENA & !E1_STATE[1])));


--TB1_FIFOFULL is fifo:int_fifo|fifo__full_empty_ctr:u_full_empty_ctr|FIFOFULL
TB1_FIFOFULL = DFFEAS(TB1L18, !SCLK, QC1_CNTR_O[8],  ,  ,  ,  ,  ,  );


--ZB1L20 is CPU_SM:u_CPU_SM|CPU_SM_outputs:u_CPU_SM_outputs|Equal2~7
ZB1L20 = (E1_STATE[3] & (!E1_STATE[0] & !E1_STATE[2]));


--E1_FLUSHFIFO is CPU_SM:u_CPU_SM|FLUSHFIFO
E1_FLUSHFIFO = DFFEAS(J1_FLUSHFIFO, GC1__clk2, E1_CCRESET_,  ,  ,  ,  ,  ,  );


--ZB1L74 is CPU_SM:u_CPU_SM|CPU_SM_outputs:u_CPU_SM_outputs|nBREQ_d~2
ZB1L74 = (E1_FLUSHFIFO & ((E1L24) # (TB1_FIFOEMPTY)));


--ZB1L75 is CPU_SM:u_CPU_SM|CPU_SM_outputs:u_CPU_SM_outputs|nBREQ_d~3
ZB1L75 = (ZB1L76) # ((YB1L1 & ((TB1_FIFOFULL) # (ZB1L74))));


--HC1_state_reg.s16 is SCSI_SM:u_SCSI_SM|SCSI_SM_INTERNALS:u_SCSI_SM_INTERNALS|state_reg.s16
HC1_state_reg.s16 = DFFEAS(HC1L12, GC1__clk1, G1_CRESET_,  ,  ,  ,  ,  ,  );


--G1_CCPUREQ is SCSI_SM:u_SCSI_SM|CCPUREQ
G1_CCPUREQ = DFFEAS(PC1_WDREGREQ, GC1__clk1, G1_CRESET_,  ,  ,  ,  ,  ,  );


--G1_RDFIFO_o is SCSI_SM:u_SCSI_SM|RDFIFO_o
G1_RDFIFO_o = DFFEAS(G1L14, GC1__clk2, _RST,  ,  ,  ,  ,  ,  );


--G1_CDREQ_ is SCSI_SM:u_SCSI_SM|CDREQ_
G1_CDREQ_ = DFFEAS(DREQ_, GC1__clk1, G1_CRESET_,  ,  ,  ,  ,  ,  );


--HC1L30 is SCSI_SM:u_SCSI_SM|SCSI_SM_INTERNALS:u_SCSI_SM_INTERNALS|always1~0
HC1L30 = (QC1_CNTR_O[1]) # ((G1_CCPUREQ) # ((G1_RDFIFO_o) # (!G1_CDREQ_)));


--HC1L2 is SCSI_SM:u_SCSI_SM|SCSI_SM_INTERNALS:u_SCSI_SM_INTERNALS|Selector0~0
HC1L2 = (TB1_FIFOEMPTY & (HC1_state_reg.s16 & !HC1L30));


--G1_RIFIFO_o is SCSI_SM:u_SCSI_SM|RIFIFO_o
G1_RIFIFO_o = DFFEAS(G1L19, GC1__clk2, _RST,  ,  ,  ,  ,  ,  );


--HC1L31 is SCSI_SM:u_SCSI_SM|SCSI_SM_INTERNALS:u_SCSI_SM_INTERNALS|always1~1
HC1L31 = (QC1_CNTR_O[1] & (G1_CDREQ_ & (!G1_CCPUREQ & !G1_RIFIFO_o)));


--HC1_state_reg.s0 is SCSI_SM:u_SCSI_SM|SCSI_SM_INTERNALS:u_SCSI_SM_INTERNALS|state_reg.s0
HC1_state_reg.s0 = DFFEAS(HC1L9, GC1__clk1, G1_CRESET_,  ,  ,  ,  ,  ,  );


--HC1L3 is SCSI_SM:u_SCSI_SM|SCSI_SM_INTERNALS:u_SCSI_SM_INTERNALS|Selector0~1
HC1L3 = (HC1L31 & (!TB1_FIFOFULL & !HC1_state_reg.s0));


--HC1_state_reg.s24 is SCSI_SM:u_SCSI_SM|SCSI_SM_INTERNALS:u_SCSI_SM_INTERNALS|state_reg.s24
HC1_state_reg.s24 = DFFEAS(HC1L3, GC1__clk1, G1_CRESET_,  ,  ,  ,  ,  ,  );


--HC1_state_reg.s4 is SCSI_SM:u_SCSI_SM|SCSI_SM_INTERNALS:u_SCSI_SM_INTERNALS|state_reg.s4
HC1_state_reg.s4 = DFFEAS(HC1_state_reg.s24, GC1__clk1, G1_CRESET_,  ,  ,  ,  ,  ,  );


--HC1_state_reg.s20 is SCSI_SM:u_SCSI_SM|SCSI_SM_INTERNALS:u_SCSI_SM_INTERNALS|state_reg.s20
HC1_state_reg.s20 = DFFEAS(HC1_state_reg.s4, GC1__clk1, G1_CRESET_,  ,  ,  ,  ,  ,  );


--HC1L4 is SCSI_SM:u_SCSI_SM|SCSI_SM_INTERNALS:u_SCSI_SM_INTERNALS|Selector0~2
HC1L4 = (!HC1_state_reg.s4 & (!HC1_state_reg.s20 & ((TB1_FIFOFULL) # (!HC1_state_reg.s24))));


--HC1_state_reg.s2 is SCSI_SM:u_SCSI_SM|SCSI_SM_INTERNALS:u_SCSI_SM_INTERNALS|state_reg.s2
HC1_state_reg.s2 = DFFEAS(HC1_state_reg.s28, GC1__clk1, G1_CRESET_,  ,  ,  ,  ,  ,  );


--HC1_state_reg.s18 is SCSI_SM:u_SCSI_SM|SCSI_SM_INTERNALS:u_SCSI_SM_INTERNALS|state_reg.s18
HC1_state_reg.s18 = DFFEAS(HC1_state_reg.s2, GC1__clk1, G1_CRESET_,  ,  ,  ,  ,  ,  );


--HC1_state_reg.s28 is SCSI_SM:u_SCSI_SM|SCSI_SM_INTERNALS:u_SCSI_SM_INTERNALS|state_reg.s28
HC1_state_reg.s28 = DFFEAS(HC1L2, GC1__clk1, G1_CRESET_,  ,  ,  ,  ,  ,  );


--HC1L27 is SCSI_SM:u_SCSI_SM|SCSI_SM_INTERNALS:u_SCSI_SM_INTERNALS|WideOr22~0
HC1L27 = (!HC1_state_reg.s2 & (!HC1_state_reg.s18 & !HC1_state_reg.s28));


--HC1L5 is SCSI_SM:u_SCSI_SM|SCSI_SM_INTERNALS:u_SCSI_SM_INTERNALS|Selector0~3
HC1L5 = (HC1L2) # ((HC1L3) # ((!HC1L27) # (!HC1L4)));


--G1_CRESET_ is SCSI_SM:u_SCSI_SM|CRESET_
G1_CRESET_ = DFFEAS(_RST, !GC1__clk0,  ,  ,  ,  ,  ,  ,  );


--HC1_state_reg.s3 is SCSI_SM:u_SCSI_SM|SCSI_SM_INTERNALS:u_SCSI_SM_INTERNALS|state_reg.s3
HC1_state_reg.s3 = DFFEAS(HC1_state_reg.s30, GC1__clk1, G1_CRESET_,  ,  ,  ,  ,  ,  );


--HC1_state_reg.s10 is SCSI_SM:u_SCSI_SM|SCSI_SM_INTERNALS:u_SCSI_SM_INTERNALS|state_reg.s10
HC1_state_reg.s10 = DFFEAS(HC1L20, GC1__clk1, G1_CRESET_,  ,  ,  ,  ,  ,  );


--HC1_state_reg.s30 is SCSI_SM:u_SCSI_SM|SCSI_SM_INTERNALS:u_SCSI_SM_INTERNALS|state_reg.s30
HC1_state_reg.s30 = DFFEAS(HC1_state_reg.s10, GC1__clk1, G1_CRESET_,  ,  ,  ,  ,  ,  );


--HC1L29 is SCSI_SM:u_SCSI_SM|SCSI_SM_INTERNALS:u_SCSI_SM_INTERNALS|WideOr30~0
HC1L29 = (HC1_state_reg.s6) # ((HC1_state_reg.s3) # ((HC1_state_reg.s10) # (HC1_state_reg.s30)));


--HC1_state_reg.s8 is SCSI_SM:u_SCSI_SM|SCSI_SM_INTERNALS:u_SCSI_SM_INTERNALS|state_reg.s8
HC1_state_reg.s8 = DFFEAS(HC1L10, GC1__clk1, G1_CRESET_,  ,  ,  ,  ,  ,  );


--HC1_state_reg.s17 is SCSI_SM:u_SCSI_SM|SCSI_SM_INTERNALS:u_SCSI_SM_INTERNALS|state_reg.s17
HC1_state_reg.s17 = DFFEAS(HC1L13, GC1__clk1, G1_CRESET_,  ,  ,  ,  ,  ,  );


--HC1_state_reg.s26 is SCSI_SM:u_SCSI_SM|SCSI_SM_INTERNALS:u_SCSI_SM_INTERNALS|state_reg.s26
HC1_state_reg.s26 = DFFEAS(HC1_state_reg.s17, GC1__clk1, G1_CRESET_,  ,  ,  ,  ,  ,  );


--HC1_WideOr30 is SCSI_SM:u_SCSI_SM|SCSI_SM_INTERNALS:u_SCSI_SM_INTERNALS|WideOr30
HC1_WideOr30 = (HC1L29) # ((HC1_state_reg.s8) # ((HC1_state_reg.s17) # (HC1_state_reg.s26)));


--QC1L7 is registers:u_registers|registers_cntr:u_registers_cntr|CNTR_O[4]~3
QC1L7 = (PC1L4 & (A1L20)) # (!PC1L4 & ((QC1_CNTR_O[4])));


--HC1L18 is SCSI_SM:u_SCSI_SM|SCSI_SM_INTERNALS:u_SCSI_SM_INTERNALS|Selector25~0
HC1L18 = (!HC1_state_reg.s19 & (!HC1_state_reg.s3 & (!HC1_state_reg.s10 & !HC1_state_reg.s30)));


--HC1L19 is SCSI_SM:u_SCSI_SM|SCSI_SM_INTERNALS:u_SCSI_SM_INTERNALS|Selector25~1
HC1L19 = (((A1L111 & HC1_state_reg.s8)) # (!HC1L18)) # (!HC1L4);


--HC1L13 is SCSI_SM:u_SCSI_SM|SCSI_SM_INTERNALS:u_SCSI_SM_INTERNALS|Selector13~0
HC1L13 = (HC1_state_reg.s8 & !A1L111);


--HC1L17 is SCSI_SM:u_SCSI_SM|SCSI_SM_INTERNALS:u_SCSI_SM_INTERNALS|Selector24~0
HC1L17 = (HC1_state_reg.s17) # ((HC1_state_reg.s26) # ((HC1L13) # (!HC1L27)));


--QC1L3 is registers:u_registers|registers_cntr:u_registers_cntr|CNTR_O[1]~4
QC1L3 = (PC1L4 & (A1L14)) # (!PC1L4 & ((QC1_CNTR_O[1])));


--SCLK is SCLK
SCLK = INPUT();


--AC1L1 is CPU_SM:u_CPU_SM|cpudff1:u_cpudff1|cpudff1_d~0
AC1L1 = (E1_STATE[3] & (E1_STATE[2] & (ZB1L16 & !E1_STATE[0])));


--ZB1L37 is CPU_SM:u_CPU_SM|CPU_SM_outputs:u_CPU_SM_outputs|INCFIFO_d~0
ZB1L37 = (EC1L1 & (A1L71 & ((YB1L13) # (AC1L1))));


--YB1L8 is CPU_SM:u_CPU_SM|CPU_SM_inputs:u_CPU_SM_inputs|E[43]~10
YB1L8 = (E1_STATE[0] & (E1_STATE[3] & (E1_STATE[4] & !E1_STATE[2])));


--ZB1L50 is CPU_SM:u_CPU_SM|CPU_SM_outputs:u_CPU_SM_outputs|PLLW_Y~0
ZB1L50 = (!YB1L8 & ((!YB1L14) # (!E1_STATE[3])));


--DC1L15 is CPU_SM:u_CPU_SM|cpudff4:u_cpudff4|p4b~0
DC1L15 = (ZB1L60 & (ZB1L50 & ((E1_STATE[1]) # (!ZB1L15))));


--YB1L7 is CPU_SM:u_CPU_SM|CPU_SM_inputs:u_CPU_SM_inputs|E[37]~11
YB1L7 = (E1_STATE[3] & (E1_STATE[2] & (!E1_STATE[1] & !E1_STATE[4])));


--AC1L8 is CPU_SM:u_CPU_SM|cpudff1:u_cpudff1|p1c~0
AC1L8 = (!ZB1L14 & (!ZB1L17 & (!YB1L9 & !YB1L7)));


--ZB1L51 is CPU_SM:u_CPU_SM|CPU_SM_outputs:u_CPU_SM_outputs|PLLW_Y~1
ZB1L51 = (E1_STATE[0] & (E1_STATE[3] & (E1_STATE[4] & !E1_STATE[1])));


--BC1L12 is CPU_SM:u_CPU_SM|cpudff2:u_cpudff2|p2c~0
BC1L12 = (!ZB1L51 & (((A1L71) # (!YB1L13)) # (!EC1L1)));


--AC1L9 is CPU_SM:u_CPU_SM|cpudff1:u_cpudff1|p1c~1
AC1L9 = (((E1_nDSACK & !DC1L15)) # (!BC1L12)) # (!AC1L8);


--J1_A1 is registers:u_registers|A1
J1_A1 = DFFEAS(J1L2, !GC1__clk0, _RST,  ,  ,  ,  ,  ,  );


--YB1L4 is CPU_SM:u_CPU_SM|CPU_SM_inputs:u_CPU_SM_inputs|E[12]~12
YB1L4 = (E1_BGRANT_ & (E1_nCYCLEDONE & J1_A1));


--YB1L21 is CPU_SM:u_CPU_SM|CPU_SM_inputs:u_CPU_SM_inputs|E~13
YB1L21 = (!E1_STATE[0] & (E1_STATE[1] & ((!E1_STATE[3]) # (!E1_STATE[4]))));


--YB1L15 is CPU_SM:u_CPU_SM|CPU_SM_inputs:u_CPU_SM_inputs|E[55]~14
YB1L15 = (E1_STATE[2] & ((YB1L16) # (YB1L21)));


--AC1L2 is CPU_SM:u_CPU_SM|cpudff1:u_cpudff1|cpudff1_d~1
AC1L2 = (!YB1L15 & (((!YB1L4) # (!ZB1L19)) # (!E1_STATE[1])));


--AC1L3 is CPU_SM:u_CPU_SM|cpudff1:u_cpudff1|cpudff1_d~2
AC1L3 = (ZB1L37) # (((_STERM & AC1L9)) # (!AC1L2));


--ZB1L8 is CPU_SM:u_CPU_SM|CPU_SM_outputs:u_CPU_SM_outputs|DIEH_Y~0
ZB1L8 = (!_STERM & ((YB1L13) # ((YB1L9) # (YB1L8))));


--AC1L4 is CPU_SM:u_CPU_SM|cpudff1:u_cpudff1|cpudff1_d~3
AC1L4 = (YB1L11) # ((YB1L16) # (ZB1L8));


--YB1L19 is CPU_SM:u_CPU_SM|CPU_SM_inputs:u_CPU_SM_inputs|E[61]~15
YB1L19 = (E1_STATE[1] & !E1_STATE[4]);


--ZB1L21 is CPU_SM:u_CPU_SM|CPU_SM_outputs:u_CPU_SM_outputs|Equal2~8
ZB1L21 = (E1_STATE[0] & (E1_STATE[3] & (YB1L19 & !E1_STATE[2])));


--YB1L10 is CPU_SM:u_CPU_SM|CPU_SM_inputs:u_CPU_SM_inputs|E[46]~16
YB1L10 = (E1_STATE[2] & (E1_STATE[4] & !E1_STATE[1]));


--YB1L5 is CPU_SM:u_CPU_SM|CPU_SM_inputs:u_CPU_SM_inputs|E[27]~17
YB1L5 = (E1_STATE[3] & (YB1L10 & (!E1L24 & !TB1_FIFOEMPTY)));


--AC1L5 is CPU_SM:u_CPU_SM|cpudff1:u_cpudff1|cpudff1_d~4
AC1L5 = (ZB1L62 & (!YB1L5 & ((!ZB1L21) # (!TB1_FIFOFULL))));


--ZB1L48 is CPU_SM:u_CPU_SM|CPU_SM_outputs:u_CPU_SM_outputs|PLHW_d~0
ZB1L48 = (TB1_FIFOFULL & (((!YB1L17) # (!E1_STATE[1])))) # (!TB1_FIFOFULL & (!ZB1L21 & ((!YB1L17) # (!E1_STATE[1]))));


--AC1L6 is CPU_SM:u_CPU_SM|cpudff1:u_cpudff1|cpudff1_d~5
AC1L6 = (ZB1L48 & (!YB1L20 & !ZB1L18));


--AC1L7 is CPU_SM:u_CPU_SM|cpudff1:u_cpudff1|cpudff1_d~6
AC1L7 = (AC1L3) # ((AC1L4) # ((!AC1L6) # (!AC1L5)));


--YB1L6 is CPU_SM:u_CPU_SM|CPU_SM_inputs:u_CPU_SM_inputs|E[35]~18
YB1L6 = (E1_STATE[1] & (E1_STATE[3] & (E1_STATE[2] & E1_STATE[4])));


--BC1L1 is CPU_SM:u_CPU_SM|cpudff2:u_cpudff2|cpudff2_d~0
BC1L1 = (YB1L8) # ((YB1L13 & (!E1_nDSACK & A1L71)));


--E1_DREQ_ is CPU_SM:u_CPU_SM|DREQ_
E1_DREQ_ = DFFEAS(DREQ_, GC1__clk2, E1_CCRESET_,  ,  ,  ,  ,  ,  );


--BC1L2 is CPU_SM:u_CPU_SM|cpudff2:u_cpudff2|cpudff2_d~1
BC1L2 = (!E1_STATE[3] & (E1_DMAENA & (E1_DREQ_ & !E1_STATE[1])));


--BC1L3 is CPU_SM:u_CPU_SM|cpudff2:u_cpudff2|cpudff2_d~2
BC1L3 = (E1_STATE[4] & (!E1_STATE[0] & BC1L2));


--BC1L4 is CPU_SM:u_CPU_SM|cpudff2:u_cpudff2|cpudff2_d~3
BC1L4 = (TB1_FIFOEMPTY) # (((!SB1_PTR[0] & !SB1_PTR[1])) # (!J1_FLUSHFIFO));


--BC1L5 is CPU_SM:u_CPU_SM|cpudff2:u_cpudff2|cpudff2_d~4
BC1L5 = (YB1L22 & ((BC1L4) # ((!QC1_CNTR_O[1] & BC1L3)))) # (!YB1L22 & (!QC1_CNTR_O[1] & (BC1L3)));


--A1L72 is DSK1_IN_~0
A1L72 = (!_BERR) # (!DSACK_I_[1]);


--BC1L6 is CPU_SM:u_CPU_SM|cpudff2:u_cpudff2|cpudff2_d~5
BC1L6 = (BC1L1 & ((A1L72) # ((BC1L5 & !TB1_FIFOEMPTY)))) # (!BC1L1 & (BC1L5 & ((!TB1_FIFOEMPTY))));


--BC1L13 is CPU_SM:u_CPU_SM|cpudff2:u_cpudff2|p2c~1
BC1L13 = ((E1_nDSACK & ((!ZB1L50) # (!ZB1L60)))) # (!BC1L12);


--AC1L10 is CPU_SM:u_CPU_SM|cpudff1:u_cpudff1|p1c~2
AC1L10 = (!ZB1L14 & (!ZB1L17 & ((!YB1L10) # (!E1_STATE[0]))));


--BC1L7 is CPU_SM:u_CPU_SM|cpudff2:u_cpudff2|cpudff2_d~6
BC1L7 = (BC1L6) # ((_STERM & ((BC1L13) # (!AC1L10))));


--BC1L8 is CPU_SM:u_CPU_SM|cpudff2:u_cpudff2|cpudff2_d~7
BC1L8 = (YB1L18) # ((E1_STATE[1] & (ZB1L19 & !YB1L4)));


--BC1L9 is CPU_SM:u_CPU_SM|cpudff2:u_cpudff2|cpudff2_d~8
BC1L9 = (BC1L8) # (((TB1_FIFOFULL & ZB1L21)) # (!ZB1L62));


--ZB1L38 is CPU_SM:u_CPU_SM|CPU_SM_outputs:u_CPU_SM_outputs|INCFIFO_d~1
ZB1L38 = (!YB1L15 & (!ZB1L8 & ((E1_nDSACK) # (!YB1L11))));


--BC1L10 is CPU_SM:u_CPU_SM|cpudff2:u_cpudff2|cpudff2_d~9
BC1L10 = (YB1L6) # ((BC1L7) # ((BC1L9) # (!ZB1L38)));


--YB1L23 is CPU_SM:u_CPU_SM|CPU_SM_inputs:u_CPU_SM_inputs|nE~1
YB1L23 = (E1_BGRANT_ & (E1_nCYCLEDONE & !J1_A1));


--YB1L24 is CPU_SM:u_CPU_SM|CPU_SM_inputs:u_CPU_SM_inputs|nE~2
YB1L24 = (YB1L12 & (ZB1L20 & ((SB1_PTR[0]) # (SB1_PTR[1]))));


--YB1L25 is CPU_SM:u_CPU_SM|CPU_SM_inputs:u_CPU_SM_inputs|nE~3
YB1L25 = (YB1L23 & (J1_FLUSHFIFO & (!TB1_FIFOEMPTY & YB1L24)));


--DC1L1 is CPU_SM:u_CPU_SM|cpudff4:u_cpudff4|cpudff4_d~2
DC1L1 = (TB1_FIFOFULL) # ((E1_FLUSHFIFO & ((E1L24) # (TB1_FIFOEMPTY))));


--DC1L2 is CPU_SM:u_CPU_SM|cpudff4:u_cpudff4|cpudff4_d~3
DC1L2 = (NC1L1 & ((YB1L25) # ((YB1L1 & DC1L1)))) # (!NC1L1 & (YB1L1 & ((DC1L1))));


--DC1L3 is CPU_SM:u_CPU_SM|cpudff4:u_cpudff4|cpudff4_d~4
DC1L3 = (DC1L2) # ((!_STERM & ((!AC1L8) # (!DC1L15))));


--DC1L4 is CPU_SM:u_CPU_SM|cpudff4:u_cpudff4|cpudff4_d~5
DC1L4 = ((A1L71 & ((ZB1L15) # (YB1L13)))) # (!ZB1L60);


--DC1L5 is CPU_SM:u_CPU_SM|cpudff4:u_cpudff4|cpudff4_d~6
DC1L5 = (!E1_nDSACK & ((YB1L11) # ((DC1L4 & A1L72))));


--E1_LASTWORD is CPU_SM:u_CPU_SM|LASTWORD
E1_LASTWORD = (J1_FLUSHFIFO & (!TB1_FIFOEMPTY & ((SB1_PTR[0]) # (SB1_PTR[1]))));


--YB1L3 is CPU_SM:u_CPU_SM|CPU_SM_inputs:u_CPU_SM_inputs|E[8]~19
YB1L3 = (YB1L12 & (ZB1L20 & (YB1L23 & !E1_LASTWORD)));


--DC1L6 is CPU_SM:u_CPU_SM|cpudff4:u_cpudff4|cpudff4_d~7
DC1L6 = (YB1L9) # ((E1_nDSACK & ((YB1L13) # (YB1L8))));


--DC1L7 is CPU_SM:u_CPU_SM|cpudff4:u_cpudff4|cpudff4_d~8
DC1L7 = (YB1L3) # ((_STERM & ((DC1L6) # (!BC1L12))));


--DC1L8 is CPU_SM:u_CPU_SM|cpudff4:u_cpudff4|cpudff4_d~9
DC1L8 = (YB1L12 & (ZB1L20 & ((!E1_nCYCLEDONE) # (!E1_BGRANT_))));


--DC1L9 is CPU_SM:u_CPU_SM|cpudff4:u_cpudff4|cpudff4_d~10
DC1L9 = (YB1L18) # ((DC1L8) # ((YB1L8 & A1L72)));


--ZB1L22 is CPU_SM:u_CPU_SM|CPU_SM_outputs:u_CPU_SM_outputs|Equal2~9
ZB1L22 = (E1_STATE[3] & (ZB1L16 & (!E1_STATE[0] & !E1_STATE[2])));


--DC1L10 is CPU_SM:u_CPU_SM|cpudff4:u_cpudff4|cpudff4_d~11
DC1L10 = (((!ZB1L16) # (!E1_STATE[2])) # (!E1_STATE[3])) # (!TB1_FIFOEMPTY);


--DC1L11 is CPU_SM:u_CPU_SM|cpudff4:u_cpudff4|cpudff4_d~12
DC1L11 = (!ZB1L22 & (DC1L10 & ((DC1L14) # (!E1L24))));


--DC1L12 is CPU_SM:u_CPU_SM|cpudff4:u_cpudff4|cpudff4_d~13
DC1L12 = (DC1L9) # (((!DC1L11) # (!ZB1L48)) # (!AC1L2));


--DC1L13 is CPU_SM:u_CPU_SM|cpudff4:u_cpudff4|cpudff4_d~14
DC1L13 = (DC1L3) # ((DC1L5) # ((DC1L7) # (DC1L12)));


--EC1L2 is CPU_SM:u_CPU_SM|cpudff5:u_cpudff5|cpudff5_d~1
EC1L2 = (_BERR & (EC1L1 & (YB1L13 & DSACK_I_[0])));


--CC1L1 is CPU_SM:u_CPU_SM|cpudff3:u_cpudff3|cpudff3_d~0
CC1L1 = (E1_nDSACK & (YB1L14 & ((E1_STATE[0]) # (E1_STATE[3]))));


--CC1L2 is CPU_SM:u_CPU_SM|cpudff3:u_cpudff3|cpudff3_d~1
CC1L2 = (ZB1L14) # ((EC1L2) # ((YB1L9) # (CC1L1)));


--EC1L13 is CPU_SM:u_CPU_SM|cpudff5:u_cpudff5|p5b~0
EC1L13 = (E1_STATE[1] & (ZB1L13 & (E1_STATE[2] $ (E1_STATE[4]))));


--EC1L14 is CPU_SM:u_CPU_SM|cpudff5:u_cpudff5|p5b~1
EC1L14 = (!ZB1L15 & (!ZB1L17 & !YB1L7));


--CC1L3 is CPU_SM:u_CPU_SM|cpudff3:u_cpudff3|cpudff3_d~2
CC1L3 = (_STERM & (CC1L2)) # (!_STERM & (((EC1L13) # (!EC1L14))));


--CC1L4 is CPU_SM:u_CPU_SM|cpudff3:u_cpudff3|cpudff3_d~3
CC1L4 = (NC1L1 & (((YB1L22 & !TB1_FIFOEMPTY)))) # (!NC1L1 & (YB1L25));


--CC1L5 is CPU_SM:u_CPU_SM|cpudff3:u_cpudff3|cpudff3_d~4
CC1L5 = (ZB1L22) # ((CC1L4 & ((E1L24) # (!NC1L1))));


--CC1L11 is CPU_SM:u_CPU_SM|cpudff3:u_cpudff3|p3a~0
CC1L11 = (E1_STATE[0] & (!E1_STATE[3] & ((E1_STATE[1]) # (!E1_STATE[2]))));


--ZB1L40 is CPU_SM:u_CPU_SM|CPU_SM_outputs:u_CPU_SM_outputs|PAS_Y~0
ZB1L40 = (CC1L11 & !E1_STATE[4]);


--CC1L6 is CPU_SM:u_CPU_SM|cpudff3:u_cpudff3|cpudff3_d~5
CC1L6 = (EC1L1 & ((ZB1L40) # ((TB1_FIFOFULL & ZB1L21)))) # (!EC1L1 & (((TB1_FIFOFULL & ZB1L21))));


--CC1L7 is CPU_SM:u_CPU_SM|cpudff3:u_cpudff3|cpudff3_d~6
CC1L7 = (E1_STATE[3] & (YB1L10 & ((TB1_FIFOEMPTY) # (!E1L24))));


--CC1L8 is CPU_SM:u_CPU_SM|cpudff3:u_cpudff3|cpudff3_d~7
CC1L8 = (YB1L20) # ((YB1L16) # ((CC1L6) # (CC1L7)));


--ZB1L53 is CPU_SM:u_CPU_SM|CPU_SM_outputs:u_CPU_SM_outputs|PLLW_d~0
ZB1L53 = (!YB1L6 & ((E1_DSACK_LATCHED_[0]) # ((E1_DSACK_LATCHED_[1]) # (!YB1L11))));


--CC1L9 is CPU_SM:u_CPU_SM|cpudff3:u_cpudff3|cpudff3_d~8
CC1L9 = ((YB1L12 & (ZB1L20 & YB1L4))) # (!ZB1L53);


--CC1L10 is CPU_SM:u_CPU_SM|cpudff3:u_cpudff3|cpudff3_d~9
CC1L10 = (CC1L3) # ((CC1L5) # ((CC1L8) # (CC1L9)));


--_BG is _BG
_BG = INPUT();


--E1L37 is CPU_SM:u_CPU_SM|aCYCLEDONE_~0
E1L37 = (DSACK_I_[1] & (_BERR & (DSACK_I_[0] & _STERM)));


--E1L38 is CPU_SM:u_CPU_SM|aCYCLEDONE_~1
E1L38 = (A1L114 & (A1L118 & E1L37));


--EC1L3 is CPU_SM:u_CPU_SM|cpudff5:u_cpudff5|cpudff5_d~2
EC1L3 = (YB1L18) # ((E1_STATE[1] & (ZB1L19 & YB1L23)));


--ZB1L41 is CPU_SM:u_CPU_SM|CPU_SM_outputs:u_CPU_SM_outputs|PAS_Y~1
ZB1L41 = (YB1L8 & (!E1_DSACK_LATCHED_[0] & !E1_DSACK_LATCHED_[1]));


--EC1L4 is CPU_SM:u_CPU_SM|cpudff5:u_cpudff5|cpudff5_d~3
EC1L4 = (EC1L3) # ((_STERM & ((ZB1L41) # (!BC1L12))));


--EC1L5 is CPU_SM:u_CPU_SM|cpudff5:u_cpudff5|cpudff5_d~4
EC1L5 = (QC1_CNTR_O[1]) # ((!TB1_FIFOEMPTY & (E1_DREQ_ & E1_STATE[4])));


--EC1L6 is CPU_SM:u_CPU_SM|cpudff5:u_cpudff5|cpudff5_d~5
EC1L6 = (E1_DMAENA & (!EC1L5 & ((E1_STATE[4]) # (!E1_STATE[1])))) # (!E1_DMAENA & (((E1_STATE[4]))));


--EC1L7 is CPU_SM:u_CPU_SM|cpudff5:u_cpudff5|cpudff5_d~6
EC1L7 = (!_STERM & ((EC1L13) # (!EC1L14)));


--EC1L8 is CPU_SM:u_CPU_SM|cpudff5:u_cpudff5|cpudff5_d~7
EC1L8 = (EC1L7) # ((EC1L6 & (!E1_STATE[0] & !E1_STATE[3])));


--EC1L9 is CPU_SM:u_CPU_SM|cpudff5:u_cpudff5|cpudff5_d~8
EC1L9 = (ZB1L15 & ((!DSACK_I_[0]) # (!_BERR)));


--EC1L10 is CPU_SM:u_CPU_SM|cpudff5:u_cpudff5|cpudff5_d~9
EC1L10 = (AC1L6 & (((!YB1L23) # (!ZB1L20)) # (!YB1L12)));


--EC1L11 is CPU_SM:u_CPU_SM|cpudff5:u_cpudff5|cpudff5_d~10
EC1L11 = ((EC1L1 & ((EC1L9) # (!ZB1L60)))) # (!EC1L10);


--EC1L12 is CPU_SM:u_CPU_SM|cpudff5:u_cpudff5|cpudff5_d~11
EC1L12 = ((EC1L4) # ((EC1L8) # (EC1L11))) # (!AC1L5);


--QC1L11 is registers:u_registers|registers_cntr:u_registers_cntr|CNTR_O[8]~5
QC1L11 = (QC1L9 & (!ADDR[5] & (!ADDR[3] & !ADDR[6])));


--PC1L5 is registers:u_registers|addr_decoder:u_addr_decoder|FLUSH_~0
PC1L5 = (QC1_CNTR_O[1] & (ADDR[2] & ADDR[4]));


--E1_STOPFLUSH is CPU_SM:u_CPU_SM|STOPFLUSH
E1_STOPFLUSH = DFFEAS(ZB1L80, GC1__clk1, E1_CCRESET_,  ,  ,  ,  ,  ,  );


--J1L4 is registers:u_registers|FLUSHFIFO~0
J1L4 = (QC1L11 & ((PC1L5) # ((J1_FLUSHFIFO & !E1_STOPFLUSH)))) # (!QC1L11 & (((J1_FLUSHFIFO & !E1_STOPFLUSH))));


--G1_INCBO_o is SCSI_SM:u_SCSI_SM|INCBO_o
G1_INCBO_o = DFFEAS(HC1_INCBO, GC1__clk1, G1_CRESET_,  ,  ,  ,  ,  ,  );


--SB1L5 is fifo:int_fifo|fifo_byte_ptr:u_byte_ptr|PTR[0]~0
SB1L5 = SB1_PTR[0] $ (((G1_INCBO_o & ((A1L111) # (!PC1_h_0C)))));


--QC1_CNTR_O[8] is registers:u_registers|registers_cntr:u_registers_cntr|CNTR_O[8]
QC1_CNTR_O[8] = DFFEAS(QC1L13, !GC1__clk0, _RST,  ,  ,  ,  ,  ,  );


--SB1_B is fifo:int_fifo|fifo_byte_ptr:u_byte_ptr|B
SB1_B = DFFEAS(SB1L2, !GC1__clk2, QC1_CNTR_O[8],  ,  ,  ,  ,  ,  );


--SB1_S is fifo:int_fifo|fifo_byte_ptr:u_byte_ptr|S
SB1_S = DFFEAS(PC1_h_0C, !GC1__clk2, QC1_CNTR_O[8],  ,  ,  ,  ,  ,  );


--SB1L7 is fifo:int_fifo|fifo_byte_ptr:u_byte_ptr|PTR~1
SB1L7 = (SB1_S & (SB1_B)) # (!SB1_S & ((SB1_PTR[0] $ (!SB1_PTR[1]))));


--PC1L9 is registers:u_registers|addr_decoder:u_addr_decoder|h_0C~0
PC1L9 = (QC1L9 & (ADDR[3] & (!ADDR[5] & !ADDR[6])));


--PC1_ACR_WR is registers:u_registers|addr_decoder:u_addr_decoder|ACR_WR
PC1_ACR_WR = (PC1L9 & (ADDR[2] & (!A1L111 & !ADDR[4])));


--SB1L8 is fifo:int_fifo|fifo_byte_ptr:u_byte_ptr|PTR~2
SB1L8 = (PC1_ACR_WR & (SB1L7)) # (!PC1_ACR_WR & ((G1_INCBO_o & (SB1L7)) # (!G1_INCBO_o & ((SB1_PTR[1])))));


--TB1_UP[7] is fifo:int_fifo|fifo__full_empty_ctr:u_full_empty_ctr|UP[7]
TB1_UP[7] = DFFEAS(TB1L35, GC1__clk2, QC1_CNTR_O[8],  , TB1L36,  ,  ,  ,  );


--TB1_UP[6] is fifo:int_fifo|fifo__full_empty_ctr:u_full_empty_ctr|UP[6]
TB1_UP[6] = DFFEAS(TB1L37, GC1__clk2, QC1_CNTR_O[8],  , TB1L36,  ,  ,  ,  );


--TB1_UP[5] is fifo:int_fifo|fifo__full_empty_ctr:u_full_empty_ctr|UP[5]
TB1_UP[5] = DFFEAS(TB1L38, GC1__clk2, QC1_CNTR_O[8],  , TB1L36,  ,  ,  ,  );


--TB1_UP[4] is fifo:int_fifo|fifo__full_empty_ctr:u_full_empty_ctr|UP[4]
TB1_UP[4] = DFFEAS(TB1L39, GC1__clk2, QC1_CNTR_O[8],  , TB1L36,  ,  ,  ,  );


--TB1L20 is fifo:int_fifo|fifo__full_empty_ctr:u_full_empty_ctr|FIFOEMPTY~0
TB1L20 = (!TB1_UP[7] & (!TB1_UP[6] & (!TB1_UP[5] & !TB1_UP[4])));


--TB1_UP[3] is fifo:int_fifo|fifo__full_empty_ctr:u_full_empty_ctr|UP[3]
TB1_UP[3] = DFFEAS(TB1L40, GC1__clk2, QC1_CNTR_O[8],  , TB1L36,  ,  ,  ,  );


--TB1_UP[2] is fifo:int_fifo|fifo__full_empty_ctr:u_full_empty_ctr|UP[2]
TB1_UP[2] = DFFEAS(TB1L41, GC1__clk2, QC1_CNTR_O[8],  , TB1L36,  ,  ,  ,  );


--TB1_UP[1] is fifo:int_fifo|fifo__full_empty_ctr:u_full_empty_ctr|UP[1]
TB1_UP[1] = DFFEAS(TB1L42, GC1__clk2, QC1_CNTR_O[8],  , TB1L36,  ,  ,  ,  );


--TB1_UP[0] is fifo:int_fifo|fifo__full_empty_ctr:u_full_empty_ctr|UP[0]
TB1_UP[0] = DFFEAS(E1_INCFIFO, GC1__clk2, QC1_CNTR_O[8],  , TB1L36,  ,  ,  ,  );


--TB1L21 is fifo:int_fifo|fifo__full_empty_ctr:u_full_empty_ctr|FIFOEMPTY~1
TB1L21 = (!TB1_UP[3] & (!TB1_UP[2] & (!TB1_UP[1] & !TB1_UP[0])));


--TB1_DOWN[6] is fifo:int_fifo|fifo__full_empty_ctr:u_full_empty_ctr|DOWN[6]
TB1_DOWN[6] = DFFEAS(TB1L15, GC1__clk2, QC1_CNTR_O[8],  ,  ,  ,  ,  ,  );


--TB1_DOWN[5] is fifo:int_fifo|fifo__full_empty_ctr:u_full_empty_ctr|DOWN[5]
TB1_DOWN[5] = DFFEAS(TB1L13, GC1__clk2, QC1_CNTR_O[8],  ,  ,  ,  ,  ,  );


--TB1_DOWN[4] is fifo:int_fifo|fifo__full_empty_ctr:u_full_empty_ctr|DOWN[4]
TB1_DOWN[4] = DFFEAS(TB1L11, GC1__clk2, QC1_CNTR_O[8],  ,  ,  ,  ,  ,  );


--TB1_DOWN[3] is fifo:int_fifo|fifo__full_empty_ctr:u_full_empty_ctr|DOWN[3]
TB1_DOWN[3] = DFFEAS(TB1L9, GC1__clk2, QC1_CNTR_O[8],  ,  ,  ,  ,  ,  );


--TB1L22 is fifo:int_fifo|fifo__full_empty_ctr:u_full_empty_ctr|FIFOEMPTY~2
TB1L22 = (!TB1_DOWN[6] & (!TB1_DOWN[5] & (!TB1_DOWN[4] & !TB1_DOWN[3])));


--TB1_DOWN[2] is fifo:int_fifo|fifo__full_empty_ctr:u_full_empty_ctr|DOWN[2]
TB1_DOWN[2] = DFFEAS(TB1L7, GC1__clk2, QC1_CNTR_O[8],  ,  ,  ,  ,  ,  );


--TB1_DOWN[1] is fifo:int_fifo|fifo__full_empty_ctr:u_full_empty_ctr|DOWN[1]
TB1_DOWN[1] = DFFEAS(TB1L5, GC1__clk2, QC1_CNTR_O[8],  ,  ,  ,  ,  ,  );


--TB1_DOWN[0] is fifo:int_fifo|fifo__full_empty_ctr:u_full_empty_ctr|DOWN[0]
TB1_DOWN[0] = DFFEAS(TB1L3, GC1__clk2, QC1_CNTR_O[8],  ,  ,  ,  ,  ,  );


--TB1L23 is fifo:int_fifo|fifo__full_empty_ctr:u_full_empty_ctr|FIFOEMPTY~3
TB1L23 = (!TB1_DOWN[2] & (!TB1_DOWN[1] & !TB1_DOWN[0]));


--TB1L24 is fifo:int_fifo|fifo__full_empty_ctr:u_full_empty_ctr|FIFOEMPTY~4
TB1L24 = (((!TB1L23) # (!TB1L22)) # (!TB1L21)) # (!TB1L20);


--SC1L2 is registers:u_registers|registers_term:u_registers_term|CYCLE_ACTIVE~0
SC1L2 = (_CS) # ((A1L114) # ((ADDR[6]) # (PC1_h_0C)));


--SC1L1 is registers:u_registers|registers_term:u_registers_term|Add0~0
SC1L1 = (SC1_TERM_COUNTER[0] & SC1_TERM_COUNTER[1]);


--SC1L9 is registers:u_registers|registers_term:u_registers_term|TERM_COUNTER~0
SC1L9 = (!A1L114 & (SC1_TERM_COUNTER[2] $ (((!SC1L2 & SC1L1)))));


--SC1L10 is registers:u_registers|registers_term:u_registers_term|TERM_COUNTER~1
SC1L10 = (!A1L114 & (SC1_TERM_COUNTER[0] $ (!SC1L2)));


--SC1L11 is registers:u_registers|registers_term:u_registers_term|TERM_COUNTER~2
SC1L11 = (!A1L114 & (SC1_TERM_COUNTER[1] $ (((!SC1L2 & SC1_TERM_COUNTER[0])))));


--TB1L16 is fifo:int_fifo|fifo__full_empty_ctr:u_full_empty_ctr|Equal2~0
TB1L16 = (TB1_UP[7] & (TB1_UP[6] & (TB1_UP[5] & TB1_UP[4])));


--TB1L17 is fifo:int_fifo|fifo__full_empty_ctr:u_full_empty_ctr|Equal2~1
TB1L17 = (TB1_UP[3] & TB1_UP[2]);


--TB1L18 is fifo:int_fifo|fifo__full_empty_ctr:u_full_empty_ctr|Equal2~2
TB1L18 = (TB1_UP[1] & (TB1_UP[0] & (TB1L16 & TB1L17)));


--HC1_state_reg.s1 is SCSI_SM:u_SCSI_SM|SCSI_SM_INTERNALS:u_SCSI_SM_INTERNALS|state_reg.s1
HC1_state_reg.s1 = DFFEAS(HC1_state_reg.s18, GC1__clk1, G1_CRESET_,  ,  ,  ,  ,  ,  );


--HC1L12 is SCSI_SM:u_SCSI_SM|SCSI_SM_INTERNALS:u_SCSI_SM_INTERNALS|Selector12~0
HC1L12 = (HC1_state_reg.s1) # ((!QC1_CNTR_O[1] & (!G1_CCPUREQ & !HC1_state_reg.s0)));


--PC1_WDREGREQ is registers:u_registers|addr_decoder:u_addr_decoder|WDREGREQ
PC1_WDREGREQ = (ADDR[6] & (!_CS & !A1L114));


--G1_RDFIFO_d is SCSI_SM:u_SCSI_SM|RDFIFO_d
G1_RDFIFO_d = DFFEAS(HC1L15, GC1__clk1, G1_CRESET_,  ,  ,  ,  ,  ,  );


--E1_INCFIFO is CPU_SM:u_CPU_SM|INCFIFO
E1_INCFIFO = DFFEAS(ZB1L39, GC1__clk1, E1_CCRESET_,  ,  ,  ,  ,  ,  );


--E1_DECFIFO is CPU_SM:u_CPU_SM|DECFIFO
E1_DECFIFO = DFFEAS(ZB1L7, GC1__clk1, E1_CCRESET_,  ,  ,  ,  ,  ,  );


--G1L14 is SCSI_SM:u_SCSI_SM|RDFIFO_o~0
G1L14 = (!E1_DECFIFO & ((G1_RDFIFO_o) # ((G1_RDFIFO_d & !E1_INCFIFO))));


--_DREQ is _DREQ
_DREQ = INPUT();


--DREQ_ is DREQ_
DREQ_ = (!_DREQ & QC1_CNTR_O[8]);


--G1_RIFIFO_d is SCSI_SM:u_SCSI_SM|RIFIFO_d
G1_RIFIFO_d = DFFEAS(HC1L24, GC1__clk1, G1_CRESET_,  ,  ,  ,  ,  ,  );


--G1L18 is SCSI_SM:u_SCSI_SM|RIFIFO_o~0
G1L18 = (G1_RIFIFO_d & !G1_RDFIFO_d);


--G1L19 is SCSI_SM:u_SCSI_SM|RIFIFO_o~1
G1L19 = (E1_DECFIFO & (G1_RIFIFO_o)) # (!E1_DECFIFO & (!E1_INCFIFO & ((G1_RIFIFO_o) # (G1L18))));


--HC1_state_reg.s14 is SCSI_SM:u_SCSI_SM|SCSI_SM_INTERNALS:u_SCSI_SM_INTERNALS|state_reg.s14
HC1_state_reg.s14 = DFFEAS(HC1L11, GC1__clk1, G1_CRESET_,  ,  ,  ,  ,  ,  );


--HC1_state_reg.s25 is SCSI_SM:u_SCSI_SM|SCSI_SM_INTERNALS:u_SCSI_SM_INTERNALS|state_reg.s25
HC1_state_reg.s25 = DFFEAS(HC1L14, GC1__clk1, G1_CRESET_,  ,  ,  ,  ,  ,  );


--G1_CDSACK_ is SCSI_SM:u_SCSI_SM|CDSACK_
G1_CDSACK_ = DFFEAS(G1_nLS2CPU, GC1__clk1, G1_CRESET_,  ,  ,  ,  ,  ,  );


--HC1L6 is SCSI_SM:u_SCSI_SM|SCSI_SM_INTERNALS:u_SCSI_SM_INTERNALS|Selector1~0
HC1L6 = (HC1_state_reg.s14 & (((!G1_CDSACK_) # (!HC1_state_reg.s0)))) # (!HC1_state_reg.s14 & (HC1_state_reg.s25 & ((!G1_CDSACK_) # (!HC1_state_reg.s0))));


--HC1L7 is SCSI_SM:u_SCSI_SM|SCSI_SM_INTERNALS:u_SCSI_SM_INTERNALS|Selector1~1
HC1L7 = (HC1_state_reg.s16 & (!G1_CCPUREQ & ((HC1L30) # (!TB1_FIFOEMPTY))));


--HC1_state_reg.s12 is SCSI_SM:u_SCSI_SM|SCSI_SM_INTERNALS:u_SCSI_SM_INTERNALS|state_reg.s12
HC1_state_reg.s12 = DFFEAS(HC1_state_reg.s20, GC1__clk1, G1_CRESET_,  ,  ,  ,  ,  ,  );


--HC1L32 is SCSI_SM:u_SCSI_SM|SCSI_SM_INTERNALS:u_SCSI_SM_INTERNALS|always1~2
HC1L32 = (QC1_CNTR_O[1] & !G1_CCPUREQ);


--HC1L8 is SCSI_SM:u_SCSI_SM|SCSI_SM_INTERNALS:u_SCSI_SM_INTERNALS|Selector1~2
HC1L8 = (HC1L32 & (!HC1_state_reg.s0 & ((TB1_FIFOFULL) # (!HC1L31))));


--HC1L9 is SCSI_SM:u_SCSI_SM|SCSI_SM_INTERNALS:u_SCSI_SM_INTERNALS|Selector1~3
HC1L9 = (!HC1L6 & (!HC1L7 & (!HC1_state_reg.s12 & !HC1L8)));


--HC1L20 is SCSI_SM:u_SCSI_SM|SCSI_SM_INTERNALS:u_SCSI_SM_INTERNALS|Selector25~2
HC1L20 = (A1L111 & HC1_state_reg.s8);


--HC1L10 is SCSI_SM:u_SCSI_SM|SCSI_SM_INTERNALS:u_SCSI_SM_INTERNALS|Selector7~0
HC1L10 = (G1_CCPUREQ & ((HC1_state_reg.s16) # (!HC1_state_reg.s0)));


--AS_O_ is AS_O_
AS_O_ = DFFEAS(A1L8, !SCLK,  ,  ,  ,  ,  ,  ,  );


--DS_O_ is DS_O_
DS_O_ = DFFEAS(A1L74, !SCLK,  ,  ,  ,  ,  ,  ,  );


--KC1_LD_LATCH[0] is datapath:u_datapath|datapath_output:u_datapath_output|LD_LATCH[0]
KC1_LD_LATCH[0] = DFFEAS(WB1_ram_block1a0, GC1__clk2,  ,  , E1_PAS,  ,  ,  ,  );


--E1_F2CPUL is CPU_SM:u_CPU_SM|F2CPUL
E1_F2CPUL = DFFEAS(ZB1L34, GC1__clk1, E1_CCRESET_,  ,  ,  ,  ,  ,  );


--G1_S2CPU_o is SCSI_SM:u_SCSI_SM|S2CPU_o
G1_S2CPU_o = DFFEAS(HC1L21, GC1__clk1, G1_CRESET_,  ,  ,  ,  ,  ,  );


--KC1L10 is datapath:u_datapath|datapath_output:u_datapath_output|DATA[3]~0
KC1L10 = (E1_F2CPUL & !G1_S2CPU_o);


--PC1L6 is registers:u_registers|addr_decoder:u_addr_decoder|ISTR_RD_~0
PC1L6 = (ADDR[2] & ADDR[4]);


--KC1L1 is datapath:u_datapath|datapath_output:u_datapath_output|DATA[0]~1
KC1L1 = (!E1_F2CPUL & !G1_S2CPU_o);


--KC1L2 is datapath:u_datapath|datapath_output:u_datapath_output|DATA[0]~2
KC1L2 = (A1L111 & (PC1L9 & (PC1L6 & KC1L1)));


--RC1_FE is registers:u_registers|registers_istr:u_registers_istr|FE
RC1_FE = DFFEAS(RC1L2, !GC1__clk0, _RST,  , RC1L3,  ,  ,  ,  );


--KC1L3 is datapath:u_datapath|datapath_output:u_datapath_output|DATA[0]~3
KC1L3 = (KC1_LD_LATCH[0] & ((KC1L10) # ((KC1L2 & !RC1_FE)))) # (!KC1_LD_LATCH[0] & (((KC1L2 & !RC1_FE))));


--KC1_LD_LATCH[1] is datapath:u_datapath|datapath_output:u_datapath_output|LD_LATCH[1]
KC1_LD_LATCH[1] = DFFEAS(WB1_ram_block1a1, GC1__clk2,  ,  , E1_PAS,  ,  ,  ,  );


--KC1L4 is datapath:u_datapath|datapath_output:u_datapath_output|DATA[1]~4
KC1L4 = (A1L111 & (PC1L9 & (PC1L2 & KC1L1)));


--KC1L5 is datapath:u_datapath|datapath_output:u_datapath_output|DATA[1]~5
KC1L5 = (QC1_CNTR_O[1] & ((KC1L4) # ((KC1L10 & KC1_LD_LATCH[1])))) # (!QC1_CNTR_O[1] & (KC1L10 & (KC1_LD_LATCH[1])));


--RC1_FF is registers:u_registers|registers_istr:u_registers_istr|FF
RC1_FF = DFFEAS(RC1L5, !GC1__clk0, _RST,  , RC1L3,  ,  ,  ,  );


--PC1L3 is registers:u_registers|addr_decoder:u_addr_decoder|CONTR_RD_~1
PC1L3 = (A1L111 & (QC1L10 & (PC1L2 & !ADDR[5])));


--KC1L6 is datapath:u_datapath|datapath_output:u_datapath_output|DATA[1]~6
KC1L6 = (KC1L5) # ((KC1L2 & (RC1_FF & !PC1L3)));


--KC1_LD_LATCH[2] is datapath:u_datapath|datapath_output:u_datapath_output|LD_LATCH[2]
KC1_LD_LATCH[2] = DFFEAS(WB1_ram_block1a2, GC1__clk2,  ,  , E1_PAS,  ,  ,  ,  );


--KC1L7 is datapath:u_datapath|datapath_output:u_datapath_output|DATA[2]~7
KC1L7 = (QC1L11 & (ADDR[2] & (KC1L1 & !ADDR[4])));


--KC1L8 is datapath:u_datapath|datapath_output:u_datapath_output|DATA[2]~8
KC1L8 = (A1L111 & ((KC1L7) # ((QC1_CNTR_O[2] & KC1L4)))) # (!A1L111 & (((QC1_CNTR_O[2] & KC1L4))));


--KC1L9 is datapath:u_datapath|datapath_output:u_datapath_output|DATA[2]~9
KC1L9 = (KC1L8) # ((E1_F2CPUL & (KC1_LD_LATCH[2] & !G1_S2CPU_o)));


--KC1_LD_LATCH[3] is datapath:u_datapath|datapath_output:u_datapath_output|LD_LATCH[3]
KC1_LD_LATCH[3] = DFFEAS(WB1_ram_block1a3, GC1__clk2,  ,  , E1_PAS,  ,  ,  ,  );


--KC1L11 is datapath:u_datapath|datapath_output:u_datapath_output|DATA[3]~10
KC1L11 = (E1_F2CPUL & (KC1_LD_LATCH[3] & !G1_S2CPU_o));


--KC1_LD_LATCH[4] is datapath:u_datapath|datapath_output:u_datapath_output|LD_LATCH[4]
KC1_LD_LATCH[4] = DFFEAS(WB1_ram_block1a4, GC1__clk2,  ,  , E1_PAS,  ,  ,  ,  );


--KC1L12 is datapath:u_datapath|datapath_output:u_datapath_output|DATA[4]~11
KC1L12 = (QC1_CNTR_O[4] & ((KC1L4) # ((KC1L10 & KC1_LD_LATCH[4])))) # (!QC1_CNTR_O[4] & (KC1L10 & (KC1_LD_LATCH[4])));


--RC1_INT_P is registers:u_registers|registers_istr:u_registers_istr|INT_P
RC1_INT_P = DFFEAS(RC1L10, !GC1__clk0, _RST,  , RC1L3,  ,  ,  ,  );


--KC1L13 is datapath:u_datapath|datapath_output:u_datapath_output|DATA[4]~12
KC1L13 = (KC1L12) # ((KC1L2 & (RC1_INT_P & !PC1L3)));


--RC1_INT_F is registers:u_registers|registers_istr:u_registers_istr|INT_F
RC1_INT_F = DFFEAS(RC1L8, !GC1__clk0, _RST,  , RC1L3,  ,  ,  ,  );


--KC1_LD_LATCH[5] is datapath:u_datapath|datapath_output:u_datapath_output|LD_LATCH[5]
KC1_LD_LATCH[5] = DFFEAS(WB1_ram_block1a5, GC1__clk2,  ,  , E1_PAS,  ,  ,  ,  );


--KC1L14 is datapath:u_datapath|datapath_output:u_datapath_output|DATA[5]~13
KC1L14 = (KC1L10 & ((KC1_LD_LATCH[5]) # ((KC1L2 & RC1_INT_F)))) # (!KC1L10 & (KC1L2 & (RC1_INT_F)));


--KC1_LD_LATCH[6] is datapath:u_datapath|datapath_output:u_datapath_output|LD_LATCH[6]
KC1_LD_LATCH[6] = DFFEAS(WB1_ram_block1a6, GC1__clk2,  ,  , E1_PAS,  ,  ,  ,  );


--KC1L15 is datapath:u_datapath|datapath_output:u_datapath_output|DATA[6]~14
KC1L15 = (KC1L10 & ((KC1_LD_LATCH[6]) # ((KC1L2 & RC1_INT_F)))) # (!KC1L10 & (KC1L2 & (RC1_INT_F)));


--KC1_LD_LATCH[7] is datapath:u_datapath|datapath_output:u_datapath_output|LD_LATCH[7]
KC1_LD_LATCH[7] = DFFEAS(WB1_ram_block1a7, GC1__clk2,  ,  , E1_PAS,  ,  ,  ,  );


--KC1L16 is datapath:u_datapath|datapath_output:u_datapath_output|DATA[7]~15
KC1L16 = (KC1L10 & ((KC1_LD_LATCH[7]) # ((KC1L2 & RC1_INT_F)))) # (!KC1L10 & (KC1L2 & (RC1_INT_F)));


--LC1_SCSI_DATA_LATCHED[0] is datapath:u_datapath|datapath_scsi:u_datapath_scsi|SCSI_DATA_LATCHED[0]
LC1_SCSI_DATA_LATCHED[0] = DFFEAS(A1L87, !SCLK, G1_S2CPU_o,  , G1_nLS2CPU,  ,  ,  ,  );


--KC1_LD_LATCH[8] is datapath:u_datapath|datapath_output:u_datapath_output|LD_LATCH[8]
KC1_LD_LATCH[8] = DFFEAS(WB1_ram_block1a8, GC1__clk2,  ,  , E1_PAS,  ,  ,  ,  );


--KC1L17 is datapath:u_datapath|datapath_output:u_datapath_output|DATA[8]~16
KC1L17 = (G1_S2CPU_o & (LC1_SCSI_DATA_LATCHED[0])) # (!G1_S2CPU_o & (((E1_F2CPUL & KC1_LD_LATCH[8]))));


--KC1L18 is datapath:u_datapath|datapath_output:u_datapath_output|DATA[8]~17
KC1L18 = (KC1L17) # ((QC1_CNTR_O[8] & (KC1L1 & PC1L3)));


--LC1_SCSI_DATA_LATCHED[1] is datapath:u_datapath|datapath_scsi:u_datapath_scsi|SCSI_DATA_LATCHED[1]
LC1_SCSI_DATA_LATCHED[1] = DFFEAS(A1L89, !SCLK, G1_S2CPU_o,  , G1_nLS2CPU,  ,  ,  ,  );


--KC1_LD_LATCH[9] is datapath:u_datapath|datapath_output:u_datapath_output|LD_LATCH[9]
KC1_LD_LATCH[9] = DFFEAS(WB1_ram_block1a9, GC1__clk2,  ,  , E1_PAS,  ,  ,  ,  );


--KC1L19 is datapath:u_datapath|datapath_output:u_datapath_output|DATA[9]~18
KC1L19 = (G1_S2CPU_o & (LC1_SCSI_DATA_LATCHED[1])) # (!G1_S2CPU_o & (((E1_F2CPUL & KC1_LD_LATCH[9]))));


--LC1_SCSI_DATA_LATCHED[2] is datapath:u_datapath|datapath_scsi:u_datapath_scsi|SCSI_DATA_LATCHED[2]
LC1_SCSI_DATA_LATCHED[2] = DFFEAS(A1L91, !SCLK, G1_S2CPU_o,  , G1_nLS2CPU,  ,  ,  ,  );


--KC1_LD_LATCH[10] is datapath:u_datapath|datapath_output:u_datapath_output|LD_LATCH[10]
KC1_LD_LATCH[10] = DFFEAS(WB1_ram_block1a10, GC1__clk2,  ,  , E1_PAS,  ,  ,  ,  );


--KC1L20 is datapath:u_datapath|datapath_output:u_datapath_output|DATA[10]~19
KC1L20 = (G1_S2CPU_o & (LC1_SCSI_DATA_LATCHED[2])) # (!G1_S2CPU_o & (((E1_F2CPUL & KC1_LD_LATCH[10]))));


--LC1_SCSI_DATA_LATCHED[3] is datapath:u_datapath|datapath_scsi:u_datapath_scsi|SCSI_DATA_LATCHED[3]
LC1_SCSI_DATA_LATCHED[3] = DFFEAS(A1L93, !SCLK, G1_S2CPU_o,  , G1_nLS2CPU,  ,  ,  ,  );


--KC1_LD_LATCH[11] is datapath:u_datapath|datapath_output:u_datapath_output|LD_LATCH[11]
KC1_LD_LATCH[11] = DFFEAS(WB1_ram_block1a11, GC1__clk2,  ,  , E1_PAS,  ,  ,  ,  );


--KC1L21 is datapath:u_datapath|datapath_output:u_datapath_output|DATA[11]~20
KC1L21 = (G1_S2CPU_o & (LC1_SCSI_DATA_LATCHED[3])) # (!G1_S2CPU_o & (((E1_F2CPUL & KC1_LD_LATCH[11]))));


--LC1_SCSI_DATA_LATCHED[4] is datapath:u_datapath|datapath_scsi:u_datapath_scsi|SCSI_DATA_LATCHED[4]
LC1_SCSI_DATA_LATCHED[4] = DFFEAS(A1L95, !SCLK, G1_S2CPU_o,  , G1_nLS2CPU,  ,  ,  ,  );


--KC1_LD_LATCH[12] is datapath:u_datapath|datapath_output:u_datapath_output|LD_LATCH[12]
KC1_LD_LATCH[12] = DFFEAS(WB1_ram_block1a12, GC1__clk2,  ,  , E1_PAS,  ,  ,  ,  );


--KC1L22 is datapath:u_datapath|datapath_output:u_datapath_output|DATA[12]~21
KC1L22 = (G1_S2CPU_o & (LC1_SCSI_DATA_LATCHED[4])) # (!G1_S2CPU_o & (((E1_F2CPUL & KC1_LD_LATCH[12]))));


--LC1_SCSI_DATA_LATCHED[5] is datapath:u_datapath|datapath_scsi:u_datapath_scsi|SCSI_DATA_LATCHED[5]
LC1_SCSI_DATA_LATCHED[5] = DFFEAS(A1L97, !SCLK, G1_S2CPU_o,  , G1_nLS2CPU,  ,  ,  ,  );


--KC1_LD_LATCH[13] is datapath:u_datapath|datapath_output:u_datapath_output|LD_LATCH[13]
KC1_LD_LATCH[13] = DFFEAS(WB1_ram_block1a13, GC1__clk2,  ,  , E1_PAS,  ,  ,  ,  );


--KC1L23 is datapath:u_datapath|datapath_output:u_datapath_output|DATA[13]~22
KC1L23 = (G1_S2CPU_o & (LC1_SCSI_DATA_LATCHED[5])) # (!G1_S2CPU_o & (((E1_F2CPUL & KC1_LD_LATCH[13]))));


--LC1_SCSI_DATA_LATCHED[6] is datapath:u_datapath|datapath_scsi:u_datapath_scsi|SCSI_DATA_LATCHED[6]
LC1_SCSI_DATA_LATCHED[6] = DFFEAS(A1L99, !SCLK, G1_S2CPU_o,  , G1_nLS2CPU,  ,  ,  ,  );


--KC1_LD_LATCH[14] is datapath:u_datapath|datapath_output:u_datapath_output|LD_LATCH[14]
KC1_LD_LATCH[14] = DFFEAS(WB1_ram_block1a14, GC1__clk2,  ,  , E1_PAS,  ,  ,  ,  );


--KC1L24 is datapath:u_datapath|datapath_output:u_datapath_output|DATA[14]~23
KC1L24 = (G1_S2CPU_o & (LC1_SCSI_DATA_LATCHED[6])) # (!G1_S2CPU_o & (((E1_F2CPUL & KC1_LD_LATCH[14]))));


--LC1_SCSI_DATA_LATCHED[7] is datapath:u_datapath|datapath_scsi:u_datapath_scsi|SCSI_DATA_LATCHED[7]
LC1_SCSI_DATA_LATCHED[7] = DFFEAS(A1L101, !SCLK, G1_S2CPU_o,  , G1_nLS2CPU,  ,  ,  ,  );


--KC1_LD_LATCH[15] is datapath:u_datapath|datapath_output:u_datapath_output|LD_LATCH[15]
KC1_LD_LATCH[15] = DFFEAS(WB1_ram_block1a15, GC1__clk2,  ,  , E1_PAS,  ,  ,  ,  );


--KC1L25 is datapath:u_datapath|datapath_output:u_datapath_output|DATA[15]~24
KC1L25 = (G1_S2CPU_o & (LC1_SCSI_DATA_LATCHED[7])) # (!G1_S2CPU_o & (((E1_F2CPUL & KC1_LD_LATCH[15]))));


--KC1_UD_LATCH[0] is datapath:u_datapath|datapath_output:u_datapath_output|UD_LATCH[0]
KC1_UD_LATCH[0] = DFFEAS(KC1L76, GC1__clk2,  ,  , E1_PAS,  ,  ,  ,  );


--E1_F2CPUH is CPU_SM:u_CPU_SM|F2CPUH
E1_F2CPUH = DFFEAS(ZB1L29, GC1__clk1, E1_CCRESET_,  ,  ,  ,  ,  ,  );


--KC1L26 is datapath:u_datapath|datapath_output:u_datapath_output|DATA[16]~25
KC1L26 = (KC1_UD_LATCH[0] & (E1_F2CPUH & !G1_S2CPU_o));


--KC1_UD_LATCH[1] is datapath:u_datapath|datapath_output:u_datapath_output|UD_LATCH[1]
KC1_UD_LATCH[1] = DFFEAS(KC1L77, GC1__clk2,  ,  , E1_PAS,  ,  ,  ,  );


--KC1L27 is datapath:u_datapath|datapath_output:u_datapath_output|DATA[17]~26
KC1L27 = (E1_F2CPUH & (KC1_UD_LATCH[1] & !G1_S2CPU_o));


--KC1_UD_LATCH[2] is datapath:u_datapath|datapath_output:u_datapath_output|UD_LATCH[2]
KC1_UD_LATCH[2] = DFFEAS(KC1L78, GC1__clk2,  ,  , E1_PAS,  ,  ,  ,  );


--KC1L28 is datapath:u_datapath|datapath_output:u_datapath_output|DATA[18]~27
KC1L28 = (E1_F2CPUH & (KC1_UD_LATCH[2] & !G1_S2CPU_o));


--KC1_UD_LATCH[3] is datapath:u_datapath|datapath_output:u_datapath_output|UD_LATCH[3]
KC1_UD_LATCH[3] = DFFEAS(KC1L79, GC1__clk2,  ,  , E1_PAS,  ,  ,  ,  );


--KC1L29 is datapath:u_datapath|datapath_output:u_datapath_output|DATA[19]~28
KC1L29 = (E1_F2CPUH & (KC1_UD_LATCH[3] & !G1_S2CPU_o));


--KC1_UD_LATCH[4] is datapath:u_datapath|datapath_output:u_datapath_output|UD_LATCH[4]
KC1_UD_LATCH[4] = DFFEAS(KC1L80, GC1__clk2,  ,  , E1_PAS,  ,  ,  ,  );


--KC1L30 is datapath:u_datapath|datapath_output:u_datapath_output|DATA[20]~29
KC1L30 = (E1_F2CPUH & (KC1_UD_LATCH[4] & !G1_S2CPU_o));


--KC1_UD_LATCH[5] is datapath:u_datapath|datapath_output:u_datapath_output|UD_LATCH[5]
KC1_UD_LATCH[5] = DFFEAS(KC1L81, GC1__clk2,  ,  , E1_PAS,  ,  ,  ,  );


--KC1L31 is datapath:u_datapath|datapath_output:u_datapath_output|DATA[21]~30
KC1L31 = (E1_F2CPUH & (KC1_UD_LATCH[5] & !G1_S2CPU_o));


--KC1_UD_LATCH[6] is datapath:u_datapath|datapath_output:u_datapath_output|UD_LATCH[6]
KC1_UD_LATCH[6] = DFFEAS(KC1L82, GC1__clk2,  ,  , E1_PAS,  ,  ,  ,  );


--KC1L32 is datapath:u_datapath|datapath_output:u_datapath_output|DATA[22]~31
KC1L32 = (E1_F2CPUH & (KC1_UD_LATCH[6] & !G1_S2CPU_o));


--KC1_UD_LATCH[7] is datapath:u_datapath|datapath_output:u_datapath_output|UD_LATCH[7]
KC1_UD_LATCH[7] = DFFEAS(KC1L83, GC1__clk2,  ,  , E1_PAS,  ,  ,  ,  );


--KC1L33 is datapath:u_datapath|datapath_output:u_datapath_output|DATA[23]~32
KC1L33 = (E1_F2CPUH & (KC1_UD_LATCH[7] & !G1_S2CPU_o));


--KC1_UD_LATCH[8] is datapath:u_datapath|datapath_output:u_datapath_output|UD_LATCH[8]
KC1_UD_LATCH[8] = DFFEAS(KC1L84, GC1__clk2,  ,  , E1_PAS,  ,  ,  ,  );


--KC1L34 is datapath:u_datapath|datapath_output:u_datapath_output|DATA[24]~33
KC1L34 = (G1_S2CPU_o & (LC1_SCSI_DATA_LATCHED[0])) # (!G1_S2CPU_o & (((E1_F2CPUH & KC1_UD_LATCH[8]))));


--KC1_UD_LATCH[9] is datapath:u_datapath|datapath_output:u_datapath_output|UD_LATCH[9]
KC1_UD_LATCH[9] = DFFEAS(KC1L85, GC1__clk2,  ,  , E1_PAS,  ,  ,  ,  );


--KC1L35 is datapath:u_datapath|datapath_output:u_datapath_output|DATA[25]~34
KC1L35 = (G1_S2CPU_o & (LC1_SCSI_DATA_LATCHED[1])) # (!G1_S2CPU_o & (((E1_F2CPUH & KC1_UD_LATCH[9]))));


--KC1_UD_LATCH[10] is datapath:u_datapath|datapath_output:u_datapath_output|UD_LATCH[10]
KC1_UD_LATCH[10] = DFFEAS(KC1L86, GC1__clk2,  ,  , E1_PAS,  ,  ,  ,  );


--KC1L36 is datapath:u_datapath|datapath_output:u_datapath_output|DATA[26]~35
KC1L36 = (G1_S2CPU_o & (LC1_SCSI_DATA_LATCHED[2])) # (!G1_S2CPU_o & (((E1_F2CPUH & KC1_UD_LATCH[10]))));


--KC1_UD_LATCH[11] is datapath:u_datapath|datapath_output:u_datapath_output|UD_LATCH[11]
KC1_UD_LATCH[11] = DFFEAS(KC1L87, GC1__clk2,  ,  , E1_PAS,  ,  ,  ,  );


--KC1L37 is datapath:u_datapath|datapath_output:u_datapath_output|DATA[27]~36
KC1L37 = (G1_S2CPU_o & (LC1_SCSI_DATA_LATCHED[3])) # (!G1_S2CPU_o & (((E1_F2CPUH & KC1_UD_LATCH[11]))));


--KC1_UD_LATCH[12] is datapath:u_datapath|datapath_output:u_datapath_output|UD_LATCH[12]
KC1_UD_LATCH[12] = DFFEAS(KC1L88, GC1__clk2,  ,  , E1_PAS,  ,  ,  ,  );


--KC1L38 is datapath:u_datapath|datapath_output:u_datapath_output|DATA[28]~37
KC1L38 = (G1_S2CPU_o & (LC1_SCSI_DATA_LATCHED[4])) # (!G1_S2CPU_o & (((E1_F2CPUH & KC1_UD_LATCH[12]))));


--KC1_UD_LATCH[13] is datapath:u_datapath|datapath_output:u_datapath_output|UD_LATCH[13]
KC1_UD_LATCH[13] = DFFEAS(KC1L89, GC1__clk2,  ,  , E1_PAS,  ,  ,  ,  );


--KC1L39 is datapath:u_datapath|datapath_output:u_datapath_output|DATA[29]~38
KC1L39 = (G1_S2CPU_o & (LC1_SCSI_DATA_LATCHED[5])) # (!G1_S2CPU_o & (((E1_F2CPUH & KC1_UD_LATCH[13]))));


--KC1_UD_LATCH[14] is datapath:u_datapath|datapath_output:u_datapath_output|UD_LATCH[14]
KC1_UD_LATCH[14] = DFFEAS(KC1L90, GC1__clk2,  ,  , E1_PAS,  ,  ,  ,  );


--KC1L40 is datapath:u_datapath|datapath_output:u_datapath_output|DATA[30]~39
KC1L40 = (G1_S2CPU_o & (LC1_SCSI_DATA_LATCHED[6])) # (!G1_S2CPU_o & (((E1_F2CPUH & KC1_UD_LATCH[14]))));


--KC1_UD_LATCH[15] is datapath:u_datapath|datapath_output:u_datapath_output|UD_LATCH[15]
KC1_UD_LATCH[15] = DFFEAS(KC1L91, GC1__clk2,  ,  , E1_PAS,  ,  ,  ,  );


--KC1L41 is datapath:u_datapath|datapath_output:u_datapath_output|DATA[31]~40
KC1L41 = (G1_S2CPU_o & (LC1_SCSI_DATA_LATCHED[7])) # (!G1_S2CPU_o & (((E1_F2CPUH & KC1_UD_LATCH[15]))));


--E1_DIEH is CPU_SM:u_CPU_SM|DIEH
E1_DIEH = DFFEAS(ZB1L11, GC1__clk1, E1_CCRESET_,  ,  ,  ,  ,  ,  );


--LC1L10 is datapath:u_datapath|datapath_scsi:u_datapath_scsi|SCSI_DATA_OUT[0]~0
LC1L10 = (ADDR[3] & (A1L36 & (E1_DIEH))) # (!ADDR[3] & (((A1L12))));


--G1_CPU2S_o is SCSI_SM:u_SCSI_SM|CPU2S_o
G1_CPU2S_o = DFFEAS(HC1L23, GC1__clk1, G1_CRESET_,  ,  ,  ,  ,  ,  );


--G1_F2S_o is SCSI_SM:u_SCSI_SM|F2S_o
G1_F2S_o = DFFEAS(HC1_WideOr22, GC1__clk1, G1_CRESET_,  ,  ,  ,  ,  ,  );


--LC1L11 is datapath:u_datapath|datapath_scsi:u_datapath_scsi|SCSI_DATA_OUT[0]~1
LC1L11 = (SB1_PTR[1] & (((SB1_PTR[0])))) # (!SB1_PTR[1] & ((SB1_PTR[0] & (WB1_ram_block1a8)) # (!SB1_PTR[0] & ((WB1_ram_block1a24)))));


--LC1L12 is datapath:u_datapath|datapath_scsi:u_datapath_scsi|SCSI_DATA_OUT[0]~2
LC1L12 = (SB1_PTR[1] & ((LC1L11 & (WB1_ram_block1a0)) # (!LC1L11 & ((WB1_ram_block1a16))))) # (!SB1_PTR[1] & (((LC1L11))));


--LC1L13 is datapath:u_datapath|datapath_scsi:u_datapath_scsi|SCSI_DATA_OUT[0]~3
LC1L13 = (G1_CPU2S_o & (LC1L10 & (!G1_F2S_o))) # (!G1_CPU2S_o & (((G1_F2S_o & LC1L12))));


--LC1L14 is datapath:u_datapath|datapath_scsi:u_datapath_scsi|SCSI_DATA_OUT[1]~4
LC1L14 = (ADDR[3] & (A1L38 & (E1_DIEH))) # (!ADDR[3] & (((A1L14))));


--LC1L15 is datapath:u_datapath|datapath_scsi:u_datapath_scsi|SCSI_DATA_OUT[1]~5
LC1L15 = (SB1_PTR[1] & (((SB1_PTR[0])))) # (!SB1_PTR[1] & ((SB1_PTR[0] & (WB1_ram_block1a9)) # (!SB1_PTR[0] & ((WB1_ram_block1a25)))));


--LC1L16 is datapath:u_datapath|datapath_scsi:u_datapath_scsi|SCSI_DATA_OUT[1]~6
LC1L16 = (SB1_PTR[1] & ((LC1L15 & (WB1_ram_block1a1)) # (!LC1L15 & ((WB1_ram_block1a17))))) # (!SB1_PTR[1] & (((LC1L15))));


--LC1L17 is datapath:u_datapath|datapath_scsi:u_datapath_scsi|SCSI_DATA_OUT[1]~7
LC1L17 = (G1_CPU2S_o & (LC1L14 & (!G1_F2S_o))) # (!G1_CPU2S_o & (((G1_F2S_o & LC1L16))));


--LC1L18 is datapath:u_datapath|datapath_scsi:u_datapath_scsi|SCSI_DATA_OUT[2]~8
LC1L18 = (ADDR[3] & (A1L40 & (E1_DIEH))) # (!ADDR[3] & (((A1L16))));


--LC1L19 is datapath:u_datapath|datapath_scsi:u_datapath_scsi|SCSI_DATA_OUT[2]~9
LC1L19 = (SB1_PTR[1] & (((SB1_PTR[0])))) # (!SB1_PTR[1] & ((SB1_PTR[0] & (WB1_ram_block1a10)) # (!SB1_PTR[0] & ((WB1_ram_block1a26)))));


--LC1L20 is datapath:u_datapath|datapath_scsi:u_datapath_scsi|SCSI_DATA_OUT[2]~10
LC1L20 = (SB1_PTR[1] & ((LC1L19 & (WB1_ram_block1a2)) # (!LC1L19 & ((WB1_ram_block1a18))))) # (!SB1_PTR[1] & (((LC1L19))));


--LC1L21 is datapath:u_datapath|datapath_scsi:u_datapath_scsi|SCSI_DATA_OUT[2]~11
LC1L21 = (G1_CPU2S_o & (LC1L18 & (!G1_F2S_o))) # (!G1_CPU2S_o & (((G1_F2S_o & LC1L20))));


--LC1L22 is datapath:u_datapath|datapath_scsi:u_datapath_scsi|SCSI_DATA_OUT[3]~12
LC1L22 = (ADDR[3] & (A1L42 & (E1_DIEH))) # (!ADDR[3] & (((A1L18))));


--LC1L23 is datapath:u_datapath|datapath_scsi:u_datapath_scsi|SCSI_DATA_OUT[3]~13
LC1L23 = (SB1_PTR[1] & (((SB1_PTR[0])))) # (!SB1_PTR[1] & ((SB1_PTR[0] & (WB1_ram_block1a11)) # (!SB1_PTR[0] & ((WB1_ram_block1a27)))));


--LC1L24 is datapath:u_datapath|datapath_scsi:u_datapath_scsi|SCSI_DATA_OUT[3]~14
LC1L24 = (SB1_PTR[1] & ((LC1L23 & (WB1_ram_block1a3)) # (!LC1L23 & ((WB1_ram_block1a19))))) # (!SB1_PTR[1] & (((LC1L23))));


--LC1L25 is datapath:u_datapath|datapath_scsi:u_datapath_scsi|SCSI_DATA_OUT[3]~15
LC1L25 = (G1_CPU2S_o & (LC1L22 & (!G1_F2S_o))) # (!G1_CPU2S_o & (((G1_F2S_o & LC1L24))));


--LC1L26 is datapath:u_datapath|datapath_scsi:u_datapath_scsi|SCSI_DATA_OUT[4]~16
LC1L26 = (ADDR[3] & (A1L44 & (E1_DIEH))) # (!ADDR[3] & (((A1L20))));


--LC1L27 is datapath:u_datapath|datapath_scsi:u_datapath_scsi|SCSI_DATA_OUT[4]~17
LC1L27 = (SB1_PTR[1] & (((SB1_PTR[0])))) # (!SB1_PTR[1] & ((SB1_PTR[0] & (WB1_ram_block1a12)) # (!SB1_PTR[0] & ((WB1_ram_block1a28)))));


--LC1L28 is datapath:u_datapath|datapath_scsi:u_datapath_scsi|SCSI_DATA_OUT[4]~18
LC1L28 = (SB1_PTR[1] & ((LC1L27 & (WB1_ram_block1a4)) # (!LC1L27 & ((WB1_ram_block1a20))))) # (!SB1_PTR[1] & (((LC1L27))));


--LC1L29 is datapath:u_datapath|datapath_scsi:u_datapath_scsi|SCSI_DATA_OUT[4]~19
LC1L29 = (G1_CPU2S_o & (LC1L26 & (!G1_F2S_o))) # (!G1_CPU2S_o & (((G1_F2S_o & LC1L28))));


--LC1L30 is datapath:u_datapath|datapath_scsi:u_datapath_scsi|SCSI_DATA_OUT[5]~20
LC1L30 = (ADDR[3] & (A1L46 & (E1_DIEH))) # (!ADDR[3] & (((A1L22))));


--LC1L31 is datapath:u_datapath|datapath_scsi:u_datapath_scsi|SCSI_DATA_OUT[5]~21
LC1L31 = (SB1_PTR[1] & (((SB1_PTR[0])))) # (!SB1_PTR[1] & ((SB1_PTR[0] & (WB1_ram_block1a13)) # (!SB1_PTR[0] & ((WB1_ram_block1a29)))));


--LC1L32 is datapath:u_datapath|datapath_scsi:u_datapath_scsi|SCSI_DATA_OUT[5]~22
LC1L32 = (SB1_PTR[1] & ((LC1L31 & (WB1_ram_block1a5)) # (!LC1L31 & ((WB1_ram_block1a21))))) # (!SB1_PTR[1] & (((LC1L31))));


--LC1L33 is datapath:u_datapath|datapath_scsi:u_datapath_scsi|SCSI_DATA_OUT[5]~23
LC1L33 = (G1_CPU2S_o & (LC1L30 & (!G1_F2S_o))) # (!G1_CPU2S_o & (((G1_F2S_o & LC1L32))));


--LC1L34 is datapath:u_datapath|datapath_scsi:u_datapath_scsi|SCSI_DATA_OUT[6]~24
LC1L34 = (ADDR[3] & (A1L48 & (E1_DIEH))) # (!ADDR[3] & (((A1L24))));


--LC1L35 is datapath:u_datapath|datapath_scsi:u_datapath_scsi|SCSI_DATA_OUT[6]~25
LC1L35 = (SB1_PTR[1] & (((SB1_PTR[0])))) # (!SB1_PTR[1] & ((SB1_PTR[0] & (WB1_ram_block1a14)) # (!SB1_PTR[0] & ((WB1_ram_block1a30)))));


--LC1L36 is datapath:u_datapath|datapath_scsi:u_datapath_scsi|SCSI_DATA_OUT[6]~26
LC1L36 = (SB1_PTR[1] & ((LC1L35 & (WB1_ram_block1a6)) # (!LC1L35 & ((WB1_ram_block1a22))))) # (!SB1_PTR[1] & (((LC1L35))));


--LC1L37 is datapath:u_datapath|datapath_scsi:u_datapath_scsi|SCSI_DATA_OUT[6]~27
LC1L37 = (G1_CPU2S_o & (LC1L34 & (!G1_F2S_o))) # (!G1_CPU2S_o & (((G1_F2S_o & LC1L36))));


--LC1L38 is datapath:u_datapath|datapath_scsi:u_datapath_scsi|SCSI_DATA_OUT[7]~28
LC1L38 = (ADDR[3] & (A1L50 & (E1_DIEH))) # (!ADDR[3] & (((A1L26))));


--LC1L39 is datapath:u_datapath|datapath_scsi:u_datapath_scsi|SCSI_DATA_OUT[7]~29
LC1L39 = (SB1_PTR[1] & (((SB1_PTR[0])))) # (!SB1_PTR[1] & ((SB1_PTR[0] & (WB1_ram_block1a15)) # (!SB1_PTR[0] & ((WB1_ram_block1a31)))));


--LC1L40 is datapath:u_datapath|datapath_scsi:u_datapath_scsi|SCSI_DATA_OUT[7]~30
LC1L40 = (SB1_PTR[1] & ((LC1L39 & (WB1_ram_block1a7)) # (!LC1L39 & ((WB1_ram_block1a23))))) # (!SB1_PTR[1] & (((LC1L39))));


--LC1L41 is datapath:u_datapath|datapath_scsi:u_datapath_scsi|SCSI_DATA_OUT[7]~31
LC1L41 = (G1_CPU2S_o & (LC1L38 & (!G1_F2S_o))) # (!G1_CPU2S_o & (((G1_F2S_o & LC1L40))));


--J1L2 is registers:u_registers|A1~0
J1L2 = (PC1_h_0C & ((A1L111 & (J1_A1)) # (!A1L111 & ((A1L53))))) # (!PC1_h_0C & (J1_A1));


--ZB1L79 is CPU_SM:u_CPU_SM|CPU_SM_outputs:u_CPU_SM_outputs|nSTOPFLUSH_d~0
ZB1L79 = (E1_STATE[3] & (E1_STATE[2] & (ZB1L16 & !TB1_FIFOEMPTY)));


--YB1L2 is CPU_SM:u_CPU_SM|CPU_SM_inputs:u_CPU_SM_inputs|E[0]~20
YB1L2 = (E1_FLUSHFIFO & (!E1L24 & (!TB1_FIFOEMPTY & !TB1_FIFOFULL)));


--ZB1L80 is CPU_SM:u_CPU_SM|CPU_SM_outputs:u_CPU_SM_outputs|nSTOPFLUSH_d~1
ZB1L80 = (ZB1L79) # ((YB1L25) # ((YB1L1 & YB1L2)));


--HC1_INCBO is SCSI_SM:u_SCSI_SM|SCSI_SM_INTERNALS:u_SCSI_SM_INTERNALS|INCBO
HC1_INCBO = (HC1_state_reg.s1) # (HC1_state_reg.s12);


--QC1L12 is registers:u_registers|registers_cntr:u_registers_cntr|CNTR_O[8]~6
QC1L12 = (QC1_CNTR_O[8] & (((!PC1L6) # (!QC1L10)) # (!ADDR[5])));


--QC1L13 is registers:u_registers|registers_cntr:u_registers_cntr|CNTR_O[8]~7
QC1L13 = (QC1L12) # ((ADDR[4] & (QC1L11 & !ADDR[2])));


--TB1L35 is fifo:int_fifo|fifo__full_empty_ctr:u_full_empty_ctr|UP~0
TB1L35 = (E1_INCFIFO & ((TB1_UP[6]) # (TB1_DOWN[0])));


--TB1L36 is fifo:int_fifo|fifo__full_empty_ctr:u_full_empty_ctr|UP~1
TB1L36 = (E1_INCFIFO) # ((E1_DECFIFO & ((!TB1L21) # (!TB1L20))));


--TB1L37 is fifo:int_fifo|fifo__full_empty_ctr:u_full_empty_ctr|UP~2
TB1L37 = (E1_INCFIFO & ((TB1_UP[5]) # (TB1_DOWN[1])));


--TB1L38 is fifo:int_fifo|fifo__full_empty_ctr:u_full_empty_ctr|UP~3
TB1L38 = (E1_INCFIFO & ((TB1_UP[4]) # (TB1_DOWN[2])));


--TB1L39 is fifo:int_fifo|fifo__full_empty_ctr:u_full_empty_ctr|UP~4
TB1L39 = (E1_INCFIFO & ((TB1_UP[3]) # (TB1_DOWN[3])));


--TB1L40 is fifo:int_fifo|fifo__full_empty_ctr:u_full_empty_ctr|UP~5
TB1L40 = (E1_INCFIFO & ((TB1_UP[2]) # (TB1_DOWN[4])));


--TB1L41 is fifo:int_fifo|fifo__full_empty_ctr:u_full_empty_ctr|UP~6
TB1L41 = (E1_INCFIFO & ((TB1_UP[1]) # (TB1_DOWN[5])));


--TB1L42 is fifo:int_fifo|fifo__full_empty_ctr:u_full_empty_ctr|UP~7
TB1L42 = (E1_INCFIFO & ((TB1_UP[0]) # (TB1_DOWN[6])));


--TB1L15 is fifo:int_fifo|fifo__full_empty_ctr:u_full_empty_ctr|DOWN[6]~0
TB1L15 = (E1_DECFIFO & (((TB1_UP[1]) # (TB1_DOWN[5])))) # (!E1_DECFIFO & (TB1_DOWN[6]));


--TB1L13 is fifo:int_fifo|fifo__full_empty_ctr:u_full_empty_ctr|DOWN[5]~1
TB1L13 = (E1_DECFIFO & (((TB1_UP[2]) # (TB1_DOWN[4])))) # (!E1_DECFIFO & (TB1_DOWN[5]));


--TB1L11 is fifo:int_fifo|fifo__full_empty_ctr:u_full_empty_ctr|DOWN[4]~2
TB1L11 = (E1_DECFIFO & (((TB1_UP[3]) # (TB1_DOWN[3])))) # (!E1_DECFIFO & (TB1_DOWN[4]));


--TB1L9 is fifo:int_fifo|fifo__full_empty_ctr:u_full_empty_ctr|DOWN[3]~3
TB1L9 = (E1_DECFIFO & (((TB1_UP[4]) # (TB1_DOWN[2])))) # (!E1_DECFIFO & (TB1_DOWN[3]));


--TB1L7 is fifo:int_fifo|fifo__full_empty_ctr:u_full_empty_ctr|DOWN[2]~4
TB1L7 = (E1_DECFIFO & (((TB1_UP[5]) # (TB1_DOWN[1])))) # (!E1_DECFIFO & (TB1_DOWN[2]));


--TB1L5 is fifo:int_fifo|fifo__full_empty_ctr:u_full_empty_ctr|DOWN[1]~5
TB1L5 = (E1_DECFIFO & (((TB1_UP[6]) # (TB1_DOWN[0])))) # (!E1_DECFIFO & (TB1_DOWN[1]));


--TB1L3 is fifo:int_fifo|fifo__full_empty_ctr:u_full_empty_ctr|DOWN[0]~6
TB1L3 = (E1_DECFIFO & (TB1_UP[7])) # (!E1_DECFIFO & ((TB1_DOWN[0])));


--HC1L15 is SCSI_SM:u_SCSI_SM|SCSI_SM_INTERNALS:u_SCSI_SM_INTERNALS|Selector23~0
HC1L15 = (SB1_PTR[0] & (SB1_PTR[1] & HC1_state_reg.s1));


--ZB1L35 is CPU_SM:u_CPU_SM|CPU_SM_outputs:u_CPU_SM_outputs|FF~0
ZB1L35 = (ZB1L15 & ((E1_STATE[1]) # ((!DSACK_I_[0]) # (!_BERR))));


--ZB1L36 is CPU_SM:u_CPU_SM|CPU_SM_outputs:u_CPU_SM_outputs|FF~1
ZB1L36 = (EC1L1 & ((ZB1L35) # ((!_STERM & !EC1L14)))) # (!EC1L1 & (((!_STERM & !EC1L14))));


--ZB1L39 is CPU_SM:u_CPU_SM|CPU_SM_outputs:u_CPU_SM_outputs|INCFIFO_d~2
ZB1L39 = (ZB1L37) # (((G1_RIFIFO_o & !ZB1L36)) # (!ZB1L38));


--ZB1L7 is CPU_SM:u_CPU_SM|CPU_SM_outputs:u_CPU_SM_outputs|DECFIFO_d~0
ZB1L7 = (ZB1L36) # ((G1_RDFIFO_o & (ZB1L38 & !ZB1L37)));


--HC1L24 is SCSI_SM:u_SCSI_SM|SCSI_SM_INTERNALS:u_SCSI_SM_INTERNALS|Selector29~0
HC1L24 = (SB1_PTR[0] & (SB1_PTR[1] & HC1_state_reg.s12));


--HC1_state_reg.s22 is SCSI_SM:u_SCSI_SM|SCSI_SM_INTERNALS:u_SCSI_SM_INTERNALS|state_reg.s22
HC1_state_reg.s22 = DFFEAS(HC1_state_reg.s6, GC1__clk1, G1_CRESET_,  ,  ,  ,  ,  ,  );


--HC1L11 is SCSI_SM:u_SCSI_SM|SCSI_SM_INTERNALS:u_SCSI_SM_INTERNALS|Selector11~0
HC1L11 = (HC1_state_reg.s22) # ((HC1_state_reg.s14 & G1_CDSACK_));


--HC1_state_reg.s9 is SCSI_SM:u_SCSI_SM|SCSI_SM_INTERNALS:u_SCSI_SM_INTERNALS|state_reg.s9
HC1_state_reg.s9 = DFFEAS(HC1_state_reg.s19, GC1__clk1, G1_CRESET_,  ,  ,  ,  ,  ,  );


--HC1L14 is SCSI_SM:u_SCSI_SM|SCSI_SM_INTERNALS:u_SCSI_SM_INTERNALS|Selector19~0
HC1L14 = (HC1_state_reg.s9) # ((HC1_state_reg.s25 & G1_CDSACK_));


--E1_PAS is CPU_SM:u_CPU_SM|PAS
E1_PAS = DFFEAS(ZB1L46, GC1__clk1, E1_CCRESET_,  ,  ,  ,  ,  ,  );


--E1_PDS is CPU_SM:u_CPU_SM|PDS
E1_PDS = DFFEAS(ZB1L47, GC1__clk1, E1_CCRESET_,  ,  ,  ,  ,  ,  );


--ZB1L25 is CPU_SM:u_CPU_SM|CPU_SM_outputs:u_CPU_SM_outputs|F2CPUH_d~0
ZB1L25 = (E1_nDSACK & (_STERM)) # (!E1_nDSACK & (((!_BERR) # (!DSACK_I_[1]))));


--ZB1L30 is CPU_SM:u_CPU_SM|CPU_SM_outputs:u_CPU_SM_outputs|F2CPUL_d~0
ZB1L30 = (ZB1L18) # ((ZB1L17) # ((ZB1L40 & ZB1L25)));


--ZB1L31 is CPU_SM:u_CPU_SM|CPU_SM_outputs:u_CPU_SM_outputs|F2CPUL_d~1
ZB1L31 = (ZB1L15) # ((ZB1L65 & !E1_STATE[3]));


--ZB1L32 is CPU_SM:u_CPU_SM|CPU_SM_outputs:u_CPU_SM_outputs|F2CPUL_d~2
ZB1L32 = (ZB1L30) # ((ZB1L31 & !_STERM));


--ZB1L33 is CPU_SM:u_CPU_SM|CPU_SM_outputs:u_CPU_SM_outputs|F2CPUL_d~3
ZB1L33 = (!YB1L7 & ((!ZB1L14) # (!_STERM)));


--ZB1L34 is CPU_SM:u_CPU_SM|CPU_SM_outputs:u_CPU_SM_outputs|F2CPUL_d~4
ZB1L34 = (ZB1L32) # (((!ZB1L33) # (!DC1L11)) # (!ZB1L62));


--HC1L21 is SCSI_SM:u_SCSI_SM|SCSI_SM_INTERNALS:u_SCSI_SM_INTERNALS|Selector26~0
HC1L21 = (HC1L20) # ((HC1_state_reg.s25) # ((HC1_state_reg.s9) # (!HC1L18)));


--RC1L2 is registers:u_registers|registers_istr:u_registers_istr|FE~0
RC1L2 = (A1L111 & (PC1L9 & (TB1_FIFOEMPTY & PC1L6)));


--RC1L3 is registers:u_registers|registers_istr:u_registers_istr|FE~1
RC1L3 = (PC1L9 & (ADDR[4] & ((A1L111) # (!ADDR[2]))));


--RC1L5 is registers:u_registers|registers_istr:u_registers_istr|FF~0
RC1L5 = (A1L111 & (PC1L9 & (TB1_FIFOFULL & PC1L6)));


--RC1L10 is registers:u_registers|registers_istr:u_registers_istr|INT_P~0
RC1L10 = (RC1_INT & (A1L111 & (PC1L9 & PC1L6)));


--RC1L8 is registers:u_registers|registers_istr:u_registers_istr|INT_F~0
RC1L8 = (INTA & (A1L111 & (PC1L9 & PC1L6)));


--E1_BRIDGEOUT is CPU_SM:u_CPU_SM|BRIDGEOUT
E1_BRIDGEOUT = DFFEAS(ZB1L6, GC1__clk1, E1_CCRESET_,  ,  ,  ,  ,  ,  );


--KC1L76 is datapath:u_datapath|datapath_output:u_datapath_output|UD_LATCH~0
KC1L76 = (E1_BRIDGEOUT & (WB1_ram_block1a0)) # (!E1_BRIDGEOUT & ((WB1_ram_block1a16)));


--ZB1L24 is CPU_SM:u_CPU_SM|CPU_SM_outputs:u_CPU_SM_outputs|F2CPUH_X~0
ZB1L24 = (E1_STATE[0] & (!E1_STATE[3] & (E1_STATE[1] $ (!E1_STATE[2]))));


--ZB1L26 is CPU_SM:u_CPU_SM|CPU_SM_outputs:u_CPU_SM_outputs|F2CPUH_d~1
ZB1L26 = (ZB1L24 & !E1_STATE[4]);


--ZB1L27 is CPU_SM:u_CPU_SM|CPU_SM_outputs:u_CPU_SM_outputs|F2CPUH_d~2
ZB1L27 = (ZB1L15 & (((ZB1L65 & !E1_STATE[3])) # (!E1_STATE[1]))) # (!ZB1L15 & (ZB1L65 & ((!E1_STATE[3]))));


--ZB1L28 is CPU_SM:u_CPU_SM|CPU_SM_outputs:u_CPU_SM_outputs|F2CPUH_d~3
ZB1L28 = (ZB1L25 & ((ZB1L26) # ((ZB1L27 & !_STERM)))) # (!ZB1L25 & (((ZB1L27 & !_STERM))));


--ZB1L29 is CPU_SM:u_CPU_SM|CPU_SM_outputs:u_CPU_SM_outputs|F2CPUH_d~4
ZB1L29 = (ZB1L28) # (((!ZB1L33) # (!DC1L11)) # (!ZB1L62));


--KC1L77 is datapath:u_datapath|datapath_output:u_datapath_output|UD_LATCH~1
KC1L77 = (E1_BRIDGEOUT & (WB1_ram_block1a1)) # (!E1_BRIDGEOUT & ((WB1_ram_block1a17)));


--KC1L78 is datapath:u_datapath|datapath_output:u_datapath_output|UD_LATCH~2
KC1L78 = (E1_BRIDGEOUT & (WB1_ram_block1a2)) # (!E1_BRIDGEOUT & ((WB1_ram_block1a18)));


--KC1L79 is datapath:u_datapath|datapath_output:u_datapath_output|UD_LATCH~3
KC1L79 = (E1_BRIDGEOUT & (WB1_ram_block1a3)) # (!E1_BRIDGEOUT & ((WB1_ram_block1a19)));


--KC1L80 is datapath:u_datapath|datapath_output:u_datapath_output|UD_LATCH~4
KC1L80 = (E1_BRIDGEOUT & (WB1_ram_block1a4)) # (!E1_BRIDGEOUT & ((WB1_ram_block1a20)));


--KC1L81 is datapath:u_datapath|datapath_output:u_datapath_output|UD_LATCH~5
KC1L81 = (E1_BRIDGEOUT & (WB1_ram_block1a5)) # (!E1_BRIDGEOUT & ((WB1_ram_block1a21)));


--KC1L82 is datapath:u_datapath|datapath_output:u_datapath_output|UD_LATCH~6
KC1L82 = (E1_BRIDGEOUT & (WB1_ram_block1a6)) # (!E1_BRIDGEOUT & ((WB1_ram_block1a22)));


--KC1L83 is datapath:u_datapath|datapath_output:u_datapath_output|UD_LATCH~7
KC1L83 = (E1_BRIDGEOUT & (WB1_ram_block1a7)) # (!E1_BRIDGEOUT & ((WB1_ram_block1a23)));


--KC1L84 is datapath:u_datapath|datapath_output:u_datapath_output|UD_LATCH~8
KC1L84 = (E1_BRIDGEOUT & (WB1_ram_block1a8)) # (!E1_BRIDGEOUT & ((WB1_ram_block1a24)));


--KC1L85 is datapath:u_datapath|datapath_output:u_datapath_output|UD_LATCH~9
KC1L85 = (E1_BRIDGEOUT & (WB1_ram_block1a9)) # (!E1_BRIDGEOUT & ((WB1_ram_block1a25)));


--KC1L86 is datapath:u_datapath|datapath_output:u_datapath_output|UD_LATCH~10
KC1L86 = (E1_BRIDGEOUT & (WB1_ram_block1a10)) # (!E1_BRIDGEOUT & ((WB1_ram_block1a26)));


--KC1L87 is datapath:u_datapath|datapath_output:u_datapath_output|UD_LATCH~11
KC1L87 = (E1_BRIDGEOUT & (WB1_ram_block1a11)) # (!E1_BRIDGEOUT & ((WB1_ram_block1a27)));


--KC1L88 is datapath:u_datapath|datapath_output:u_datapath_output|UD_LATCH~12
KC1L88 = (E1_BRIDGEOUT & (WB1_ram_block1a12)) # (!E1_BRIDGEOUT & ((WB1_ram_block1a28)));


--KC1L89 is datapath:u_datapath|datapath_output:u_datapath_output|UD_LATCH~13
KC1L89 = (E1_BRIDGEOUT & (WB1_ram_block1a13)) # (!E1_BRIDGEOUT & ((WB1_ram_block1a29)));


--KC1L90 is datapath:u_datapath|datapath_output:u_datapath_output|UD_LATCH~14
KC1L90 = (E1_BRIDGEOUT & (WB1_ram_block1a14)) # (!E1_BRIDGEOUT & ((WB1_ram_block1a30)));


--KC1L91 is datapath:u_datapath|datapath_output:u_datapath_output|UD_LATCH~15
KC1L91 = (E1_BRIDGEOUT & (WB1_ram_block1a15)) # (!E1_BRIDGEOUT & ((WB1_ram_block1a31)));


--BC1L11 is CPU_SM:u_CPU_SM|cpudff2:u_cpudff2|cpudff2_d~10
BC1L11 = (A1L72 & ((YB1L8) # ((ZB1L59 & !E1_nDSACK))));


--ZB1L52 is CPU_SM:u_CPU_SM|CPU_SM_outputs:u_CPU_SM_outputs|PLLW_Y~2
ZB1L52 = (!E1_DSACK_LATCHED_[0] & (!E1_DSACK_LATCHED_[1] & ((YB1L13) # (YB1L8))));


--ZB1L9 is CPU_SM:u_CPU_SM|CPU_SM_outputs:u_CPU_SM_outputs|DIEH_Z~0
ZB1L9 = (ZB1L51) # ((ZB1L52) # ((ZB1L13 & YB1L10)));


--ZB1L10 is CPU_SM:u_CPU_SM|CPU_SM_outputs:u_CPU_SM_outputs|DIEH_d~0
ZB1L10 = (_STERM & (((!ZB1L9)))) # (!_STERM & (ZB1L50 & (!YB1L9)));


--ZB1L54 is CPU_SM:u_CPU_SM|CPU_SM_outputs:u_CPU_SM_outputs|PLLW_d~1
ZB1L54 = (ZB1L48 & (!YB1L20 & (!YB1L18 & !YB1L16)));


--ZB1L11 is CPU_SM:u_CPU_SM|CPU_SM_outputs:u_CPU_SM_outputs|DIEH_d~1
ZB1L11 = (YB1L11) # ((BC1L11) # ((!ZB1L54) # (!ZB1L10)));


--HC1L23 is SCSI_SM:u_SCSI_SM|SCSI_SM_INTERNALS:u_SCSI_SM_INTERNALS|Selector28~0
HC1L23 = (HC1_state_reg.s6) # ((HC1_state_reg.s17) # ((HC1_state_reg.s26) # (HC1L13)));


--HC1_WideOr22 is SCSI_SM:u_SCSI_SM|SCSI_SM_INTERNALS:u_SCSI_SM_INTERNALS|WideOr22
HC1_WideOr22 = (HC1_state_reg.s2) # ((HC1_state_reg.s18) # ((HC1_state_reg.s28) # (HC1_state_reg.s1)));


--LHW is LHW
LHW = DFFEAS(E1_PLHW, !SCLK,  ,  ,  ,  ,  ,  ,  );


--LLW is LLW
LLW = DFFEAS(E1_PLLW, !SCLK,  ,  ,  ,  ,  ,  ,  );


--D1L1 is fifo:int_fifo|BUFFER~0
D1L1 = (LHW) # ((LLW) # ((G1_DACK_o & G1_RE_o)));


--UB1_COUNT[0] is fifo:int_fifo|fifo_3bit_cntr:u_next_in_cntr|COUNT[0]
UB1_COUNT[0] = DFFEAS(UB1L3, GC1__clk2, QC1_CNTR_O[8],  ,  ,  ,  ,  ,  );


--UB1_COUNT[1] is fifo:int_fifo|fifo_3bit_cntr:u_next_in_cntr|COUNT[1]
UB1_COUNT[1] = DFFEAS(UB1L5, GC1__clk2, QC1_CNTR_O[8],  ,  ,  ,  ,  ,  );


--UB1_COUNT[2] is fifo:int_fifo|fifo_3bit_cntr:u_next_in_cntr|COUNT[2]
UB1_COUNT[2] = DFFEAS(UB1L7, GC1__clk2, QC1_CNTR_O[8],  ,  ,  ,  ,  ,  );


--VB1L2 is fifo:int_fifo|fifo_write_strobes:u_write_strobes|LLWS~0
VB1L2 = (G1_DACK_o & G1_RE_o);


--VB1_UUWS is fifo:int_fifo|fifo_write_strobes:u_write_strobes|UUWS
VB1_UUWS = (LHW) # ((VB1L2 & (!SB1_PTR[0] & !SB1_PTR[1])));


--UB2_COUNT[0] is fifo:int_fifo|fifo_3bit_cntr:u_next_out_cntr|COUNT[0]
UB2_COUNT[0] = DFFEAS(UB2L3, GC1__clk2, QC1_CNTR_O[8],  ,  ,  ,  ,  ,  );


--UB2_COUNT[1] is fifo:int_fifo|fifo_3bit_cntr:u_next_out_cntr|COUNT[1]
UB2_COUNT[1] = DFFEAS(UB2L5, GC1__clk2, QC1_CNTR_O[8],  ,  ,  ,  ,  ,  );


--UB2_COUNT[2] is fifo:int_fifo|fifo_3bit_cntr:u_next_out_cntr|COUNT[2]
UB2_COUNT[2] = DFFEAS(UB2L7, GC1__clk2, QC1_CNTR_O[8],  ,  ,  ,  ,  ,  );


--VB1_LMWS is fifo:int_fifo|fifo_write_strobes:u_write_strobes|LMWS
VB1_LMWS = (LLW) # ((SB1_PTR[1] & (VB1L2 & !SB1_PTR[0])));


--VB1_UMWS is fifo:int_fifo|fifo_write_strobes:u_write_strobes|UMWS
VB1_UMWS = (LHW) # ((SB1_PTR[0] & (VB1L2 & !SB1_PTR[1])));


--JC1_UD_LATCH[0] is datapath:u_datapath|datapath_input:u_datapath_input|UD_LATCH[0]
JC1_UD_LATCH[0] = DFFEAS(A1L36, !GC1__clk1,  ,  , !DS_O_,  ,  ,  ,  );


--E1_BRIDGEIN is CPU_SM:u_CPU_SM|BRIDGEIN
E1_BRIDGEIN = DFFEAS(ZB1_nBRIDGEIN_d, GC1__clk1, E1_CCRESET_,  ,  ,  ,  ,  ,  );


--E1_DIEL is CPU_SM:u_CPU_SM|DIEL
E1_DIEL = DFFEAS(ZB1L12, GC1__clk1, E1_CCRESET_,  ,  ,  ,  ,  ,  );


--H1_bDIEL is datapath:u_datapath|bDIEL
H1_bDIEL = (G1_CPU2S_o) # (E1_DIEL);


--JC1L1 is datapath:u_datapath|datapath_input:u_datapath_input|CPU_OD[0]~0
JC1L1 = (H1_bDIEL & (A1L12)) # (!H1_bDIEL & (((JC1_UD_LATCH[0] & E1_BRIDGEIN))));


--G1_S2F_o is SCSI_SM:u_SCSI_SM|S2F_o
G1_S2F_o = DFFEAS(HC1L22, GC1__clk1, G1_CRESET_,  ,  ,  ,  ,  ,  );


--H1L1 is datapath:u_datapath|FIFO_ID[0]~0
H1L1 = (G1_S2F_o & (A1L87)) # (!G1_S2F_o & ((JC1L1)));


--VB1_LLWS is fifo:int_fifo|fifo_write_strobes:u_write_strobes|LLWS
VB1_LLWS = (LLW) # ((G1_DACK_o & (G1_RE_o & NC1L1)));


--JC1_UD_LATCH[1] is datapath:u_datapath|datapath_input:u_datapath_input|UD_LATCH[1]
JC1_UD_LATCH[1] = DFFEAS(A1L38, !GC1__clk1,  ,  , !DS_O_,  ,  ,  ,  );


--JC1L2 is datapath:u_datapath|datapath_input:u_datapath_input|CPU_OD[1]~1
JC1L2 = (H1_bDIEL & (A1L14)) # (!H1_bDIEL & (((E1_BRIDGEIN & JC1_UD_LATCH[1]))));


--H1L2 is datapath:u_datapath|FIFO_ID[1]~1
H1L2 = (G1_S2F_o & (A1L89)) # (!G1_S2F_o & ((JC1L2)));


--JC1_UD_LATCH[2] is datapath:u_datapath|datapath_input:u_datapath_input|UD_LATCH[2]
JC1_UD_LATCH[2] = DFFEAS(A1L40, !GC1__clk1,  ,  , !DS_O_,  ,  ,  ,  );


--JC1L3 is datapath:u_datapath|datapath_input:u_datapath_input|CPU_OD[2]~2
JC1L3 = (H1_bDIEL & (A1L16)) # (!H1_bDIEL & (((E1_BRIDGEIN & JC1_UD_LATCH[2]))));


--H1L3 is datapath:u_datapath|FIFO_ID[2]~2
H1L3 = (G1_S2F_o & (A1L91)) # (!G1_S2F_o & ((JC1L3)));


--JC1_UD_LATCH[3] is datapath:u_datapath|datapath_input:u_datapath_input|UD_LATCH[3]
JC1_UD_LATCH[3] = DFFEAS(A1L42, !GC1__clk1,  ,  , !DS_O_,  ,  ,  ,  );


--JC1L4 is datapath:u_datapath|datapath_input:u_datapath_input|CPU_OD[3]~3
JC1L4 = (H1_bDIEL & (A1L18)) # (!H1_bDIEL & (((E1_BRIDGEIN & JC1_UD_LATCH[3]))));


--H1L4 is datapath:u_datapath|FIFO_ID[3]~3
H1L4 = (G1_S2F_o & (A1L93)) # (!G1_S2F_o & ((JC1L4)));


--JC1_UD_LATCH[4] is datapath:u_datapath|datapath_input:u_datapath_input|UD_LATCH[4]
JC1_UD_LATCH[4] = DFFEAS(A1L44, !GC1__clk1,  ,  , !DS_O_,  ,  ,  ,  );


--JC1L5 is datapath:u_datapath|datapath_input:u_datapath_input|CPU_OD[4]~4
JC1L5 = (H1_bDIEL & (A1L20)) # (!H1_bDIEL & (((E1_BRIDGEIN & JC1_UD_LATCH[4]))));


--H1L5 is datapath:u_datapath|FIFO_ID[4]~4
H1L5 = (G1_S2F_o & (A1L95)) # (!G1_S2F_o & ((JC1L5)));


--JC1_UD_LATCH[5] is datapath:u_datapath|datapath_input:u_datapath_input|UD_LATCH[5]
JC1_UD_LATCH[5] = DFFEAS(A1L46, !GC1__clk1,  ,  , !DS_O_,  ,  ,  ,  );


--JC1L6 is datapath:u_datapath|datapath_input:u_datapath_input|CPU_OD[5]~5
JC1L6 = (H1_bDIEL & (A1L22)) # (!H1_bDIEL & (((E1_BRIDGEIN & JC1_UD_LATCH[5]))));


--H1L6 is datapath:u_datapath|FIFO_ID[5]~5
H1L6 = (G1_S2F_o & (A1L97)) # (!G1_S2F_o & ((JC1L6)));


--JC1_UD_LATCH[6] is datapath:u_datapath|datapath_input:u_datapath_input|UD_LATCH[6]
JC1_UD_LATCH[6] = DFFEAS(A1L48, !GC1__clk1,  ,  , !DS_O_,  ,  ,  ,  );


--JC1L7 is datapath:u_datapath|datapath_input:u_datapath_input|CPU_OD[6]~6
JC1L7 = (H1_bDIEL & (A1L24)) # (!H1_bDIEL & (((E1_BRIDGEIN & JC1_UD_LATCH[6]))));


--H1L7 is datapath:u_datapath|FIFO_ID[6]~6
H1L7 = (G1_S2F_o & (A1L99)) # (!G1_S2F_o & ((JC1L7)));


--JC1_UD_LATCH[7] is datapath:u_datapath|datapath_input:u_datapath_input|UD_LATCH[7]
JC1_UD_LATCH[7] = DFFEAS(A1L50, !GC1__clk1,  ,  , !DS_O_,  ,  ,  ,  );


--JC1L8 is datapath:u_datapath|datapath_input:u_datapath_input|CPU_OD[7]~7
JC1L8 = (H1_bDIEL & (A1L26)) # (!H1_bDIEL & (((E1_BRIDGEIN & JC1_UD_LATCH[7]))));


--H1L8 is datapath:u_datapath|FIFO_ID[7]~7
H1L8 = (G1_S2F_o & (A1L101)) # (!G1_S2F_o & ((JC1L8)));


--ZB1L63 is CPU_SM:u_CPU_SM|CPU_SM_outputs:u_CPU_SM_outputs|SIZE1_X~7
ZB1L63 = (E1_STATE[0] & (E1_STATE[2] & (E1_nDSACK & YB1L12)));


--ZB1L42 is CPU_SM:u_CPU_SM|CPU_SM_outputs:u_CPU_SM_outputs|PAS_Y~2
ZB1L42 = (CC1L11 & (!E1_STATE[4] & (!E1_DSACK_LATCHED_[0] & !E1_DSACK_LATCHED_[1])));


--ZB1L43 is CPU_SM:u_CPU_SM|CPU_SM_outputs:u_CPU_SM_outputs|PAS_Y~3
ZB1L43 = (ZB1L51) # ((E1_nDSACK & ((YB1L13) # (YB1L8))));


--ZB1L44 is CPU_SM:u_CPU_SM|CPU_SM_outputs:u_CPU_SM_outputs|PAS_Y~4
ZB1L44 = (_STERM & ((ZB1L42) # ((ZB1L43) # (!AC1L8))));


--ZB1L45 is CPU_SM:u_CPU_SM|CPU_SM_outputs:u_CPU_SM_outputs|PAS_d~0
ZB1L45 = (ZB1L18) # ((!DC1L11) # (!ZB1L62));


--ZB1L46 is CPU_SM:u_CPU_SM|CPU_SM_outputs:u_CPU_SM_outputs|PAS_d~1
ZB1L46 = (ZB1L63) # ((ZB1L44) # ((ZB1L45) # (!ZB1L54)));


--ZB1L47 is CPU_SM:u_CPU_SM|CPU_SM_outputs:u_CPU_SM_outputs|PAS_d~2
ZB1L47 = ((ZB1L44) # ((E1_nDSACK & YB1L11))) # (!ZB1L54);


--ZB1L4 is CPU_SM:u_CPU_SM|CPU_SM_outputs:u_CPU_SM_outputs|BRIDGEOUT_Y~0
ZB1L4 = (E1_STATE[0] & (!E1_STATE[2] & (E1_STATE[1] $ (E1_STATE[4]))));


--ZB1L5 is CPU_SM:u_CPU_SM|CPU_SM_outputs:u_CPU_SM_outputs|BRIDGEOUT_d~0
ZB1L5 = (_STERM & (ZB1L17)) # (!_STERM & (((ZB1L4 & !E1_STATE[3]))));


--ZB1L23 is CPU_SM:u_CPU_SM|CPU_SM_outputs:u_CPU_SM_outputs|Equal2~10
ZB1L23 = (E1_STATE[1] & ZB1L15);


--ZB1L6 is CPU_SM:u_CPU_SM|CPU_SM_outputs:u_CPU_SM_outputs|BRIDGEOUT_d~1
ZB1L6 = (ZB1L18) # ((ZB1L5) # ((ZB1L23 & ZB1L25)));


--E1_PLHW is CPU_SM:u_CPU_SM|PLHW
E1_PLHW = DFFEAS(ZB1L49, GC1__clk1, E1_CCRESET_,  ,  ,  ,  ,  ,  );


--E1_PLLW is CPU_SM:u_CPU_SM|PLLW
E1_PLLW = DFFEAS(ZB1L57, GC1__clk1, E1_CCRESET_,  ,  ,  ,  ,  ,  );


--E1_INCNI is CPU_SM:u_CPU_SM|INCNI
E1_INCNI = DFFEAS(ZB1L21, GC1__clk1, E1_CCRESET_,  ,  ,  ,  ,  ,  );


--G1_INCNI_o is SCSI_SM:u_SCSI_SM|INCNI_o
G1_INCNI_o = DFFEAS(HC1L25, GC1__clk1, G1_CRESET_,  ,  ,  ,  ,  ,  );


--UB1L3 is fifo:int_fifo|fifo_3bit_cntr:u_next_in_cntr|COUNT[0]~0
UB1L3 = UB1_COUNT[0] $ (((E1_INCNI) # (G1_INCNI_o)));


--UB1L5 is fifo:int_fifo|fifo_3bit_cntr:u_next_in_cntr|COUNT[1]~1
UB1L5 = UB1_COUNT[1] $ (((UB1_COUNT[0] & ((E1_INCNI) # (G1_INCNI_o)))));


--INCNI is INCNI
INCNI = (E1_INCNI) # (G1_INCNI_o);


--UB1L7 is fifo:int_fifo|fifo_3bit_cntr:u_next_in_cntr|COUNT[2]~2
UB1L7 = UB1_COUNT[2] $ (((UB1_COUNT[0] & (UB1_COUNT[1] & INCNI))));


--E1_INCNO is CPU_SM:u_CPU_SM|INCNO
E1_INCNO = DFFEAS(ZB1L36, GC1__clk1, E1_CCRESET_,  ,  ,  ,  ,  ,  );


--G1_INCNO_o is SCSI_SM:u_SCSI_SM|INCNO_o
G1_INCNO_o = DFFEAS(HC1L16, GC1__clk1, G1_CRESET_,  ,  ,  ,  ,  ,  );


--UB2L3 is fifo:int_fifo|fifo_3bit_cntr:u_next_out_cntr|COUNT[0]~0
UB2L3 = UB2_COUNT[0] $ (((E1_INCNO) # (G1_INCNO_o)));


--UB2L5 is fifo:int_fifo|fifo_3bit_cntr:u_next_out_cntr|COUNT[1]~1
UB2L5 = UB2_COUNT[1] $ (((UB2_COUNT[0] & ((E1_INCNO) # (G1_INCNO_o)))));


--INCNO is INCNO
INCNO = (E1_INCNO) # (G1_INCNO_o);


--UB2L7 is fifo:int_fifo|fifo_3bit_cntr:u_next_out_cntr|COUNT[2]~2
UB2L7 = UB2_COUNT[2] $ (((UB2_COUNT[0] & (UB2_COUNT[1] & INCNO))));


--ZB1L78 is CPU_SM:u_CPU_SM|CPU_SM_outputs:u_CPU_SM_outputs|nBRIDGEIN_d~0
ZB1L78 = (YB1L6) # ((E1_STATE[2] & ((YB1L16) # (YB1L21))));


--ZB1_nBRIDGEIN_d is CPU_SM:u_CPU_SM|CPU_SM_outputs:u_CPU_SM_outputs|nBRIDGEIN_d
ZB1_nBRIDGEIN_d = (YB1L18) # ((YB1L11) # ((YB1L16) # (ZB1L78)));


--ZB1L12 is CPU_SM:u_CPU_SM|CPU_SM_outputs:u_CPU_SM_outputs|DIEL_d~0
ZB1L12 = (YB1L20) # ((ZB1L37) # ((!ZB1L10) # (!ZB1L48)));


--HC1L22 is SCSI_SM:u_SCSI_SM|SCSI_SM_INTERNALS:u_SCSI_SM_INTERNALS|Selector27~0
HC1L22 = (HC1_state_reg.s12) # (!HC1L4);


--ZB1L49 is CPU_SM:u_CPU_SM|CPU_SM_outputs:u_CPU_SM_outputs|PLHW_d~1
ZB1L49 = ((_STERM & ((ZB1L51) # (ZB1L41)))) # (!ZB1L48);


--ZB1L55 is CPU_SM:u_CPU_SM|CPU_SM_outputs:u_CPU_SM_outputs|PLLW_d~2
ZB1L55 = (_STERM & ((ZB1L51) # ((ZB1L13 & YB1L10))));


--ZB1L56 is CPU_SM:u_CPU_SM|CPU_SM_outputs:u_CPU_SM_outputs|PLLW_d~3
ZB1L56 = (ZB1L55) # (((_STERM & ZB1L52)) # (!ZB1L53));


--ZB1L57 is CPU_SM:u_CPU_SM|CPU_SM_outputs:u_CPU_SM_outputs|PLLW_d~4
ZB1L57 = (ZB1L56) # (((_STERM & EC1L2)) # (!ZB1L54));


--HC1L25 is SCSI_SM:u_SCSI_SM|SCSI_SM_INTERNALS:u_SCSI_SM_INTERNALS|Selector29~1
HC1L25 = (NC1L1 & ((HC1_state_reg.s12) # ((TB1_FIFOFULL & HC1_state_reg.s24)))) # (!NC1L1 & (TB1_FIFOFULL & (HC1_state_reg.s24)));


--HC1L16 is SCSI_SM:u_SCSI_SM|SCSI_SM_INTERNALS:u_SCSI_SM_INTERNALS|Selector23~1
HC1L16 = (NC1L1 & ((HC1_state_reg.s1) # ((TB1_FIFOFULL & HC1_state_reg.s24)))) # (!NC1L1 & (TB1_FIFOFULL & (HC1_state_reg.s24)));


--ZB1L64 is CPU_SM:u_CPU_SM|CPU_SM_outputs:u_CPU_SM_outputs|SIZE1_X~8
ZB1L64 = ((TB1_FIFOEMPTY) # ((SB1_PTR[0] & SB1_PTR[1]))) # (!YB1L22);


--ZB1L76 is CPU_SM:u_CPU_SM|CPU_SM_outputs:u_CPU_SM_outputs|nBREQ_d~4
ZB1L76 = (E1_STATE[1] & (((ZB1L19)))) # (!E1_STATE[1] & (!E1_STATE[4] & (ZB1L20)));


--DC1L14 is CPU_SM:u_CPU_SM|cpudff4:u_cpudff4|cpudff4_d~15
DC1L14 = (((TB1_FIFOEMPTY) # (!YB1L22)) # (!SB1_PTR[1])) # (!SB1_PTR[0]);


--E1L4 is CPU_SM:u_CPU_SM|BGRANT_~0
E1L4 = !_BG;


--SB1L2 is fifo:int_fifo|fifo_byte_ptr:u_byte_ptr|B~0
SB1L2 = !A1L53;


--A1L8 is AS_O_~0
A1L8 = !E1_PAS;


--A1L74 is DS_O_~0
A1L74 = !E1_PDS;


--A1L140 is ~GND
A1L140 = GND;


--A1L111 is R_W_IO~0
--operation mode is bidir

A1L111 = R_W_IO;

--R_W_IO is R_W_IO
--operation mode is bidir

R_W_IO_tri_out = TRI(!QC1_CNTR_O[1], E1_BGACK);
R_W_IO = BIDIR(R_W_IO_tri_out);


--A1L114 is _AS_IO~0
--operation mode is bidir

A1L114 = _AS_IO;

--_AS_IO is _AS_IO
--operation mode is bidir

_AS_IO_tri_out = TRI(AS_O_, E1_BGACK);
_AS_IO = BIDIR(_AS_IO_tri_out);


--_DS_IO is _DS_IO
--operation mode is bidir

_DS_IO_tri_out = TRI(DS_O_, E1_BGACK);
_DS_IO = BIDIR(_DS_IO_tri_out);


--A1L12 is DATA_IO[0]~0
--operation mode is bidir

A1L12 = DATA_IO[0];

--DATA_IO[0] is DATA_IO[0]
--operation mode is bidir

DATA_IO[0]_tri_out = TRI(KC1L3, A1L61);
DATA_IO[0] = BIDIR(DATA_IO[0]_tri_out);


--A1L14 is DATA_IO[1]~1
--operation mode is bidir

A1L14 = DATA_IO[1];

--DATA_IO[1] is DATA_IO[1]
--operation mode is bidir

DATA_IO[1]_tri_out = TRI(KC1L6, A1L61);
DATA_IO[1] = BIDIR(DATA_IO[1]_tri_out);


--A1L16 is DATA_IO[2]~2
--operation mode is bidir

A1L16 = DATA_IO[2];

--DATA_IO[2] is DATA_IO[2]
--operation mode is bidir

DATA_IO[2]_tri_out = TRI(KC1L9, A1L61);
DATA_IO[2] = BIDIR(DATA_IO[2]_tri_out);


--A1L18 is DATA_IO[3]~3
--operation mode is bidir

A1L18 = DATA_IO[3];

--DATA_IO[3] is DATA_IO[3]
--operation mode is bidir

DATA_IO[3]_tri_out = TRI(KC1L11, A1L61);
DATA_IO[3] = BIDIR(DATA_IO[3]_tri_out);


--A1L20 is DATA_IO[4]~4
--operation mode is bidir

A1L20 = DATA_IO[4];

--DATA_IO[4] is DATA_IO[4]
--operation mode is bidir

DATA_IO[4]_tri_out = TRI(KC1L13, A1L61);
DATA_IO[4] = BIDIR(DATA_IO[4]_tri_out);


--A1L22 is DATA_IO[5]~5
--operation mode is bidir

A1L22 = DATA_IO[5];

--DATA_IO[5] is DATA_IO[5]
--operation mode is bidir

DATA_IO[5]_tri_out = TRI(KC1L14, A1L61);
DATA_IO[5] = BIDIR(DATA_IO[5]_tri_out);


--A1L24 is DATA_IO[6]~6
--operation mode is bidir

A1L24 = DATA_IO[6];

--DATA_IO[6] is DATA_IO[6]
--operation mode is bidir

DATA_IO[6]_tri_out = TRI(KC1L15, A1L61);
DATA_IO[6] = BIDIR(DATA_IO[6]_tri_out);


--A1L26 is DATA_IO[7]~7
--operation mode is bidir

A1L26 = DATA_IO[7];

--DATA_IO[7] is DATA_IO[7]
--operation mode is bidir

DATA_IO[7]_tri_out = TRI(KC1L16, A1L61);
DATA_IO[7] = BIDIR(DATA_IO[7]_tri_out);


--DATA_IO[8] is DATA_IO[8]
--operation mode is bidir

DATA_IO[8]_tri_out = TRI(KC1L18, A1L61);
DATA_IO[8] = BIDIR(DATA_IO[8]_tri_out);


--DATA_IO[9] is DATA_IO[9]
--operation mode is bidir

DATA_IO[9]_tri_out = TRI(KC1L19, A1L61);
DATA_IO[9] = BIDIR(DATA_IO[9]_tri_out);


--DATA_IO[10] is DATA_IO[10]
--operation mode is bidir

DATA_IO[10]_tri_out = TRI(KC1L20, A1L61);
DATA_IO[10] = BIDIR(DATA_IO[10]_tri_out);


--DATA_IO[11] is DATA_IO[11]
--operation mode is bidir

DATA_IO[11]_tri_out = TRI(KC1L21, A1L61);
DATA_IO[11] = BIDIR(DATA_IO[11]_tri_out);


--DATA_IO[12] is DATA_IO[12]
--operation mode is bidir

DATA_IO[12]_tri_out = TRI(KC1L22, A1L61);
DATA_IO[12] = BIDIR(DATA_IO[12]_tri_out);


--DATA_IO[13] is DATA_IO[13]
--operation mode is bidir

DATA_IO[13]_tri_out = TRI(KC1L23, A1L61);
DATA_IO[13] = BIDIR(DATA_IO[13]_tri_out);


--DATA_IO[14] is DATA_IO[14]
--operation mode is bidir

DATA_IO[14]_tri_out = TRI(KC1L24, A1L61);
DATA_IO[14] = BIDIR(DATA_IO[14]_tri_out);


--DATA_IO[15] is DATA_IO[15]
--operation mode is bidir

DATA_IO[15]_tri_out = TRI(KC1L25, A1L61);
DATA_IO[15] = BIDIR(DATA_IO[15]_tri_out);


--A1L36 is DATA_IO[16]~16
--operation mode is bidir

A1L36 = DATA_IO[16];

--DATA_IO[16] is DATA_IO[16]
--operation mode is bidir

DATA_IO[16]_tri_out = TRI(KC1L26, A1L61);
DATA_IO[16] = BIDIR(DATA_IO[16]_tri_out);


--A1L38 is DATA_IO[17]~17
--operation mode is bidir

A1L38 = DATA_IO[17];

--DATA_IO[17] is DATA_IO[17]
--operation mode is bidir

DATA_IO[17]_tri_out = TRI(KC1L27, A1L61);
DATA_IO[17] = BIDIR(DATA_IO[17]_tri_out);


--A1L40 is DATA_IO[18]~18
--operation mode is bidir

A1L40 = DATA_IO[18];

--DATA_IO[18] is DATA_IO[18]
--operation mode is bidir

DATA_IO[18]_tri_out = TRI(KC1L28, A1L61);
DATA_IO[18] = BIDIR(DATA_IO[18]_tri_out);


--A1L42 is DATA_IO[19]~19
--operation mode is bidir

A1L42 = DATA_IO[19];

--DATA_IO[19] is DATA_IO[19]
--operation mode is bidir

DATA_IO[19]_tri_out = TRI(KC1L29, A1L61);
DATA_IO[19] = BIDIR(DATA_IO[19]_tri_out);


--A1L44 is DATA_IO[20]~20
--operation mode is bidir

A1L44 = DATA_IO[20];

--DATA_IO[20] is DATA_IO[20]
--operation mode is bidir

DATA_IO[20]_tri_out = TRI(KC1L30, A1L61);
DATA_IO[20] = BIDIR(DATA_IO[20]_tri_out);


--A1L46 is DATA_IO[21]~21
--operation mode is bidir

A1L46 = DATA_IO[21];

--DATA_IO[21] is DATA_IO[21]
--operation mode is bidir

DATA_IO[21]_tri_out = TRI(KC1L31, A1L61);
DATA_IO[21] = BIDIR(DATA_IO[21]_tri_out);


--A1L48 is DATA_IO[22]~22
--operation mode is bidir

A1L48 = DATA_IO[22];

--DATA_IO[22] is DATA_IO[22]
--operation mode is bidir

DATA_IO[22]_tri_out = TRI(KC1L32, A1L61);
DATA_IO[22] = BIDIR(DATA_IO[22]_tri_out);


--A1L50 is DATA_IO[23]~23
--operation mode is bidir

A1L50 = DATA_IO[23];

--DATA_IO[23] is DATA_IO[23]
--operation mode is bidir

DATA_IO[23]_tri_out = TRI(KC1L33, A1L61);
DATA_IO[23] = BIDIR(DATA_IO[23]_tri_out);


--DATA_IO[24] is DATA_IO[24]
--operation mode is bidir

DATA_IO[24]_tri_out = TRI(KC1L34, A1L61);
DATA_IO[24] = BIDIR(DATA_IO[24]_tri_out);


--A1L53 is DATA_IO[25]~25
--operation mode is bidir

A1L53 = DATA_IO[25];

--DATA_IO[25] is DATA_IO[25]
--operation mode is bidir

DATA_IO[25]_tri_out = TRI(KC1L35, A1L61);
DATA_IO[25] = BIDIR(DATA_IO[25]_tri_out);


--DATA_IO[26] is DATA_IO[26]
--operation mode is bidir

DATA_IO[26]_tri_out = TRI(KC1L36, A1L61);
DATA_IO[26] = BIDIR(DATA_IO[26]_tri_out);


--DATA_IO[27] is DATA_IO[27]
--operation mode is bidir

DATA_IO[27]_tri_out = TRI(KC1L37, A1L61);
DATA_IO[27] = BIDIR(DATA_IO[27]_tri_out);


--DATA_IO[28] is DATA_IO[28]
--operation mode is bidir

DATA_IO[28]_tri_out = TRI(KC1L38, A1L61);
DATA_IO[28] = BIDIR(DATA_IO[28]_tri_out);


--DATA_IO[29] is DATA_IO[29]
--operation mode is bidir

DATA_IO[29]_tri_out = TRI(KC1L39, A1L61);
DATA_IO[29] = BIDIR(DATA_IO[29]_tri_out);


--DATA_IO[30] is DATA_IO[30]
--operation mode is bidir

DATA_IO[30]_tri_out = TRI(KC1L40, A1L61);
DATA_IO[30] = BIDIR(DATA_IO[30]_tri_out);


--DATA_IO[31] is DATA_IO[31]
--operation mode is bidir

DATA_IO[31]_tri_out = TRI(KC1L41, A1L61);
DATA_IO[31] = BIDIR(DATA_IO[31]_tri_out);


--A1L118 is _BGACK_IO~0
--operation mode is bidir

A1L118 = _BGACK_IO;

--_BGACK_IO is _BGACK_IO
--operation mode is bidir

_BGACK_IO = BIDIR(OPNDRN(!E1_BGACK));


--A1L87 is PD_PORT[0]~0
--operation mode is bidir

A1L87 = PD_PORT[0];

--PD_PORT[0] is PD_PORT[0]
--operation mode is bidir

PD_PORT[0]_tri_out = TRI(LC1L13, A1L129);
PD_PORT[0] = BIDIR(PD_PORT[0]_tri_out);


--A1L89 is PD_PORT[1]~1
--operation mode is bidir

A1L89 = PD_PORT[1];

--PD_PORT[1] is PD_PORT[1]
--operation mode is bidir

PD_PORT[1]_tri_out = TRI(LC1L17, A1L129);
PD_PORT[1] = BIDIR(PD_PORT[1]_tri_out);


--A1L91 is PD_PORT[2]~2
--operation mode is bidir

A1L91 = PD_PORT[2];

--PD_PORT[2] is PD_PORT[2]
--operation mode is bidir

PD_PORT[2]_tri_out = TRI(LC1L21, A1L129);
PD_PORT[2] = BIDIR(PD_PORT[2]_tri_out);


--A1L93 is PD_PORT[3]~3
--operation mode is bidir

A1L93 = PD_PORT[3];

--PD_PORT[3] is PD_PORT[3]
--operation mode is bidir

PD_PORT[3]_tri_out = TRI(LC1L25, A1L129);
PD_PORT[3] = BIDIR(PD_PORT[3]_tri_out);


--A1L95 is PD_PORT[4]~4
--operation mode is bidir

A1L95 = PD_PORT[4];

--PD_PORT[4] is PD_PORT[4]
--operation mode is bidir

PD_PORT[4]_tri_out = TRI(LC1L29, A1L129);
PD_PORT[4] = BIDIR(PD_PORT[4]_tri_out);


--A1L97 is PD_PORT[5]~5
--operation mode is bidir

A1L97 = PD_PORT[5];

--PD_PORT[5] is PD_PORT[5]
--operation mode is bidir

PD_PORT[5]_tri_out = TRI(LC1L33, A1L129);
PD_PORT[5] = BIDIR(PD_PORT[5]_tri_out);


--A1L99 is PD_PORT[6]~6
--operation mode is bidir

A1L99 = PD_PORT[6];

--PD_PORT[6] is PD_PORT[6]
--operation mode is bidir

PD_PORT[6]_tri_out = TRI(LC1L37, A1L129);
PD_PORT[6] = BIDIR(PD_PORT[6]_tri_out);


--A1L101 is PD_PORT[7]~7
--operation mode is bidir

A1L101 = PD_PORT[7];

--PD_PORT[7] is PD_PORT[7]
--operation mode is bidir

PD_PORT[7]_tri_out = TRI(LC1L41, A1L129);
PD_PORT[7] = BIDIR(PD_PORT[7]_tri_out);


--PD_PORT[8] is PD_PORT[8]
--operation mode is bidir

PD_PORT[8]_tri_out = TRI(LC1L13, A1L129);
PD_PORT[8] = BIDIR(PD_PORT[8]_tri_out);


--PD_PORT[9] is PD_PORT[9]
--operation mode is bidir

PD_PORT[9]_tri_out = TRI(LC1L17, A1L129);
PD_PORT[9] = BIDIR(PD_PORT[9]_tri_out);


--PD_PORT[10] is PD_PORT[10]
--operation mode is bidir

PD_PORT[10]_tri_out = TRI(LC1L21, A1L129);
PD_PORT[10] = BIDIR(PD_PORT[10]_tri_out);


--PD_PORT[11] is PD_PORT[11]
--operation mode is bidir

PD_PORT[11]_tri_out = TRI(LC1L25, A1L129);
PD_PORT[11] = BIDIR(PD_PORT[11]_tri_out);


--PD_PORT[12] is PD_PORT[12]
--operation mode is bidir

PD_PORT[12]_tri_out = TRI(LC1L29, A1L129);
PD_PORT[12] = BIDIR(PD_PORT[12]_tri_out);


--PD_PORT[13] is PD_PORT[13]
--operation mode is bidir

PD_PORT[13]_tri_out = TRI(LC1L33, A1L129);
PD_PORT[13] = BIDIR(PD_PORT[13]_tri_out);


--PD_PORT[14] is PD_PORT[14]
--operation mode is bidir

PD_PORT[14]_tri_out = TRI(LC1L37, A1L129);
PD_PORT[14] = BIDIR(PD_PORT[14]_tri_out);


--PD_PORT[15] is PD_PORT[15]
--operation mode is bidir

PD_PORT[15]_tri_out = TRI(LC1L41, A1L129);
PD_PORT[15] = BIDIR(PD_PORT[15]_tri_out);


--E1L2 is CPU_SM:u_CPU_SM|BGACK~_wirecell
E1L2 = !E1_BGACK;


--A1L70 is DSACK_O~0_wirecell
A1L70 = !A1L69;


--A1L84 is PDATA_OE_~0_wirecell
A1L84 = !A1L83;


--G1L7 is SCSI_SM:u_SCSI_SM|DACK_o~_wirecell
G1L7 = !G1_DACK_o;


--G1L23 is SCSI_SM:u_SCSI_SM|SCSI_CS_o~_wirecell
G1L23 = !G1_SCSI_CS_o;


--A1L127 is _IOR~0_wirecell
A1L127 = !A1L126;


--A1L130 is _IOW~0_wirecell
A1L130 = !A1L129;



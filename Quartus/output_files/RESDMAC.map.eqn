-- Copyright (C) 1991-2013 Altera Corporation
-- Your use of Altera Corporation's design tools, logic functions 
-- and other software and tools, and its AMPP partner logic 
-- functions, and any output files from any of the foregoing 
-- (including device programming or simulation files), and any 
-- associated documentation or information are expressly subject 
-- to the terms and conditions of the Altera Program License 
-- Subscription Agreement, Altera MegaCore Function License 
-- Agreement, or other applicable license agreement, including, 
-- without limitation, that your use is for the sole purpose of 
-- programming logic devices manufactured by Altera and sold by 
-- Altera or its authorized distributors.  Please refer to the 
-- applicable agreement for further details.
--H1_COUNT[0] is fifo:int_fifo|fifo__full_empty_ctr:u_full_empty_ctr|COUNT[0]
H1_COUNT[0] = DFFEAS(H1L0, H1_clk, _RST,  ,  , H1L0,  ,  , C1_INCFIFO);


--D1_INCBO_o is SCSI_SM:u_SCSI_SM|INCBO_o
D1_INCBO_o = DFFEAS(U1L0, SCLK,  ,  ,  ,  ,  , D1_STATE[4],  );


--H1L0 is fifo:int_fifo|fifo__full_empty_ctr:u_full_empty_ctr|COUNT[0]~0
H1L0 = (C1_DECFIFO & ((!H1L0))) # (!C1_DECFIFO & (H1_COUNT[0]));


--C1_BGACK is CPU_SM:u_CPU_SM|BGACK
C1_BGACK = DFFEAS(M1L0, SCLK,  ,  ,  ,  ,  ,  ,  );


--D1_DACK_o is SCSI_SM:u_SCSI_SM|DACK_o
D1_DACK_o = DFFEAS(U1_DACK, SCLK,  ,  ,  ,  ,  ,  ,  );


--BB1_CNTR_O[4] is registers:u_registers|registers_cntr:u_registers_cntr|CNTR_O[4]
BB1_CNTR_O[4] = DFFEAS(A1L0, AB1_CONTR_WR, _RST,  ,  ,  ,  ,  ,  );


--D1_RE_o is SCSI_SM:u_SCSI_SM|RE_o
D1_RE_o = DFFEAS(U1L0, SCLK,  ,  ,  ,  ,  ,  ,  );


--A1L0 is _IOR~0
A1L0 = (BB1_CNTR_O[4]) # (D1_RE_o);


--D1_WE_o is SCSI_SM:u_SCSI_SM|WE_o
D1_WE_o = DFFEAS(U1_WE, SCLK,  ,  ,  ,  ,  ,  ,  );


--A1L0 is _IOW~0
A1L0 = (BB1_CNTR_O[4]) # (D1_WE_o);


--D1_SCSI_CS_o is SCSI_SM:u_SCSI_SM|SCSI_CS_o
D1_SCSI_CS_o = DFFEAS(U1L0, SCLK,  ,  ,  ,  ,  ,  ,  );


--AB1L0 is registers:u_registers|addr_decoder:u_addr_decoder|ADDR_VALID~0
AB1L0 = (!_CS & !A1L0);


--BB1_CNTR_O[1] is registers:u_registers|registers_cntr:u_registers_cntr|CNTR_O[1]
BB1_CNTR_O[1] = DFFEAS(A1L0, AB1_CONTR_WR, _RST,  ,  ,  ,  ,  ,  );


--A1L0 is _LED_RD~0
A1L0 = (C1_BGACK & (((!BB1_CNTR_O[1])))) # (!C1_BGACK & (((!AB1L0)) # (!A1L0)));


--A1L0 is _LED_WR~0
A1L0 = (C1_BGACK & (BB1_CNTR_O[1])) # (!C1_BGACK & (((A1L0) # (!AB1L0))));


--AB1L0 is registers:u_registers|addr_decoder:u_addr_decoder|SP_DMA~0
AB1L0 = (!_CS & (!A1L0 & !ADDR[6]));


--AB1L0 is registers:u_registers|addr_decoder:u_addr_decoder|h_0C~0
AB1L0 = (AB1L0 & (!ADDR[4] & !ADDR[5]));


--A1L0 is DATA_OE_~0
A1L0 = ((ADDR[2] & (ADDR[3] & AB1L0))) # (!AB1L0);


--BB1_CNTR_O[2] is registers:u_registers|registers_cntr:u_registers_cntr|CNTR_O[2]
BB1_CNTR_O[2] = DFFEAS(A1L0, AB1_CONTR_WR, _RST,  ,  ,  ,  ,  ,  );


--CB1_INT is registers:u_registers|registers_istr:u_registers_istr|INT
CB1_INT = (INTA & BB1_CNTR_O[2]);


--C1_BREQ is CPU_SM:u_CPU_SM|BREQ
C1_BREQ = DFFEAS(M1L0, SCLK,  ,  ,  ,  ,  ,  ,  );


--C1_STATE[0] is CPU_SM:u_CPU_SM|STATE[0]
C1_STATE[0] = DFFEAS(N1L0, SCLK, D1_CRESET_,  ,  ,  ,  ,  ,  );


--C1_STATE[2] is CPU_SM:u_CPU_SM|STATE[2]
C1_STATE[2] = DFFEAS(Q1L0, SCLK, D1_CRESET_,  ,  ,  ,  ,  ,  );


--C1_STATE[1] is CPU_SM:u_CPU_SM|STATE[1]
C1_STATE[1] = DFFEAS(P1L0, SCLK, D1_CRESET_,  ,  ,  ,  ,  ,  );


--L1L0 is CPU_SM:u_CPU_SM|CPU_SM_inputs:u_CPU_SM_inputs|E55~0
L1L0 = (C1_STATE[0] & (!C1_STATE[2] & !C1_STATE[1]));


--DSACK_LATCHED_[1] is DSACK_LATCHED_[1]
DSACK_LATCHED_[1] = DFFEAS(A1L0, !SCLK, !A1L0,  ,  ,  ,  ,  ,  );


--DSACK_LATCHED_[0] is DSACK_LATCHED_[0]
DSACK_LATCHED_[0] = DFFEAS(A1L0, !SCLK, !A1L0,  ,  ,  ,  ,  ,  );


--A1L0 is DSACK_CPU_SM~0
A1L0 = (!DSACK_LATCHED_[1] & !DSACK_LATCHED_[0]);


--C1_STATE[4] is CPU_SM:u_CPU_SM|STATE[4]
C1_STATE[4] = DFFEAS(S1L0, SCLK, D1_CRESET_,  ,  ,  ,  ,  ,  );


--C1_STATE[3] is CPU_SM:u_CPU_SM|STATE[3]
C1_STATE[3] = DFFEAS(R1L0, SCLK, D1_CRESET_,  ,  ,  ,  ,  ,  );


--P1L0 is CPU_SM:u_CPU_SM|cpudff2:u_cpudff2|p2c~0
P1L0 = (C1_STATE[4] & (C1_STATE[3] & !C1_STATE[0]));


--N1L0 is CPU_SM:u_CPU_SM|cpudff1:u_cpudff1|p1c~0
N1L0 = (C1_STATE[1] & !C1_STATE[2]);


--L1L0 is CPU_SM:u_CPU_SM|CPU_SM_inputs:u_CPU_SM_inputs|E31~0
L1L0 = (C1_STATE[2] & !C1_STATE[0]);


--L1L0 is CPU_SM:u_CPU_SM|CPU_SM_inputs:u_CPU_SM_inputs|E23_sd~0
L1L0 = (!C1_STATE[2] & !C1_STATE[1]);


--N1L0 is CPU_SM:u_CPU_SM|cpudff1:u_cpudff1|cpudff1_d~2
N1L0 = (C1_STATE[3]) # ((C1_STATE[4] & ((!L1L0))) # (!C1_STATE[4] & (!L1L0)));


--N1L0 is CPU_SM:u_CPU_SM|cpudff1:u_cpudff1|cpudff1_d~3
N1L0 = (A1L0 & (((P1L0 & !N1L0)) # (!N1L0)));


--L1L0 is CPU_SM:u_CPU_SM|CPU_SM_inputs:u_CPU_SM_inputs|E30_d~0
L1L0 = (C1_STATE[2] & (C1_STATE[3] & (!C1_STATE[1] & !C1_STATE[0])));


--L1L0 is CPU_SM:u_CPU_SM|CPU_SM_inputs:u_CPU_SM_inputs|E36_s_E47_s~0
L1L0 = (L1L0 & !C1_STATE[4]);


--L1L0 is CPU_SM:u_CPU_SM|CPU_SM_inputs:u_CPU_SM_inputs|E57_s~0
L1L0 = (C1_STATE[1] & (!C1_STATE[4] & !C1_STATE[3]));


--L1L0 is CPU_SM:u_CPU_SM|CPU_SM_inputs:u_CPU_SM_inputs|E46_s_E59_s~0
L1L0 = (C1_STATE[1] & (!C1_STATE[4] & (!C1_STATE[2] & !C1_STATE[0])));


--L1L0 is CPU_SM:u_CPU_SM|CPU_SM_inputs:u_CPU_SM_inputs|E23_sd~1
L1L0 = (C1_STATE[4] & (!C1_STATE[2] & (!C1_STATE[1] & !C1_STATE[3])));


--N1L0 is CPU_SM:u_CPU_SM|cpudff1:u_cpudff1|cpudff1_d~4
N1L0 = (A1L0 & (L1L0 & (!A1L0 & !A1L0)));


--R1L0 is CPU_SM:u_CPU_SM|cpudff4:u_cpudff4|cpudff4_d~6
R1L0 = (!L1L0 & (!N1L0 & ((C1_STATE[0]) # (!L1L0))));


--L1L0 is CPU_SM:u_CPU_SM|CPU_SM_inputs:u_CPU_SM_inputs|E37_s_E44_s~0
L1L0 = (C1_STATE[4] & (C1_STATE[1] & !C1_STATE[3]));


--Q1L0 is CPU_SM:u_CPU_SM|cpudff3:u_cpudff3|p3b~0
Q1L0 = (C1_STATE[3] & !C1_STATE[0]);


--L1L0 is CPU_SM:u_CPU_SM|CPU_SM_inputs:u_CPU_SM_inputs|E40_s_E41_s~0
L1L0 = (C1_STATE[1] & !C1_STATE[4]);


--M1L0 is CPU_SM:u_CPU_SM|CPU_SM_outputs:u_CPU_SM_outputs|F2CPUL_d~0
M1L0 = (C1_STATE[2] & (((!L1L0) # (!Q1L0)))) # (!C1_STATE[2] & (!L1L0));


--N1L0 is CPU_SM:u_CPU_SM|cpudff1:u_cpudff1|cpudff1_d~5
N1L0 = (N1L0) # ((L1L0) # ((!M1L0) # (!R1L0)));


--H1_FIFOFULL is fifo:int_fifo|fifo__full_empty_ctr:u_full_empty_ctr|FIFOFULL
H1_FIFOFULL = DFFEAS(H1L0, H1_clk, _RST,  ,  ,  ,  ,  ,  );


--M1L0 is CPU_SM:u_CPU_SM|CPU_SM_outputs:u_CPU_SM_outputs|nINCNI_d~0
M1L0 = (((C1_STATE[1]) # (C1_STATE[3])) # (!L1L0)) # (!C1_STATE[4]);


--F1_A1 is registers:u_registers|A1
F1_A1 = DFFEAS(A1L0, AB1_ACR_WR, _RST,  ,  ,  ,  ,  ,  );


--C1_nCYCLEDONE is CPU_SM:u_CPU_SM|nCYCLEDONE
C1_nCYCLEDONE = DFFEAS(A1L0, SCLK,  ,  ,  ,  ,  ,  ,  );


--C1_BGRANT_ is CPU_SM:u_CPU_SM|BGRANT_
C1_BGRANT_ = DFFEAS(_BG, SCLK,  ,  ,  ,  ,  ,  ,  );


--S1L0 is CPU_SM:u_CPU_SM|cpudff5:u_cpudff5|cpudff5_d~0
S1L0 = (C1_STATE[2] & (!C1_nCYCLEDONE & !C1_BGRANT_));


--M1L0 is CPU_SM:u_CPU_SM|CPU_SM_outputs:u_CPU_SM_outputs|nBREQ_d~4
M1L0 = (C1_STATE[4] & C1_STATE[0]);


--L1L0 is CPU_SM:u_CPU_SM|CPU_SM_inputs:u_CPU_SM_inputs|E12~0
L1L0 = (C1_STATE[3] & (S1L0 & (M1L0 & !C1_STATE[1])));


--R1L0 is CPU_SM:u_CPU_SM|cpudff4:u_cpudff4|cpudff4_d~7
R1L0 = (H1_FIFOFULL & (((!L1L0) # (!F1_A1)))) # (!H1_FIFOFULL & (M1L0 & ((!L1L0) # (!F1_A1))));


--G1_BO1 is fifo:int_fifo|fifo_byte_ptr:u_byte_ptr|BO1
G1_BO1 = DFFEAS(G1L0, G1_BO1_CLK,  ,  ,  ,  ,  ,  ,  );


--G1_BO0 is fifo:int_fifo|fifo_byte_ptr:u_byte_ptr|BO0
G1_BO0 = DFFEAS(G1L0, D1_INCBO_o, _RST,  ,  ,  ,  ,  ,  );


--T1L0 is SCSI_SM:u_SCSI_SM|scsi_sm_inputs:u_scsi_sm_inputs|E[4]~4
T1L0 = (G1_BO1 & G1_BO0);


--F1_FLUSHFIFO is registers:u_registers|FLUSHFIFO
F1_FLUSHFIFO = DFFEAS(VCC, AB1_FLUSH_, !F1L0,  ,  ,  ,  ,  ,  );


--H1_FIFOEMPTY is fifo:int_fifo|fifo__full_empty_ctr:u_full_empty_ctr|FIFOEMPTY
H1_FIFOEMPTY = DFFEAS(H1L0, H1_clk, _RST,  ,  ,  ,  ,  ,  );


--LEFTOVERS is LEFTOVERS
LEFTOVERS = (F1_FLUSHFIFO & (!H1_FIFOEMPTY & ((G1_BO1) # (G1_BO0))));


--L1L0 is CPU_SM:u_CPU_SM|CPU_SM_inputs:u_CPU_SM_inputs|E26~0
L1L0 = (C1_STATE[2]) # ((T1L0) # ((!L1L0) # (!LEFTOVERS)));


--L1L0 is CPU_SM:u_CPU_SM|CPU_SM_inputs:u_CPU_SM_inputs|E53~0
L1L0 = (C1_STATE[4] & (C1_STATE[0] & C1_STATE[3]));


--L1L0 is CPU_SM:u_CPU_SM|CPU_SM_inputs:u_CPU_SM_inputs|E46_s_E59_s~1
L1L0 = (C1_STATE[1] & (!C1_STATE[2] & !C1_STATE[0]));


--N1L0 is CPU_SM:u_CPU_SM|cpudff1:u_cpudff1|cpudff1_d~6
N1L0 = (L1L0 & (!N1L0 & ((!N1L0) # (!L1L0))));


--N1L0 is CPU_SM:u_CPU_SM|cpudff1:u_cpudff1|cpudff1_d~7
N1L0 = (((_STERM & N1L0)) # (!N1L0)) # (!R1L0);


--L1L0 is CPU_SM:u_CPU_SM|CPU_SM_inputs:u_CPU_SM_inputs|E23_sd~2
L1L0 = (C1_STATE[4] & !C1_STATE[3]);


--L1L0 is CPU_SM:u_CPU_SM|CPU_SM_inputs:u_CPU_SM_inputs|E46_s_E59_s~2
L1L0 = (C1_STATE[1] & !C1_STATE[0]);


--L1L0 is CPU_SM:u_CPU_SM|CPU_SM_inputs:u_CPU_SM_inputs|E32~0
L1L0 = (C1_STATE[2] & (!C1_STATE[1] & !C1_STATE[0]));


--N1L0 is CPU_SM:u_CPU_SM|cpudff1:u_cpudff1|cpudff1_d~8
N1L0 = (L1L0 & ((L1L0) # ((L1L0 & H1_FIFOFULL))));


--L1L0 is CPU_SM:u_CPU_SM|CPU_SM_inputs:u_CPU_SM_inputs|E37_s_E44_s~1
L1L0 = (C1_STATE[1] & !C1_STATE[3]);


--L1L0 is CPU_SM:u_CPU_SM|CPU_SM_inputs:u_CPU_SM_inputs|E27~0
L1L0 = (L1L0 & (!C1_STATE[2] & (!H1_FIFOEMPTY & !LEFTOVERS)));


--N1L0 is CPU_SM:u_CPU_SM|cpudff1:u_cpudff1|cpudff1_d~9
N1L0 = (C1_STATE[0] & (((C1_STATE[3] & !C1_STATE[2])) # (!C1_STATE[1])));


--N1L0 is CPU_SM:u_CPU_SM|cpudff1:u_cpudff1|cpudff1_d~10
N1L0 = (N1L0) # ((!C1_STATE[4] & ((L1L0) # (N1L0))));


--L1L0 is CPU_SM:u_CPU_SM|CPU_SM_inputs:u_CPU_SM_inputs|E25_d~0
L1L0 = (L1L0 & (!A1L0 & (!A1L0 & !C1_STATE[3])));


--P1L0 is CPU_SM:u_CPU_SM|cpudff2:u_cpudff2|p2a~0
P1L0 = (C1_STATE[4] & ((L1L0) # (L1L0)));


--N1L0 is CPU_SM:u_CPU_SM|cpudff1:u_cpudff1|p1a~0
N1L0 = (!A1L0 & (!A1L0 & !C1_STATE[3]));


--N1L0 is CPU_SM:u_CPU_SM|cpudff1:u_cpudff1|p1a~1
N1L0 = (L1L0 & (N1L0 & !C1_STATE[4]));


--L1L0 is CPU_SM:u_CPU_SM|CPU_SM_inputs:u_CPU_SM_inputs|E31~1
L1L0 = (C1_STATE[2] & (!C1_STATE[4] & (!C1_STATE[0] & !C1_STATE[3])));


--N1L0 is CPU_SM:u_CPU_SM|cpudff1:u_cpudff1|p1b~0
N1L0 = (!_STERM & ((L1L0) # ((L1L0) # (L1L0))));


--M1L0 is CPU_SM:u_CPU_SM|CPU_SM_outputs:u_CPU_SM_outputs|INCFIFO_d~0
M1L0 = (!N1L0 & ((A1L0) # ((!P1L0 & !N1L0))));


--N1L0 is CPU_SM:u_CPU_SM|cpudff1:u_cpudff1|cpudff1_d~11
N1L0 = (L1L0) # ((N1L0) # ((N1L0) # (!M1L0)));


--Q1L0 is CPU_SM:u_CPU_SM|cpudff3:u_cpudff3|p3a~0
Q1L0 = (L1L0 & (((F1_A1 & S1L0)) # (!C1_STATE[0])));


--L1L0 is CPU_SM:u_CPU_SM|CPU_SM_inputs:u_CPU_SM_inputs|E56~0
L1L0 = (C1_STATE[0] & (!C1_STATE[4] & (!C1_STATE[1] & !C1_STATE[3])));


--P1L0 is CPU_SM:u_CPU_SM|cpudff2:u_cpudff2|cpudff2_d~0
P1L0 = (!C1_STATE[4] & ((L1L0) # ((!C1_STATE[3] & L1L0))));


--P1L0 is CPU_SM:u_CPU_SM|cpudff2:u_cpudff2|cpudff2_d~1
P1L0 = (!P1L0 & (((!L1L0) # (!H1_FIFOFULL)) # (!L1L0)));


--Q1L0 is CPU_SM:u_CPU_SM|cpudff3:u_cpudff3|p3a~1
Q1L0 = (Q1L0) # ((N1L0) # ((L1L0) # (!P1L0)));


--L1L0 is CPU_SM:u_CPU_SM|CPU_SM_inputs:u_CPU_SM_inputs|E8~0
L1L0 = (L1L0 & (S1L0 & (M1L0 & !F1_A1)));


--A1L0 is LEFTOVERS~0
A1L0 = (F1_FLUSHFIFO & ((G1_BO1) # (G1_BO0)));


--L1L0 is CPU_SM:u_CPU_SM|CPU_SM_inputs:u_CPU_SM_inputs|E27~1
L1L0 = (C1_STATE[1] & (!C1_STATE[2] & (!C1_STATE[3] & !H1_FIFOEMPTY)));


--L1L0 is CPU_SM:u_CPU_SM|CPU_SM_inputs:u_CPU_SM_inputs|E21~0
L1L0 = (C1_STATE[4]) # (((!T1L0) # (!L1L0)) # (!A1L0));


--M1L0 is CPU_SM:u_CPU_SM|CPU_SM_outputs:u_CPU_SM_outputs|F2CPUL_d~1
M1L0 = ((C1_STATE[2] & ((!C1_STATE[0]))) # (!C1_STATE[2] & (!H1_FIFOEMPTY))) # (!L1L0);


--M1L0 is CPU_SM:u_CPU_SM|CPU_SM_outputs:u_CPU_SM_outputs|F2CPUH_X~0
M1L0 = (C1_STATE[4] & (Q1L0 & (!A1L0 & !A1L0)));


--M1L0 is CPU_SM:u_CPU_SM|CPU_SM_outputs:u_CPU_SM_outputs|F2CPUL_d~2
M1L0 = (L1L0 & (M1L0 & ((N1L0) # (!M1L0))));


--P1L0 is CPU_SM:u_CPU_SM|cpudff2:u_cpudff2|p2c~1
P1L0 = (_STERM & (!DSACK_LATCHED_[1] & !DSACK_LATCHED_[0]));


--Q1L0 is CPU_SM:u_CPU_SM|cpudff3:u_cpudff3|p3c~0
Q1L0 = (C1_STATE[0] & C1_STATE[3]);


--Q1L0 is CPU_SM:u_CPU_SM|cpudff3:u_cpudff3|p3c~1
Q1L0 = (C1_STATE[4] & (L1L0 & (P1L0 & !Q1L0)));


--L1L0 is CPU_SM:u_CPU_SM|CPU_SM_inputs:u_CPU_SM_inputs|E39_s~0
L1L0 = (C1_STATE[4] & (C1_STATE[2] & (C1_STATE[1] & Q1L0)));


--Q1L0 is CPU_SM:u_CPU_SM|cpudff3:u_cpudff3|p3b~1
Q1L0 = (Q1L0 & (!C1_STATE[1] & (C1_STATE[4] $ (C1_STATE[2]))));


--Q1L0 is CPU_SM:u_CPU_SM|cpudff3:u_cpudff3|p3b~2
Q1L0 = (!Q1L0 & ((!L1L0) # (!C1_STATE[4])));


--Q1L0 is CPU_SM:u_CPU_SM|cpudff3:u_cpudff3|p3b~3
Q1L0 = (!_STERM & ((L1L0) # ((!M1L0) # (!Q1L0))));


--Q1L0 is CPU_SM:u_CPU_SM|cpudff3:u_cpudff3|cpudff3_d~0
Q1L0 = (N1L0) # ((!C1_STATE[4] & ((L1L0) # (L1L0))));


--Q1L0 is CPU_SM:u_CPU_SM|cpudff3:u_cpudff3|cpudff3_d~1
Q1L0 = (Q1L0) # ((Q1L0) # ((_STERM & Q1L0)));


--Q1L0 is CPU_SM:u_CPU_SM|cpudff3:u_cpudff3|cpudff3_d~2
Q1L0 = (Q1L0) # ((!Q1L0 & (L1L0 & M1L0)));


--R1L0 is CPU_SM:u_CPU_SM|cpudff4:u_cpudff4|p4a~0
R1L0 = (C1_STATE[3] & (!A1L0 & !C1_STATE[0]));


--R1L0 is CPU_SM:u_CPU_SM|cpudff4:u_cpudff4|p4a~1
R1L0 = (C1_STATE[2] & !A1L0);


--M1L0 is CPU_SM:u_CPU_SM|CPU_SM_outputs:u_CPU_SM_outputs|SIZE1_Y~0
M1L0 = (!L1L0 & (!L1L0 & ((A1L0) # (!L1L0))));


--R1L0 is CPU_SM:u_CPU_SM|cpudff4:u_cpudff4|p4a~2
R1L0 = ((R1L0 & ((R1L0) # (L1L0)))) # (!M1L0);


--R1L0 is CPU_SM:u_CPU_SM|cpudff4:u_cpudff4|cpudff4_d~8
R1L0 = (A1L0 & (((!N1L0)))) # (!A1L0 & (C1_STATE[4] & (R1L0)));


--M1L0 is CPU_SM:u_CPU_SM|CPU_SM_outputs:u_CPU_SM_outputs|nBREQ_d~5
M1L0 = (Q1L0 & ((L1L0 & (H1_FIFOEMPTY)) # (!L1L0 & ((LEFTOVERS))))) # (!Q1L0 & (((LEFTOVERS))));


--C1_FLUSHFIFO is CPU_SM:u_CPU_SM|FLUSHFIFO
C1_FLUSHFIFO = DFFEAS(F1_FLUSHFIFO, SCLK,  ,  ,  ,  ,  ,  ,  );


--C1_DMAENA is CPU_SM:u_CPU_SM|DMAENA
C1_DMAENA = DFFEAS(BB1_CNTR_O[8], SCLK,  ,  ,  ,  ,  ,  ,  );


--M1L0 is CPU_SM:u_CPU_SM|CPU_SM_outputs:u_CPU_SM_outputs|nBREQ_d~6
M1L0 = (BB1_CNTR_O[1] & C1_DMAENA);


--R1L0 is CPU_SM:u_CPU_SM|cpudff4:u_cpudff4|cpudff4_d~9
R1L0 = (!C1_nCYCLEDONE & !C1_BGRANT_);


--R1L0 is CPU_SM:u_CPU_SM|cpudff4:u_cpudff4|cpudff4_d~10
R1L0 = (C1_STATE[2] & (C1_STATE[0] & (L1L0 & !R1L0)));


--R1L0 is CPU_SM:u_CPU_SM|cpudff4:u_cpudff4|cpudff4_d~11
R1L0 = (C1_STATE[2] & ((M1L0) # ((C1_STATE[4] & R1L0)))) # (!C1_STATE[2] & (((C1_STATE[4] & R1L0))));


--P1L0 is CPU_SM:u_CPU_SM|cpudff2:u_cpudff2|cpudff2_d~2
P1L0 = (A1L0 & (((!C1_STATE[0]) # (!L1L0)))) # (!A1L0 & (!L1L0 & ((!C1_STATE[0]) # (!L1L0))));


--L1L0 is CPU_SM:u_CPU_SM|CPU_SM_inputs:u_CPU_SM_inputs|E7~0
L1L0 = (C1_STATE[2] & (C1_STATE[1] & (M1L0 & L1L0)));


--R1L0 is CPU_SM:u_CPU_SM|cpudff4:u_cpudff4|cpudff4_d~12
R1L0 = (H1_FIFOFULL & (!L1L0 & ((R1L0) # (!L1L0)))) # (!H1_FIFOFULL & (((R1L0) # (!L1L0))));


--R1L0 is CPU_SM:u_CPU_SM|cpudff4:u_cpudff4|p4a~3
R1L0 = (C1_STATE[0] & !C1_STATE[1]);


--R1L0 is CPU_SM:u_CPU_SM|cpudff4:u_cpudff4|cpudff4_d~13
R1L0 = ((R1L0 & (C1_STATE[4] $ (C1_STATE[3])))) # (!_STERM);


--R1L0 is CPU_SM:u_CPU_SM|cpudff4:u_cpudff4|cpudff4_d~14
R1L0 = (((R1L0) # (!R1L0)) # (!P1L0)) # (!R1L0);


--M1L0 is CPU_SM:u_CPU_SM|CPU_SM_outputs:u_CPU_SM_outputs|F2CPUL_d~3
M1L0 = (L1L0 & M1L0);


--R1L0 is CPU_SM:u_CPU_SM|cpudff4:u_cpudff4|cpudff4_d~15
R1L0 = (R1L0) # ((R1L0) # ((R1L0) # (R1L0)));


--P1L0 is CPU_SM:u_CPU_SM|cpudff2:u_cpudff2|p2a~1
P1L0 = (C1_DMAENA & !BB1_CNTR_O[1]);


--S1L0 is CPU_SM:u_CPU_SM|cpudff5:u_cpudff5|cpudff5_d~1
S1L0 = (C1_STATE[1] & (P1L0)) # (!C1_STATE[1] & (((S1L0 & !F1_A1))));


--C1_DREQ_ is CPU_SM:u_CPU_SM|DREQ_
C1_DREQ_ = DFFEAS(DREQ_, SCLK,  ,  ,  ,  ,  ,  ,  );


--P1L0 is CPU_SM:u_CPU_SM|cpudff2:u_cpudff2|p2a~2
P1L0 = (!H1_FIFOEMPTY & !C1_DREQ_);


--S1L0 is CPU_SM:u_CPU_SM|cpudff5:u_cpudff5|cpudff5_d~2
S1L0 = (((!BB1_CNTR_O[1] & !P1L0)) # (!C1_DMAENA)) # (!C1_STATE[2]);


--S1L0 is CPU_SM:u_CPU_SM|cpudff5:u_cpudff5|cpudff5_d~3
S1L0 = (N1L0) # ((C1_STATE[4] & (S1L0)) # (!C1_STATE[4] & ((S1L0))));


--S1L0 is CPU_SM:u_CPU_SM|cpudff5:u_cpudff5|cpudff5_d~4
S1L0 = (LEFTOVERS & (((Q1L0 & S1L0)))) # (!LEFTOVERS & ((L1L0) # ((Q1L0 & S1L0))));


--S1L0 is CPU_SM:u_CPU_SM|cpudff5:u_cpudff5|cpudff5_d~5
S1L0 = (_STERM & ((C1_STATE[0]) # (!L1L0)));


--L1_E23_sd is CPU_SM:u_CPU_SM|CPU_SM_inputs:u_CPU_SM_inputs|E23_sd
L1_E23_sd = (A1L0 & (L1L0 & !A1L0));


--S1L0 is CPU_SM:u_CPU_SM|cpudff5:u_cpudff5|cpudff5_d~6
S1L0 = (S1L0 & ((A1L0 & ((!L1L0))) # (!A1L0 & (!L1_E23_sd))));


--L1L0 is CPU_SM:u_CPU_SM|CPU_SM_inputs:u_CPU_SM_inputs|E60~0
L1L0 = (C1_STATE[0] & (C1_STATE[3] & !C1_STATE[4]));


--S1L0 is CPU_SM:u_CPU_SM|cpudff5:u_cpudff5|cpudff5_d~7
S1L0 = (M1L0 & ((R1L0) # ((!C1_STATE[1])))) # (!M1L0 & (((L1L0 & !C1_STATE[1]))));


--S1L0 is CPU_SM:u_CPU_SM|cpudff5:u_cpudff5|cpudff5_d~8
S1L0 = (C1_STATE[1] & ((!C1_STATE[0]))) # (!C1_STATE[1] & ((C1_STATE[2]) # (C1_STATE[0])));


--S1L0 is CPU_SM:u_CPU_SM|cpudff5:u_cpudff5|cpudff5_d~9
S1L0 = (S1L0) # ((S1L0) # ((L1L0 & S1L0)));


--L1L0 is CPU_SM:u_CPU_SM|CPU_SM_inputs:u_CPU_SM_inputs|E27~2
L1L0 = (L1L0 & (!C1_STATE[4] & !LEFTOVERS));


--M1L0 is CPU_SM:u_CPU_SM|CPU_SM_outputs:u_CPU_SM_outputs|nSTOPFLUSH_d~0
M1L0 = (L1L0 & (L1L0 & (L1L0 & !L1L0)));


--S1L0 is CPU_SM:u_CPU_SM|cpudff5:u_cpudff5|cpudff5_d~10
S1L0 = (Q1L0) # ((S1L0) # ((S1L0) # (!M1L0)));


--P1L0 is CPU_SM:u_CPU_SM|cpudff2:u_cpudff2|p2c~2
P1L0 = (C1_STATE[2] & C1_STATE[3]);


--P1L0 is CPU_SM:u_CPU_SM|cpudff2:u_cpudff2|p2c~3
P1L0 = (!C1_STATE[4] & (!C1_STATE[0] & ((C1_STATE[1]) # (P1L0))));


--P1L0 is CPU_SM:u_CPU_SM|cpudff2:u_cpudff2|cpudff2_d~3
P1L0 = (L1L0 & (!R1L0 & ((!P1L0) # (!_STERM)))) # (!L1L0 & (((!P1L0) # (!_STERM))));


--P1L0 is CPU_SM:u_CPU_SM|cpudff2:u_cpudff2|p2a~3
P1L0 = (Q1L0 & (L1L0 & (P1L0 & P1L0)));


--P1L0 is CPU_SM:u_CPU_SM|cpudff2:u_cpudff2|cpudff2_d~4
P1L0 = ((!L1L0 & ((!L1L0) # (!C1_STATE[4])))) # (!P1L0);


--P1L0 is CPU_SM:u_CPU_SM|cpudff2:u_cpudff2|cpudff2_d~5
P1L0 = (!P1L0 & (P1L0 & ((A1L0) # (P1L0))));


--P1L0 is CPU_SM:u_CPU_SM|cpudff2:u_cpudff2|cpudff2_d~6
P1L0 = (L1L0 & ((C1_STATE[4]) # ((C1_STATE[2]) # (!Q1L0))));


--L1L0 is CPU_SM:u_CPU_SM|CPU_SM_inputs:u_CPU_SM_inputs|E16~0
L1L0 = (C1_STATE[2] & (L1L0 & !C1_STATE[1]));


--P1L0 is CPU_SM:u_CPU_SM|cpudff2:u_cpudff2|cpudff2_d~7
P1L0 = (!N1L0 & (((!C1_nCYCLEDONE & !C1_BGRANT_)) # (!L1L0)));


--P1L0 is CPU_SM:u_CPU_SM|cpudff2:u_cpudff2|p2c~4
P1L0 = (C1_STATE[4] & (L1L0 & (Q1L0 & P1L0)));


--P1L0 is CPU_SM:u_CPU_SM|cpudff2:u_cpudff2|cpudff2_d~8
P1L0 = (A1L0) # (!A1L0);


--P1L0 is CPU_SM:u_CPU_SM|cpudff2:u_cpudff2|cpudff2_d~9
P1L0 = (((!A1L0 & P1L0)) # (!_STERM)) # (!L1L0);


--P1L0 is CPU_SM:u_CPU_SM|cpudff2:u_cpudff2|cpudff2_d~10
P1L0 = (!P1L0 & (P1L0 & ((F1_A1) # (!L1L0))));


--P1L0 is CPU_SM:u_CPU_SM|cpudff2:u_cpudff2|cpudff2_d~11
P1L0 = (P1L0 & (P1L0 & (P1L0 & P1L0)));


--P1L0 is CPU_SM:u_CPU_SM|cpudff2:u_cpudff2|cpudff2_d~12
P1L0 = (((!P1L0) # (!P1L0)) # (!P1L0)) # (!P1L0);


--M1L0 is CPU_SM:u_CPU_SM|CPU_SM_outputs:u_CPU_SM_outputs|BGACK_d~0
M1L0 = (R1L0 & (!S1L0 & (!R1L0 & !P1L0))) # (!R1L0 & (((!S1L0 & !R1L0)) # (!P1L0)));


--M1L0 is CPU_SM:u_CPU_SM|CPU_SM_outputs:u_CPU_SM_outputs|BGACK_d~1
M1L0 = (R1L0 & (S1L0 & P1L0));


--M1L0 is CPU_SM:u_CPU_SM|CPU_SM_outputs:u_CPU_SM_outputs|BGACK_d~2
M1L0 = (N1L0) # ((Q1L0 & ((!M1L0))) # (!Q1L0 & (!M1L0)));


--D1_STATE[4] is SCSI_SM:u_SCSI_SM|STATE[4]
D1_STATE[4] = DFFEAS(U1L0, SCLK, D1_CRESET_,  ,  ,  ,  ,  ,  );


--D1_CCPUREQ is SCSI_SM:u_SCSI_SM|CCPUREQ
D1_CCPUREQ = DFFEAS(AB1_WDREGREQ, SCLK,  ,  , D1_CRESET_,  ,  ,  ,  );


--D1_STATE[3] is SCSI_SM:u_SCSI_SM|STATE[3]
D1_STATE[3] = DFFEAS(U1L0, SCLK, D1_CRESET_,  ,  ,  ,  ,  ,  );


--D1_STATE[1] is SCSI_SM:u_SCSI_SM|STATE[1]
D1_STATE[1] = DFFEAS(U1L0, SCLK, D1_CRESET_,  ,  ,  ,  ,  ,  );


--T1L0 is SCSI_SM:u_SCSI_SM|scsi_sm_inputs:u_scsi_sm_inputs|E0~0
T1L0 = (!BB1_CNTR_O[1] & (!D1_CCPUREQ & (!D1_STATE[3] & !D1_STATE[1])));


--D1_CDREQ_ is SCSI_SM:u_SCSI_SM|CDREQ_
D1_CDREQ_ = DFFEAS(DREQ_, SCLK,  ,  , D1_CRESET_,  ,  ,  ,  );


--D1_STATE[0] is SCSI_SM:u_SCSI_SM|STATE[0]
D1_STATE[0] = DFFEAS(U1L0, SCLK, D1_CRESET_,  ,  ,  ,  ,  ,  );


--D1_RDFIFO_o is SCSI_SM:u_SCSI_SM|RDFIFO_o
D1_RDFIFO_o = DFFEAS(VCC, D1_RDFIFO_d, !D1L0,  ,  ,  ,  ,  ,  );


--T1L0 is SCSI_SM:u_SCSI_SM|scsi_sm_inputs:u_scsi_sm_inputs|E0~1
T1L0 = (H1_FIFOEMPTY & (!D1_CDREQ_ & (!D1_STATE[0] & !D1_RDFIFO_o)));


--U1L0 is SCSI_SM:u_SCSI_SM|scsi_sm_outputs:u_scsi_sm_outputs|DACK~0
U1L0 = (D1_STATE[4] & (T1L0 & T1L0));


--T1L0 is SCSI_SM:u_SCSI_SM|scsi_sm_inputs:u_scsi_sm_inputs|E[13]~5
T1L0 = (D1_STATE[1] & !D1_STATE[3]);


--D1_STATE[2] is SCSI_SM:u_SCSI_SM|STATE[2]
D1_STATE[2] = DFFEAS(U1L0, SCLK, D1_CRESET_,  ,  ,  ,  ,  ,  );


--T1L0 is SCSI_SM:u_SCSI_SM|scsi_sm_inputs:u_scsi_sm_inputs|E1~0
T1L0 = (!D1_STATE[0] & !D1_STATE[2]);


--T1L0 is SCSI_SM:u_SCSI_SM|scsi_sm_inputs:u_scsi_sm_inputs|E[7]~6
T1L0 = (D1_STATE[3] & (!D1_STATE[1] & (!D1_STATE[0] & !D1_STATE[2])));


--T1L0 is SCSI_SM:u_SCSI_SM|scsi_sm_inputs:u_scsi_sm_inputs|E[7]~7
T1L0 = (D1_STATE[4] & (T1L0 & !H1_FIFOFULL));


--T1L0 is SCSI_SM:u_SCSI_SM|scsi_sm_inputs:u_scsi_sm_inputs|E21~0
T1L0 = (D1_STATE[2] & (!D1_STATE[3] & !D1_STATE[1]));


--T1L0 is SCSI_SM:u_SCSI_SM|scsi_sm_inputs:u_scsi_sm_inputs|E1~1
T1L0 = (!D1_STATE[3] & !D1_STATE[1]);


--D1_RIFIFO_o is SCSI_SM:u_SCSI_SM|RIFIFO_o
D1_RIFIFO_o = DFFEAS(VCC, D1_RIFIFO_d, !D1L0,  ,  ,  ,  ,  ,  );


--T1L0 is SCSI_SM:u_SCSI_SM|scsi_sm_inputs:u_scsi_sm_inputs|E1~2
T1L0 = (T1L0 & (!H1_FIFOFULL & (!D1_CDREQ_ & !D1_RIFIFO_o)));


--T1L0 is SCSI_SM:u_SCSI_SM|scsi_sm_inputs:u_scsi_sm_inputs|E1~3
T1L0 = (BB1_CNTR_O[1] & (T1L0 & (T1L0 & !D1_CCPUREQ)));


--U1L0 is SCSI_SM:u_SCSI_SM|scsi_sm_outputs:u_scsi_sm_outputs|DACK~1
U1L0 = (T1L0) # ((T1L0) # ((T1L0 & !D1_STATE[4])));


--T1L0 is SCSI_SM:u_SCSI_SM|scsi_sm_inputs:u_scsi_sm_inputs|E[13]~8
T1L0 = (!D1_STATE[4] & (!D1_STATE[0] & !D1_STATE[2]));


--T1L0 is SCSI_SM:u_SCSI_SM|scsi_sm_inputs:u_scsi_sm_inputs|E[16]~9
T1L0 = (D1_STATE[4] & (D1_STATE[3] & (D1_STATE[2] & !D1_STATE[1])));


--U1_DACK is SCSI_SM:u_SCSI_SM|scsi_sm_outputs:u_scsi_sm_outputs|DACK
U1_DACK = (U1L0) # ((T1L0) # ((U1L0) # (!U1L0)));


--U1L0 is SCSI_SM:u_SCSI_SM|scsi_sm_outputs:u_scsi_sm_outputs|RE~0
U1L0 = D1_STATE[4] $ (D1_STATE[2]);


--U1L0 is SCSI_SM:u_SCSI_SM|scsi_sm_outputs:u_scsi_sm_outputs|RE~1
U1L0 = (A1L0 & ((T1L0) # ((D1_STATE[1] & !U1L0)))) # (!A1L0 & (((D1_STATE[1] & !U1L0))));


--U1L0 is SCSI_SM:u_SCSI_SM|scsi_sm_outputs:u_scsi_sm_outputs|RE~2
U1L0 = (D1_STATE[1] & (((!D1_STATE[0])))) # (!D1_STATE[1] & ((D1_STATE[3]) # ((!D1_STATE[2]))));


--U1L0 is SCSI_SM:u_SCSI_SM|scsi_sm_outputs:u_scsi_sm_outputs|RE~3
U1L0 = (T1L0) # (((D1_STATE[3] & U1L0)) # (!U1L0));


--U1L0 is SCSI_SM:u_SCSI_SM|scsi_sm_outputs:u_scsi_sm_outputs|WE~0
U1L0 = (T1L0 & (!A1L0 & !D1_STATE[4]));


--T1L0 is SCSI_SM:u_SCSI_SM|scsi_sm_inputs:u_scsi_sm_inputs|E[27]~10
T1L0 = (D1_STATE[3] & !D1_STATE[2]);


--T1L0 is SCSI_SM:u_SCSI_SM|scsi_sm_inputs:u_scsi_sm_inputs|E[24]~11
T1L0 = (D1_STATE[4] & (D1_STATE[0] & (!D1_STATE[3] & !D1_STATE[1])));


--U1L0 is SCSI_SM:u_SCSI_SM|scsi_sm_outputs:u_scsi_sm_outputs|WE~1
U1L0 = (!T1L0 & (((!T1L0) # (!D1_STATE[1])) # (!D1_STATE[4])));


--U1_WE is SCSI_SM:u_SCSI_SM|scsi_sm_outputs:u_scsi_sm_outputs|WE
U1_WE = (T1L0) # ((U1L0) # ((!U1L0) # (!U1L0)));


--M1L0 is CPU_SM:u_CPU_SM|CPU_SM_outputs:u_CPU_SM_outputs|nBREQ_d~7
M1L0 = (C1_STATE[3] & (((!C1_STATE[1])))) # (!C1_STATE[3] & (C1_STATE[1] & ((F1_A1) # (!R1L0))));


--M1L0 is CPU_SM:u_CPU_SM|CPU_SM_outputs:u_CPU_SM_outputs|nBREQ_d~8
M1L0 = (((C1_STATE[2] & M1L0)) # (!L1L0)) # (!R1L0);


--D1_CRESET_ is SCSI_SM:u_SCSI_SM|CRESET_
D1_CRESET_ = DFFEAS(_RST, !SCLK,  ,  ,  ,  ,  ,  ,  );


--C1_INCFIFO is CPU_SM:u_CPU_SM|INCFIFO
C1_INCFIFO = DFFEAS(M1L0, SCLK,  ,  ,  ,  ,  ,  ,  );


--H1_COUNT[2] is fifo:int_fifo|fifo__full_empty_ctr:u_full_empty_ctr|COUNT[2]
H1_COUNT[2] = DFFEAS(H1L0, H1_clk, _RST,  ,  ,  ,  ,  ,  );


--H1_COUNT[1] is fifo:int_fifo|fifo__full_empty_ctr:u_full_empty_ctr|COUNT[1]
H1_COUNT[1] = DFFEAS(H1L0, H1_clk, _RST,  ,  ,  ,  ,  ,  );


--H1L0 is fifo:int_fifo|fifo__full_empty_ctr:u_full_empty_ctr|FIFOFULL~0
H1L0 = (C1_INCFIFO & (H1_COUNT[2] & (H1_COUNT[1] & H1_COUNT[0])));


--C1_DECFIFO is CPU_SM:u_CPU_SM|DECFIFO
C1_DECFIFO = DFFEAS(M1L0, SCLK,  ,  ,  ,  ,  ,  ,  );


--H1L0 is fifo:int_fifo|fifo__full_empty_ctr:u_full_empty_ctr|FIFOFULL~1
H1L0 = (C1_DECFIFO & ((H1_COUNT[2]) # ((H1_COUNT[1]) # (H1_COUNT[0]))));


--H1L0 is fifo:int_fifo|fifo__full_empty_ctr:u_full_empty_ctr|FIFOFULL~2
H1L0 = (H1L0 & (C1_INCFIFO)) # (!H1L0 & (H1_FIFOFULL & ((C1_INCFIFO) # (!H1L0))));


--A1L0 is aCYCLEDONE_~0
A1L0 = (A1L0 & _STERM);


--A1L0 is aCYCLEDONE_~1
A1L0 = (((!A1L0) # (!A1L0)) # (!A1L0)) # (!A1L0);


--AB1_h_0C is registers:u_registers|addr_decoder:u_addr_decoder|h_0C
AB1_h_0C = (ADDR[2] & (ADDR[3] & AB1L0));


--G1L0 is fifo:int_fifo|fifo_byte_ptr:u_byte_ptr|MUXZ~0
G1L0 = (AB1_h_0C & (!A1L0)) # (!AB1_h_0C & ((G1_BO1 $ (!G1_BO0))));


--C1_STOPFLUSH is CPU_SM:u_CPU_SM|STOPFLUSH
C1_STOPFLUSH = DFFEAS(M1_nSTOPFLUSH_d, SCLK,  ,  ,  ,  ,  ,  ,  );


--F1L0 is registers:u_registers|CLR_FLUSHFIFO~0
F1L0 = (C1_STOPFLUSH) # (!_RST);


--H1L0 is fifo:int_fifo|fifo__full_empty_ctr:u_full_empty_ctr|FIFOEMPTY~0
H1L0 = (C1_DECFIFO & (!H1_COUNT[1] & !H1_COUNT[0]));


--H1L0 is fifo:int_fifo|fifo__full_empty_ctr:u_full_empty_ctr|FIFOEMPTY~1
H1L0 = (!C1_INCFIFO & (((H1L0 & !H1_COUNT[2])) # (!H1_FIFOEMPTY)));


--H1L0 is fifo:int_fifo|fifo__full_empty_ctr:u_full_empty_ctr|FIFOEMPTY~2
H1L0 = (H1_COUNT[1] & H1_COUNT[0]);


--H1L0 is fifo:int_fifo|fifo__full_empty_ctr:u_full_empty_ctr|FIFOEMPTY~3
H1L0 = (!H1L0 & (((H1_FIFOEMPTY) # (!H1L0)) # (!H1_COUNT[2])));


--BB1_CNTR_O[8] is registers:u_registers|registers_cntr:u_registers_cntr|CNTR_O[8]
BB1_CNTR_O[8] = DFFEAS(VCC, AB1_ST_DMA, !BB1L0,  ,  ,  ,  ,  ,  );


--DREQ_ is DREQ_
DREQ_ = (_DREQ) # (!BB1_CNTR_O[8]);


--U1L0 is SCSI_SM:u_SCSI_SM|scsi_sm_outputs:u_scsi_sm_outputs|NEXT_STATE[4]~0
U1L0 = (T1L0 & ((T1L0) # ((T1L0 & !D1_STATE[2])))) # (!T1L0 & (((T1L0 & !D1_STATE[2]))));


--U1L0 is SCSI_SM:u_SCSI_SM|scsi_sm_outputs:u_scsi_sm_outputs|NEXT_STATE[4]~1
U1L0 = (D1_STATE[2] & (((!D1_STATE[3])))) # (!D1_STATE[2] & (!D1_STATE[1] & (D1_STATE[3] & !A1L0)));


--U1L0 is SCSI_SM:u_SCSI_SM|scsi_sm_outputs:u_scsi_sm_outputs|NEXT_STATE[4]~2
U1L0 = (D1_STATE[0]) # ((T1L0) # (U1L0));


--U1L0 is SCSI_SM:u_SCSI_SM|scsi_sm_outputs:u_scsi_sm_outputs|NEXT_STATE[1]~3
U1L0 = (!T1L0 & ((D1_STATE[4]) # ((!T1L0) # (!D1_STATE[1]))));


--D1_CDSACK_ is SCSI_SM:u_SCSI_SM|CDSACK_
D1_CDSACK_ = DFFEAS(D1L0, SCLK, D1_CRESET_,  ,  ,  ,  ,  ,  );


--U1L0 is SCSI_SM:u_SCSI_SM|scsi_sm_outputs:u_scsi_sm_outputs|NEXT_STATE[4]~4
U1L0 = (U1L0 & ((D1_CDSACK_) # ((!D1_STATE[0]) # (!D1_STATE[3]))));


--U1L0 is SCSI_SM:u_SCSI_SM|scsi_sm_outputs:u_scsi_sm_outputs|NEXT_STATE[4]~5
U1L0 = (U1L0) # (((U1L0 & !D1_STATE[4])) # (!U1L0));


--AB1_WDREGREQ is registers:u_registers|addr_decoder:u_addr_decoder|WDREGREQ
AB1_WDREGREQ = (ADDR[6] & (!_CS & !A1L0));


--U1L0 is SCSI_SM:u_SCSI_SM|scsi_sm_outputs:u_scsi_sm_outputs|NEXT_STATE[3]~6
U1L0 = ((D1_CCPUREQ & (T1L0 & T1L0))) # (!U1L0);


--T1L0 is SCSI_SM:u_SCSI_SM|scsi_sm_inputs:u_scsi_sm_inputs|E22~0
T1L0 = (D1_STATE[1] & (D1_STATE[2] & !D1_STATE[3]));


--U1L0 is SCSI_SM:u_SCSI_SM|scsi_sm_outputs:u_scsi_sm_outputs|NEXT_STATE[3]~7
U1L0 = (T1L0) # (((T1L0 & T1L0)) # (!U1L0));


--U1L0 is SCSI_SM:u_SCSI_SM|scsi_sm_outputs:u_scsi_sm_outputs|NEXT_STATE[3]~8
U1L0 = (A1L0 & (((D1_STATE[1] & !D1_CDSACK_)) # (!D1_STATE[2]))) # (!A1L0 & (D1_STATE[1] & ((!D1_CDSACK_))));


--U1L0 is SCSI_SM:u_SCSI_SM|scsi_sm_outputs:u_scsi_sm_outputs|NEXT_STATE[3]~9
U1L0 = (T1L0) # ((D1_STATE[3] & ((D1_STATE[0]) # (U1L0))));


--U1L0 is SCSI_SM:u_SCSI_SM|scsi_sm_outputs:u_scsi_sm_outputs|NEXT_STATE[3]~10
U1L0 = (U1L0) # ((D1_STATE[4] & (U1L0)) # (!D1_STATE[4] & ((U1L0))));


--U1L0 is SCSI_SM:u_SCSI_SM|scsi_sm_outputs:u_scsi_sm_outputs|NEXT_STATE[1]~11
U1L0 = (D1_STATE[3] & (D1_STATE[1] & ((D1_STATE[4]) # (!D1_CDSACK_))));


--U1L0 is SCSI_SM:u_SCSI_SM|scsi_sm_outputs:u_scsi_sm_outputs|NEXT_STATE[1]~12
U1L0 = (T1L0) # ((T1L0) # ((U1L0) # (!U1L0)));


--T1L0 is SCSI_SM:u_SCSI_SM|scsi_sm_inputs:u_scsi_sm_inputs|E24~0
T1L0 = (D1_STATE[1] & D1_STATE[0]);


--U1L0 is SCSI_SM:u_SCSI_SM|scsi_sm_outputs:u_scsi_sm_outputs|NEXT_STATE[1]~13
U1L0 = (T1L0 & ((D1_STATE[3] & (A1L0)) # (!D1_STATE[3] & ((D1_STATE[1])))));


--U1L0 is SCSI_SM:u_SCSI_SM|scsi_sm_outputs:u_scsi_sm_outputs|NEXT_STATE[1]~14
U1L0 = (U1L0) # ((!D1_STATE[4] & ((T1L0) # (U1L0))));


--U1L0 is SCSI_SM:u_SCSI_SM|scsi_sm_outputs:u_scsi_sm_outputs|NEXT_STATE[0]~15
U1L0 = (D1_STATE[0] & ((!D1_CDSACK_) # (!D1_STATE[4])));


--U1L0 is SCSI_SM:u_SCSI_SM|scsi_sm_outputs:u_scsi_sm_outputs|NEXT_STATE[0]~16
U1L0 = (!U1L0 & (((!D1_STATE[2]) # (!D1_STATE[1])) # (!D1_STATE[4])));


--U1L0 is SCSI_SM:u_SCSI_SM|scsi_sm_outputs:u_scsi_sm_outputs|NEXT_STATE[0]~17
U1L0 = (D1_STATE[3] & !U1L0);


--U1L0 is SCSI_SM:u_SCSI_SM|scsi_sm_outputs:u_scsi_sm_outputs|NEXT_STATE[0]~18
U1L0 = (T1L0) # ((T1L0) # ((U1L0) # (U1L0)));


--D1_RDFIFO_d is SCSI_SM:u_SCSI_SM|RDFIFO_d
D1_RDFIFO_d = DFFEAS(T1L0, SCLK,  ,  ,  ,  ,  ,  ,  );


--D1L0 is SCSI_SM:u_SCSI_SM|RDRST_~0
D1L0 = (C1_DECFIFO) # (!_RST);


--U1L0 is SCSI_SM:u_SCSI_SM|scsi_sm_outputs:u_scsi_sm_outputs|NEXT_STATE[2]~19
U1L0 = (T1L0 & ((D1_STATE[1]) # ((D1_STATE[4] & !D1_STATE[0]))));


--U1L0 is SCSI_SM:u_SCSI_SM|scsi_sm_outputs:u_scsi_sm_outputs|NEXT_STATE[2]~20
U1L0 = ((D1_STATE[1] & (!D1_STATE[4] & !D1_CDSACK_))) # (!D1_STATE[3]);


--U1L0 is SCSI_SM:u_SCSI_SM|scsi_sm_outputs:u_scsi_sm_outputs|NEXT_STATE[2]~21
U1L0 = (U1L0) # ((U1L0) # ((D1_STATE[2] & U1L0)));


--D1_RIFIFO_d is SCSI_SM:u_SCSI_SM|RIFIFO_d
D1_RIFIFO_d = DFFEAS(T1L0, SCLK,  ,  ,  ,  ,  ,  ,  );


--D1L0 is SCSI_SM:u_SCSI_SM|RIRST_~0
D1L0 = (C1_INCFIFO) # (!_RST);


--AB1_CONTR_WR is registers:u_registers|addr_decoder:u_addr_decoder|CONTR_WR
AB1_CONTR_WR = LCELL((ADDR[3] & (AB1L0 & (!A1L0 & !ADDR[2]))));


--AS_O_ is AS_O_
AS_O_ = DFFEAS(C1_PAS, !SCLK,  ,  ,  ,  ,  ,  ,  );


--C1_SIZE1 is CPU_SM:u_CPU_SM|SIZE1
C1_SIZE1 = DFFEAS(M1L0, SCLK,  ,  ,  ,  ,  ,  ,  );


--DS_O_ is DS_O_
DS_O_ = DFFEAS(C1_PDS, !SCLK,  ,  ,  ,  ,  ,  ,  );


--DB1_REG_DSK_ is registers:u_registers|registers_term:u_registers_term|REG_DSK_
DB1_REG_DSK_ = DFFEAS(VCC, A1L0, !DB1L0,  ,  ,  ,  ,  ,  );


--D1_nLS2CPU is SCSI_SM:u_SCSI_SM|nLS2CPU
D1_nLS2CPU = DFFEAS(VCC, U1_SET_DSACK, !A1L0,  ,  ,  ,  ,  ,  );


--A1L0 is _DSACK~4
A1L0 = (!DB1_REG_DSK_ & !D1_nLS2CPU);


--W1_LD_LATCH[0] is datapath:u_datapath|datapath_output:u_datapath_output|LD_LATCH[0]
W1_LD_LATCH[0] = DFFEAS(B1L0, C1_PAS,  ,  ,  ,  ,  ,  ,  );


--C1_F2CPUL is CPU_SM:u_CPU_SM|F2CPUL
C1_F2CPUL = DFFEAS(M1L0, SCLK,  ,  ,  ,  ,  ,  ,  );


--AB1L0 is registers:u_registers|addr_decoder:u_addr_decoder|CONTR_RD_~0
AB1L0 = (A1L0 & (ADDR[3] & (AB1L0 & !ADDR[2])));


--W1L0 is datapath:u_datapath|datapath_output:u_datapath_output|DATA[5]~32
W1L0 = (AB1_ISTR_RD_ & !AB1L0);


--CB1_FE is registers:u_registers|registers_istr:u_registers_istr|FE
CB1_FE = DFFEAS(H1_FIFOEMPTY, AB1_ISTR_RD_, _RST,  ,  ,  ,  ,  ,  );


--W1L0 is datapath:u_datapath|datapath_output:u_datapath_output|DATA[0]~33
W1L0 = (C1_F2CPUL & (W1_LD_LATCH[0])) # (!C1_F2CPUL & (((W1L0 & !CB1_FE))));


--D1_S2CPU_o is SCSI_SM:u_SCSI_SM|S2CPU_o
D1_S2CPU_o = DFFEAS(U1L0, SCLK,  ,  ,  ,  ,  ,  ,  );


--W1L0 is datapath:u_datapath|datapath_output:u_datapath_output|DATA[0]~34
W1L0 = (W1L0 & !D1_S2CPU_o);


--W1L0 is datapath:u_datapath|datapath_output:u_datapath_output|DATA[15]~35
W1L0 = (D1_S2CPU_o) # ((C1_BGACK & BB1_CNTR_O[1]));


--W1_LD_LATCH[1] is datapath:u_datapath|datapath_output:u_datapath_output|LD_LATCH[1]
W1_LD_LATCH[1] = DFFEAS(B1L0, C1_PAS,  ,  ,  ,  ,  ,  ,  );


--CB1_FF is registers:u_registers|registers_istr:u_registers_istr|FF
CB1_FF = DFFEAS(H1_FIFOFULL, AB1_ISTR_RD_, _RST,  ,  ,  ,  ,  ,  );


--W1L0 is datapath:u_datapath|datapath_output:u_datapath_output|DATA[1]~36
W1L0 = (AB1L0 & (BB1_CNTR_O[1])) # (!AB1L0 & (((AB1_ISTR_RD_ & CB1_FF))));


--W1L0 is datapath:u_datapath|datapath_output:u_datapath_output|DATA[1]~37
W1L0 = (!D1_S2CPU_o & ((C1_F2CPUL & (W1_LD_LATCH[1])) # (!C1_F2CPUL & ((W1L0)))));


--W1_LD_LATCH[2] is datapath:u_datapath|datapath_output:u_datapath_output|LD_LATCH[2]
W1_LD_LATCH[2] = DFFEAS(B1L0, C1_PAS,  ,  ,  ,  ,  ,  ,  );


--W1L0 is datapath:u_datapath|datapath_output:u_datapath_output|DATA[2]~38
W1L0 = (A1L0 & (ADDR[2] & (!ADDR[3] & !AB1_ISTR_RD_)));


--W1L0 is datapath:u_datapath|datapath_output:u_datapath_output|DATA[2]~39
W1L0 = (AB1L0 & ((W1L0) # ((BB1_CNTR_O[2] & AB1L0)))) # (!AB1L0 & (BB1_CNTR_O[2] & (AB1L0)));


--W1L0 is datapath:u_datapath|datapath_output:u_datapath_output|DATA[2]~40
W1L0 = (!D1_S2CPU_o & ((C1_F2CPUL & (W1_LD_LATCH[2])) # (!C1_F2CPUL & ((W1L0)))));


--W1_LD_LATCH[3] is datapath:u_datapath|datapath_output:u_datapath_output|LD_LATCH[3]
W1_LD_LATCH[3] = DFFEAS(B1L0, C1_PAS,  ,  ,  ,  ,  ,  ,  );


--W1L0 is datapath:u_datapath|datapath_output:u_datapath_output|DATA[3]~41
W1L0 = (C1_F2CPUL & (W1_LD_LATCH[3] & !D1_S2CPU_o));


--W1_LD_LATCH[4] is datapath:u_datapath|datapath_output:u_datapath_output|LD_LATCH[4]
W1_LD_LATCH[4] = DFFEAS(B1L0, C1_PAS,  ,  ,  ,  ,  ,  ,  );


--CB1_INT_P is registers:u_registers|registers_istr:u_registers_istr|INT_P
CB1_INT_P = DFFEAS(CB1_INT, AB1_ISTR_RD_, !CB1L0,  ,  ,  ,  ,  ,  );


--W1L0 is datapath:u_datapath|datapath_output:u_datapath_output|DATA[4]~42
W1L0 = (AB1L0 & (BB1_CNTR_O[4])) # (!AB1L0 & (((AB1_ISTR_RD_ & CB1_INT_P))));


--W1L0 is datapath:u_datapath|datapath_output:u_datapath_output|DATA[4]~43
W1L0 = (!D1_S2CPU_o & ((C1_F2CPUL & (W1_LD_LATCH[4])) # (!C1_F2CPUL & ((W1L0)))));


--CB1_INT_F is registers:u_registers|registers_istr:u_registers_istr|INT_F
CB1_INT_F = DFFEAS(INTA, AB1_ISTR_RD_, !CB1L0,  ,  ,  ,  ,  ,  );


--W1L0 is datapath:u_datapath|datapath_output:u_datapath_output|DATA[5]~44
W1L0 = (W1L0 & (CB1_INT_F & (!D1_S2CPU_o & !C1_F2CPUL)));


--W1_LD_LATCH[5] is datapath:u_datapath|datapath_output:u_datapath_output|LD_LATCH[5]
W1_LD_LATCH[5] = DFFEAS(B1L0, C1_PAS,  ,  ,  ,  ,  ,  ,  );


--W1L0 is datapath:u_datapath|datapath_output:u_datapath_output|DATA[5]~45
W1L0 = (!D1_S2CPU_o & ((W1L0) # ((C1_F2CPUL & W1_LD_LATCH[5]))));


--W1_LD_LATCH[6] is datapath:u_datapath|datapath_output:u_datapath_output|LD_LATCH[6]
W1_LD_LATCH[6] = DFFEAS(B1L0, C1_PAS,  ,  ,  ,  ,  ,  ,  );


--W1L0 is datapath:u_datapath|datapath_output:u_datapath_output|DATA[6]~46
W1L0 = (!D1_S2CPU_o & ((W1L0) # ((C1_F2CPUL & W1_LD_LATCH[6]))));


--W1_LD_LATCH[7] is datapath:u_datapath|datapath_output:u_datapath_output|LD_LATCH[7]
W1_LD_LATCH[7] = DFFEAS(B1L0, C1_PAS,  ,  ,  ,  ,  ,  ,  );


--W1L0 is datapath:u_datapath|datapath_output:u_datapath_output|DATA[7]~47
W1L0 = (!D1_S2CPU_o & ((W1L0) # ((C1_F2CPUL & W1_LD_LATCH[7]))));


--X1_SCSI_DATA_LATCHED[0] is datapath:u_datapath|datapath_scsi:u_datapath_scsi|SCSI_DATA_LATCHED[0]
X1_SCSI_DATA_LATCHED[0] = DFFEAS(X1L0, !D1_nLS2CPU,  ,  ,  ,  ,  ,  ,  );


--W1_LD_LATCH[8] is datapath:u_datapath|datapath_output:u_datapath_output|LD_LATCH[8]
W1_LD_LATCH[8] = DFFEAS(B1L0, C1_PAS,  ,  ,  ,  ,  ,  ,  );


--W1L0 is datapath:u_datapath|datapath_output:u_datapath_output|DATA[8]~48
W1L0 = (C1_F2CPUL & (W1_LD_LATCH[8])) # (!C1_F2CPUL & (((BB1_CNTR_O[8] & AB1L0))));


--W1L0 is datapath:u_datapath|datapath_output:u_datapath_output|DATA[8]~49
W1L0 = (D1_S2CPU_o & (X1_SCSI_DATA_LATCHED[0])) # (!D1_S2CPU_o & ((W1L0)));


--X1_SCSI_DATA_LATCHED[1] is datapath:u_datapath|datapath_scsi:u_datapath_scsi|SCSI_DATA_LATCHED[1]
X1_SCSI_DATA_LATCHED[1] = DFFEAS(X1L0, !D1_nLS2CPU,  ,  ,  ,  ,  ,  ,  );


--W1_LD_LATCH[9] is datapath:u_datapath|datapath_output:u_datapath_output|LD_LATCH[9]
W1_LD_LATCH[9] = DFFEAS(B1L0, C1_PAS,  ,  ,  ,  ,  ,  ,  );


--W1L0 is datapath:u_datapath|datapath_output:u_datapath_output|DATA[9]~50
W1L0 = (D1_S2CPU_o & (X1_SCSI_DATA_LATCHED[1])) # (!D1_S2CPU_o & (((C1_F2CPUL & W1_LD_LATCH[9]))));


--X1_SCSI_DATA_LATCHED[2] is datapath:u_datapath|datapath_scsi:u_datapath_scsi|SCSI_DATA_LATCHED[2]
X1_SCSI_DATA_LATCHED[2] = DFFEAS(X1L0, !D1_nLS2CPU,  ,  ,  ,  ,  ,  ,  );


--W1_LD_LATCH[10] is datapath:u_datapath|datapath_output:u_datapath_output|LD_LATCH[10]
W1_LD_LATCH[10] = DFFEAS(B1L0, C1_PAS,  ,  ,  ,  ,  ,  ,  );


--W1L0 is datapath:u_datapath|datapath_output:u_datapath_output|DATA[10]~51
W1L0 = (D1_S2CPU_o & (X1_SCSI_DATA_LATCHED[2])) # (!D1_S2CPU_o & (((C1_F2CPUL & W1_LD_LATCH[10]))));


--X1_SCSI_DATA_LATCHED[3] is datapath:u_datapath|datapath_scsi:u_datapath_scsi|SCSI_DATA_LATCHED[3]
X1_SCSI_DATA_LATCHED[3] = DFFEAS(X1L0, !D1_nLS2CPU,  ,  ,  ,  ,  ,  ,  );


--W1_LD_LATCH[11] is datapath:u_datapath|datapath_output:u_datapath_output|LD_LATCH[11]
W1_LD_LATCH[11] = DFFEAS(B1L0, C1_PAS,  ,  ,  ,  ,  ,  ,  );


--W1L0 is datapath:u_datapath|datapath_output:u_datapath_output|DATA[11]~52
W1L0 = (D1_S2CPU_o & (X1_SCSI_DATA_LATCHED[3])) # (!D1_S2CPU_o & (((C1_F2CPUL & W1_LD_LATCH[11]))));


--X1_SCSI_DATA_LATCHED[4] is datapath:u_datapath|datapath_scsi:u_datapath_scsi|SCSI_DATA_LATCHED[4]
X1_SCSI_DATA_LATCHED[4] = DFFEAS(X1L0, !D1_nLS2CPU,  ,  ,  ,  ,  ,  ,  );


--W1_LD_LATCH[12] is datapath:u_datapath|datapath_output:u_datapath_output|LD_LATCH[12]
W1_LD_LATCH[12] = DFFEAS(B1L0, C1_PAS,  ,  ,  ,  ,  ,  ,  );


--W1L0 is datapath:u_datapath|datapath_output:u_datapath_output|DATA[12]~53
W1L0 = (D1_S2CPU_o & (X1_SCSI_DATA_LATCHED[4])) # (!D1_S2CPU_o & (((C1_F2CPUL & W1_LD_LATCH[12]))));


--X1_SCSI_DATA_LATCHED[5] is datapath:u_datapath|datapath_scsi:u_datapath_scsi|SCSI_DATA_LATCHED[5]
X1_SCSI_DATA_LATCHED[5] = DFFEAS(X1L0, !D1_nLS2CPU,  ,  ,  ,  ,  ,  ,  );


--W1_LD_LATCH[13] is datapath:u_datapath|datapath_output:u_datapath_output|LD_LATCH[13]
W1_LD_LATCH[13] = DFFEAS(B1L0, C1_PAS,  ,  ,  ,  ,  ,  ,  );


--W1L0 is datapath:u_datapath|datapath_output:u_datapath_output|DATA[13]~54
W1L0 = (D1_S2CPU_o & (X1_SCSI_DATA_LATCHED[5])) # (!D1_S2CPU_o & (((C1_F2CPUL & W1_LD_LATCH[13]))));


--X1_SCSI_DATA_LATCHED[6] is datapath:u_datapath|datapath_scsi:u_datapath_scsi|SCSI_DATA_LATCHED[6]
X1_SCSI_DATA_LATCHED[6] = DFFEAS(X1L0, !D1_nLS2CPU,  ,  ,  ,  ,  ,  ,  );


--W1_LD_LATCH[14] is datapath:u_datapath|datapath_output:u_datapath_output|LD_LATCH[14]
W1_LD_LATCH[14] = DFFEAS(B1L0, C1_PAS,  ,  ,  ,  ,  ,  ,  );


--W1L0 is datapath:u_datapath|datapath_output:u_datapath_output|DATA[14]~55
W1L0 = (D1_S2CPU_o & (X1_SCSI_DATA_LATCHED[6])) # (!D1_S2CPU_o & (((C1_F2CPUL & W1_LD_LATCH[14]))));


--X1_SCSI_DATA_LATCHED[7] is datapath:u_datapath|datapath_scsi:u_datapath_scsi|SCSI_DATA_LATCHED[7]
X1_SCSI_DATA_LATCHED[7] = DFFEAS(X1L0, !D1_nLS2CPU,  ,  ,  ,  ,  ,  ,  );


--W1_LD_LATCH[15] is datapath:u_datapath|datapath_output:u_datapath_output|LD_LATCH[15]
W1_LD_LATCH[15] = DFFEAS(B1L0, C1_PAS,  ,  ,  ,  ,  ,  ,  );


--W1L0 is datapath:u_datapath|datapath_output:u_datapath_output|DATA[15]~56
W1L0 = (D1_S2CPU_o & (X1_SCSI_DATA_LATCHED[7])) # (!D1_S2CPU_o & (((C1_F2CPUL & W1_LD_LATCH[15]))));


--W1_UD_LATCH[0] is datapath:u_datapath|datapath_output:u_datapath_output|UD_LATCH[0]
W1_UD_LATCH[0] = DFFEAS(B1L0, C1_PAS,  ,  ,  ,  ,  ,  ,  );


--C1_BRIDGEOUT is CPU_SM:u_CPU_SM|BRIDGEOUT
C1_BRIDGEOUT = DFFEAS(M1L0, SCLK,  ,  ,  ,  ,  ,  ,  );


--C1_F2CPUH is CPU_SM:u_CPU_SM|F2CPUH
C1_F2CPUH = DFFEAS(M1L0, SCLK,  ,  ,  ,  ,  ,  ,  );


--W1L0 is datapath:u_datapath|datapath_output:u_datapath_output|DATA[16]~57
W1L0 = (C1_F2CPUH & (W1_UD_LATCH[0])) # (!C1_F2CPUH & (((W1_LD_LATCH[0] & C1_BRIDGEOUT))));


--W1L0 is datapath:u_datapath|datapath_output:u_datapath_output|DATA[16]~58
W1L0 = (W1L0 & !D1_S2CPU_o);


--W1_UD_LATCH[1] is datapath:u_datapath|datapath_output:u_datapath_output|UD_LATCH[1]
W1_UD_LATCH[1] = DFFEAS(B1L0, C1_PAS,  ,  ,  ,  ,  ,  ,  );


--W1L0 is datapath:u_datapath|datapath_output:u_datapath_output|DATA[17]~59
W1L0 = (C1_F2CPUH & (W1_UD_LATCH[1])) # (!C1_F2CPUH & (((W1_LD_LATCH[1] & C1_BRIDGEOUT))));


--W1L0 is datapath:u_datapath|datapath_output:u_datapath_output|DATA[17]~60
W1L0 = (W1L0 & !D1_S2CPU_o);


--W1_UD_LATCH[2] is datapath:u_datapath|datapath_output:u_datapath_output|UD_LATCH[2]
W1_UD_LATCH[2] = DFFEAS(B1L0, C1_PAS,  ,  ,  ,  ,  ,  ,  );


--W1L0 is datapath:u_datapath|datapath_output:u_datapath_output|DATA[18]~61
W1L0 = (C1_F2CPUH & (W1_UD_LATCH[2])) # (!C1_F2CPUH & (((W1_LD_LATCH[2] & C1_BRIDGEOUT))));


--W1L0 is datapath:u_datapath|datapath_output:u_datapath_output|DATA[18]~62
W1L0 = (W1L0 & !D1_S2CPU_o);


--W1_UD_LATCH[3] is datapath:u_datapath|datapath_output:u_datapath_output|UD_LATCH[3]
W1_UD_LATCH[3] = DFFEAS(B1L0, C1_PAS,  ,  ,  ,  ,  ,  ,  );


--W1L0 is datapath:u_datapath|datapath_output:u_datapath_output|DATA[19]~63
W1L0 = (C1_F2CPUH & (W1_UD_LATCH[3])) # (!C1_F2CPUH & (((W1_LD_LATCH[3] & C1_BRIDGEOUT))));


--W1L0 is datapath:u_datapath|datapath_output:u_datapath_output|DATA[19]~64
W1L0 = (W1L0 & !D1_S2CPU_o);


--W1_UD_LATCH[4] is datapath:u_datapath|datapath_output:u_datapath_output|UD_LATCH[4]
W1_UD_LATCH[4] = DFFEAS(B1L0, C1_PAS,  ,  ,  ,  ,  ,  ,  );


--W1L0 is datapath:u_datapath|datapath_output:u_datapath_output|DATA[20]~65
W1L0 = (C1_F2CPUH & (W1_UD_LATCH[4])) # (!C1_F2CPUH & (((W1_LD_LATCH[4] & C1_BRIDGEOUT))));


--W1L0 is datapath:u_datapath|datapath_output:u_datapath_output|DATA[20]~66
W1L0 = (W1L0 & !D1_S2CPU_o);


--W1_UD_LATCH[5] is datapath:u_datapath|datapath_output:u_datapath_output|UD_LATCH[5]
W1_UD_LATCH[5] = DFFEAS(B1L0, C1_PAS,  ,  ,  ,  ,  ,  ,  );


--W1L0 is datapath:u_datapath|datapath_output:u_datapath_output|DATA[21]~67
W1L0 = (C1_F2CPUH & (W1_UD_LATCH[5])) # (!C1_F2CPUH & (((W1_LD_LATCH[5] & C1_BRIDGEOUT))));


--W1L0 is datapath:u_datapath|datapath_output:u_datapath_output|DATA[21]~68
W1L0 = (W1L0 & !D1_S2CPU_o);


--W1_UD_LATCH[6] is datapath:u_datapath|datapath_output:u_datapath_output|UD_LATCH[6]
W1_UD_LATCH[6] = DFFEAS(B1L0, C1_PAS,  ,  ,  ,  ,  ,  ,  );


--W1L0 is datapath:u_datapath|datapath_output:u_datapath_output|DATA[22]~69
W1L0 = (C1_F2CPUH & (W1_UD_LATCH[6])) # (!C1_F2CPUH & (((W1_LD_LATCH[6] & C1_BRIDGEOUT))));


--W1L0 is datapath:u_datapath|datapath_output:u_datapath_output|DATA[22]~70
W1L0 = (W1L0 & !D1_S2CPU_o);


--W1_UD_LATCH[7] is datapath:u_datapath|datapath_output:u_datapath_output|UD_LATCH[7]
W1_UD_LATCH[7] = DFFEAS(B1L0, C1_PAS,  ,  ,  ,  ,  ,  ,  );


--W1L0 is datapath:u_datapath|datapath_output:u_datapath_output|DATA[23]~71
W1L0 = (C1_F2CPUH & (W1_UD_LATCH[7])) # (!C1_F2CPUH & (((W1_LD_LATCH[7] & C1_BRIDGEOUT))));


--W1L0 is datapath:u_datapath|datapath_output:u_datapath_output|DATA[23]~72
W1L0 = (W1L0 & !D1_S2CPU_o);


--W1_UD_LATCH[8] is datapath:u_datapath|datapath_output:u_datapath_output|UD_LATCH[8]
W1_UD_LATCH[8] = DFFEAS(B1L0, C1_PAS,  ,  ,  ,  ,  ,  ,  );


--W1L0 is datapath:u_datapath|datapath_output:u_datapath_output|DATA[24]~73
W1L0 = (C1_F2CPUH & (W1_UD_LATCH[8])) # (!C1_F2CPUH & (((W1_LD_LATCH[8] & C1_BRIDGEOUT))));


--W1L0 is datapath:u_datapath|datapath_output:u_datapath_output|DATA[24]~74
W1L0 = (D1_S2CPU_o & (X1_SCSI_DATA_LATCHED[0])) # (!D1_S2CPU_o & ((W1L0)));


--W1L0 is datapath:u_datapath|datapath_output:u_datapath_output|DATA[25]~75
W1L0 = (D1_S2CPU_o) # ((C1_BRIDGEOUT & !C1_F2CPUH));


--W1L0 is datapath:u_datapath|datapath_output:u_datapath_output|DATA[25]~76
W1L0 = (D1_S2CPU_o) # (C1_F2CPUH);


--W1L0 is datapath:u_datapath|datapath_output:u_datapath_output|DATA[25]~77
W1L0 = (W1L0 & ((W1L0 & (X1_SCSI_DATA_LATCHED[1])) # (!W1L0 & ((W1_LD_LATCH[9])))));


--W1_UD_LATCH[9] is datapath:u_datapath|datapath_output:u_datapath_output|UD_LATCH[9]
W1_UD_LATCH[9] = DFFEAS(B1L0, C1_PAS,  ,  ,  ,  ,  ,  ,  );


--W1L0 is datapath:u_datapath|datapath_output:u_datapath_output|DATA[25]~78
W1L0 = (W1L0) # ((C1_F2CPUH & (W1_UD_LATCH[9] & !D1_S2CPU_o)));


--W1L0 is datapath:u_datapath|datapath_output:u_datapath_output|DATA[26]~79
W1L0 = (W1L0 & ((W1L0 & (X1_SCSI_DATA_LATCHED[2])) # (!W1L0 & ((W1_LD_LATCH[10])))));


--W1_UD_LATCH[10] is datapath:u_datapath|datapath_output:u_datapath_output|UD_LATCH[10]
W1_UD_LATCH[10] = DFFEAS(B1L0, C1_PAS,  ,  ,  ,  ,  ,  ,  );


--W1L0 is datapath:u_datapath|datapath_output:u_datapath_output|DATA[26]~80
W1L0 = (W1L0) # ((C1_F2CPUH & (W1_UD_LATCH[10] & !D1_S2CPU_o)));


--W1L0 is datapath:u_datapath|datapath_output:u_datapath_output|DATA[27]~81
W1L0 = (W1L0 & ((W1L0 & (X1_SCSI_DATA_LATCHED[3])) # (!W1L0 & ((W1_LD_LATCH[11])))));


--W1_UD_LATCH[11] is datapath:u_datapath|datapath_output:u_datapath_output|UD_LATCH[11]
W1_UD_LATCH[11] = DFFEAS(B1L0, C1_PAS,  ,  ,  ,  ,  ,  ,  );


--W1L0 is datapath:u_datapath|datapath_output:u_datapath_output|DATA[27]~82
W1L0 = (W1L0) # ((C1_F2CPUH & (W1_UD_LATCH[11] & !D1_S2CPU_o)));


--W1L0 is datapath:u_datapath|datapath_output:u_datapath_output|DATA[28]~83
W1L0 = (W1L0 & ((W1L0 & (X1_SCSI_DATA_LATCHED[4])) # (!W1L0 & ((W1_LD_LATCH[12])))));


--W1_UD_LATCH[12] is datapath:u_datapath|datapath_output:u_datapath_output|UD_LATCH[12]
W1_UD_LATCH[12] = DFFEAS(B1L0, C1_PAS,  ,  ,  ,  ,  ,  ,  );


--W1L0 is datapath:u_datapath|datapath_output:u_datapath_output|DATA[28]~84
W1L0 = (W1L0) # ((C1_F2CPUH & (W1_UD_LATCH[12] & !D1_S2CPU_o)));


--W1L0 is datapath:u_datapath|datapath_output:u_datapath_output|DATA[29]~85
W1L0 = (W1L0 & ((W1L0 & (X1_SCSI_DATA_LATCHED[5])) # (!W1L0 & ((W1_LD_LATCH[13])))));


--W1_UD_LATCH[13] is datapath:u_datapath|datapath_output:u_datapath_output|UD_LATCH[13]
W1_UD_LATCH[13] = DFFEAS(B1L0, C1_PAS,  ,  ,  ,  ,  ,  ,  );


--W1L0 is datapath:u_datapath|datapath_output:u_datapath_output|DATA[29]~86
W1L0 = (W1L0) # ((C1_F2CPUH & (W1_UD_LATCH[13] & !D1_S2CPU_o)));


--W1L0 is datapath:u_datapath|datapath_output:u_datapath_output|DATA[30]~87
W1L0 = (W1L0 & ((W1L0 & (X1_SCSI_DATA_LATCHED[6])) # (!W1L0 & ((W1_LD_LATCH[14])))));


--W1_UD_LATCH[14] is datapath:u_datapath|datapath_output:u_datapath_output|UD_LATCH[14]
W1_UD_LATCH[14] = DFFEAS(B1L0, C1_PAS,  ,  ,  ,  ,  ,  ,  );


--W1L0 is datapath:u_datapath|datapath_output:u_datapath_output|DATA[30]~88
W1L0 = (W1L0) # ((C1_F2CPUH & (W1_UD_LATCH[14] & !D1_S2CPU_o)));


--W1L0 is datapath:u_datapath|datapath_output:u_datapath_output|DATA[31]~89
W1L0 = (W1L0 & ((W1L0 & (X1_SCSI_DATA_LATCHED[7])) # (!W1L0 & ((W1_LD_LATCH[15])))));


--W1_UD_LATCH[15] is datapath:u_datapath|datapath_output:u_datapath_output|UD_LATCH[15]
W1_UD_LATCH[15] = DFFEAS(B1L0, C1_PAS,  ,  ,  ,  ,  ,  ,  );


--W1L0 is datapath:u_datapath|datapath_output:u_datapath_output|DATA[31]~90
W1L0 = (W1L0) # ((C1_F2CPUH & (W1_UD_LATCH[15] & !D1_S2CPU_o)));


--V1_UD_LATCH[0] is datapath:u_datapath|datapath_input:u_datapath_input|UD_LATCH[0]
V1_UD_LATCH[0] = DFFEAS(A1L0, !C1_PDS,  ,  ,  ,  ,  ,  ,  );


--Y1L0 is datapath:u_datapath|datapath_scsi:u_datapath_scsi|datapath_8b_MUX:u_datapath_8b_MUX|Selector0~0
Y1L0 = (ADDR[3] & (A1L0)) # (!ADDR[3] & ((V1_UD_LATCH[0])));


--D1_S2F_o is SCSI_SM:u_SCSI_SM|S2F_o
D1_S2F_o = DFFEAS(U1L0, SCLK,  ,  ,  ,  ,  ,  ,  );


--Y1L0 is datapath:u_datapath|datapath_scsi:u_datapath_scsi|datapath_8b_MUX:u_datapath_8b_MUX|Selector0~1
Y1L0 = (D1_S2F_o & (A1L0)) # (!D1_S2F_o & ((Y1L0)));


--B1_BUFFER[6][16] is fifo:int_fifo|BUFFER[6][16]
B1_BUFFER[6][16] = DFFEAS(E1L0, K1_UMWS,  ,  , B1L0,  ,  ,  ,  );


--J1_COUNT[1] is fifo:int_fifo|fifo_3bit_cntr:u_next_out_cntr|COUNT[1]
J1_COUNT[1] = DFFEAS(J1L0, INCNO, _RST,  ,  ,  ,  ,  ,  );


--B1_BUFFER[5][16] is fifo:int_fifo|BUFFER[5][16]
B1_BUFFER[5][16] = DFFEAS(E1L0, K1_UMWS,  ,  , B1L0,  ,  ,  ,  );


--J1_COUNT[0] is fifo:int_fifo|fifo_3bit_cntr:u_next_out_cntr|COUNT[0]
J1_COUNT[0] = DFFEAS(J1L0, INCNO, _RST,  ,  ,  ,  ,  ,  );


--B1_BUFFER[4][16] is fifo:int_fifo|BUFFER[4][16]
B1_BUFFER[4][16] = DFFEAS(E1L0, K1_UMWS,  ,  , B1L0,  ,  ,  ,  );


--B1L0 is fifo:int_fifo|Mux15~0
B1L0 = (J1_COUNT[1] & (((J1_COUNT[0])))) # (!J1_COUNT[1] & ((J1_COUNT[0] & (B1_BUFFER[5][16])) # (!J1_COUNT[0] & ((B1_BUFFER[4][16])))));


--B1_BUFFER[7][16] is fifo:int_fifo|BUFFER[7][16]
B1_BUFFER[7][16] = DFFEAS(E1L0, K1_UMWS,  ,  , B1L0,  ,  ,  ,  );


--B1L0 is fifo:int_fifo|Mux15~1
B1L0 = (J1_COUNT[1] & ((B1L0 & ((B1_BUFFER[7][16]))) # (!B1L0 & (B1_BUFFER[6][16])))) # (!J1_COUNT[1] & (((B1L0))));


--B1_BUFFER[1][16] is fifo:int_fifo|BUFFER[1][16]
B1_BUFFER[1][16] = DFFEAS(E1L0, K1_UMWS,  ,  , B1L0,  ,  ,  ,  );


--B1_BUFFER[2][16] is fifo:int_fifo|BUFFER[2][16]
B1_BUFFER[2][16] = DFFEAS(E1L0, K1_UMWS,  ,  , B1L0,  ,  ,  ,  );


--B1_BUFFER[0][16] is fifo:int_fifo|BUFFER[0][16]
B1_BUFFER[0][16] = DFFEAS(E1L0, K1_UMWS,  ,  , B1L0,  ,  ,  ,  );


--B1L0 is fifo:int_fifo|Mux15~2
B1L0 = (J1_COUNT[0] & (((J1_COUNT[1])))) # (!J1_COUNT[0] & ((J1_COUNT[1] & (B1_BUFFER[2][16])) # (!J1_COUNT[1] & ((B1_BUFFER[0][16])))));


--B1_BUFFER[3][16] is fifo:int_fifo|BUFFER[3][16]
B1_BUFFER[3][16] = DFFEAS(E1L0, K1_UMWS,  ,  , B1L0,  ,  ,  ,  );


--B1L0 is fifo:int_fifo|Mux15~3
B1L0 = (J1_COUNT[0] & ((B1L0 & ((B1_BUFFER[3][16]))) # (!B1L0 & (B1_BUFFER[1][16])))) # (!J1_COUNT[0] & (((B1L0))));


--J1_COUNT[2] is fifo:int_fifo|fifo_3bit_cntr:u_next_out_cntr|COUNT[2]
J1_COUNT[2] = DFFEAS(J1L0, INCNO, _RST,  ,  ,  ,  ,  ,  );


--B1L0 is fifo:int_fifo|Mux15~4
B1L0 = (J1_COUNT[2] & (B1L0)) # (!J1_COUNT[2] & ((B1L0)));


--D1_F2S_o is SCSI_SM:u_SCSI_SM|F2S_o
D1_F2S_o = DFFEAS(U1L0, SCLK,  ,  ,  ,  ,  ,  ,  );


--Y1L0 is datapath:u_datapath|datapath_scsi:u_datapath_scsi|datapath_8b_MUX:u_datapath_8b_MUX|Selector5~0
Y1L0 = (!D1_F2S_o & (G1_BO1 $ (G1_BO0)));


--B1_BUFFER[6][0] is fifo:int_fifo|BUFFER[6][0]
B1_BUFFER[6][0] = DFFEAS(E1L0, K1_LLWS,  ,  , B1L0,  ,  ,  ,  );


--B1_BUFFER[5][0] is fifo:int_fifo|BUFFER[5][0]
B1_BUFFER[5][0] = DFFEAS(E1L0, K1_LLWS,  ,  , B1L0,  ,  ,  ,  );


--B1_BUFFER[4][0] is fifo:int_fifo|BUFFER[4][0]
B1_BUFFER[4][0] = DFFEAS(E1L0, K1_LLWS,  ,  , B1L0,  ,  ,  ,  );


--B1L0 is fifo:int_fifo|Mux31~0
B1L0 = (J1_COUNT[1] & (((J1_COUNT[0])))) # (!J1_COUNT[1] & ((J1_COUNT[0] & (B1_BUFFER[5][0])) # (!J1_COUNT[0] & ((B1_BUFFER[4][0])))));


--B1_BUFFER[7][0] is fifo:int_fifo|BUFFER[7][0]
B1_BUFFER[7][0] = DFFEAS(E1L0, K1_LLWS,  ,  , B1L0,  ,  ,  ,  );


--B1L0 is fifo:int_fifo|Mux31~1
B1L0 = (J1_COUNT[1] & ((B1L0 & ((B1_BUFFER[7][0]))) # (!B1L0 & (B1_BUFFER[6][0])))) # (!J1_COUNT[1] & (((B1L0))));


--B1_BUFFER[2][0] is fifo:int_fifo|BUFFER[2][0]
B1_BUFFER[2][0] = DFFEAS(E1L0, K1_LLWS,  ,  , B1L0,  ,  ,  ,  );


--B1_BUFFER[1][0] is fifo:int_fifo|BUFFER[1][0]
B1_BUFFER[1][0] = DFFEAS(E1L0, K1_LLWS,  ,  , B1L0,  ,  ,  ,  );


--B1_BUFFER[0][0] is fifo:int_fifo|BUFFER[0][0]
B1_BUFFER[0][0] = DFFEAS(E1L0, K1_LLWS,  ,  , B1L0,  ,  ,  ,  );


--B1L0 is fifo:int_fifo|Mux31~2
B1L0 = (J1_COUNT[1] & (((J1_COUNT[0])))) # (!J1_COUNT[1] & ((J1_COUNT[0] & (B1_BUFFER[1][0])) # (!J1_COUNT[0] & ((B1_BUFFER[0][0])))));


--B1_BUFFER[3][0] is fifo:int_fifo|BUFFER[3][0]
B1_BUFFER[3][0] = DFFEAS(E1L0, K1_LLWS,  ,  , B1L0,  ,  ,  ,  );


--B1L0 is fifo:int_fifo|Mux31~3
B1L0 = (J1_COUNT[1] & ((B1L0 & ((B1_BUFFER[3][0]))) # (!B1L0 & (B1_BUFFER[2][0])))) # (!J1_COUNT[1] & (((B1L0))));


--B1L0 is fifo:int_fifo|Mux31~4
B1L0 = (J1_COUNT[2] & (B1L0)) # (!J1_COUNT[2] & ((B1L0)));


--Y1L0 is datapath:u_datapath|datapath_scsi:u_datapath_scsi|datapath_8b_MUX:u_datapath_8b_MUX|Selector5~1
Y1L0 = (G1_BO0) # (D1_F2S_o);


--B1_BUFFER[6][24] is fifo:int_fifo|BUFFER[6][24]
B1_BUFFER[6][24] = DFFEAS(E1L0, K1_UUWS,  ,  , B1L0,  ,  ,  ,  );


--B1_BUFFER[5][24] is fifo:int_fifo|BUFFER[5][24]
B1_BUFFER[5][24] = DFFEAS(E1L0, K1_UUWS,  ,  , B1L0,  ,  ,  ,  );


--B1_BUFFER[4][24] is fifo:int_fifo|BUFFER[4][24]
B1_BUFFER[4][24] = DFFEAS(E1L0, K1_UUWS,  ,  , B1L0,  ,  ,  ,  );


--B1L0 is fifo:int_fifo|Mux7~0
B1L0 = (J1_COUNT[1] & (((J1_COUNT[0])))) # (!J1_COUNT[1] & ((J1_COUNT[0] & (B1_BUFFER[5][24])) # (!J1_COUNT[0] & ((B1_BUFFER[4][24])))));


--B1_BUFFER[7][24] is fifo:int_fifo|BUFFER[7][24]
B1_BUFFER[7][24] = DFFEAS(E1L0, K1_UUWS,  ,  , B1L0,  ,  ,  ,  );


--B1L0 is fifo:int_fifo|Mux7~1
B1L0 = (J1_COUNT[1] & ((B1L0 & ((B1_BUFFER[7][24]))) # (!B1L0 & (B1_BUFFER[6][24])))) # (!J1_COUNT[1] & (((B1L0))));


--B1_BUFFER[1][24] is fifo:int_fifo|BUFFER[1][24]
B1_BUFFER[1][24] = DFFEAS(E1L0, K1_UUWS,  ,  , B1L0,  ,  ,  ,  );


--B1_BUFFER[2][24] is fifo:int_fifo|BUFFER[2][24]
B1_BUFFER[2][24] = DFFEAS(E1L0, K1_UUWS,  ,  , B1L0,  ,  ,  ,  );


--B1_BUFFER[0][24] is fifo:int_fifo|BUFFER[0][24]
B1_BUFFER[0][24] = DFFEAS(E1L0, K1_UUWS,  ,  , B1L0,  ,  ,  ,  );


--B1L0 is fifo:int_fifo|Mux7~2
B1L0 = (J1_COUNT[0] & (((J1_COUNT[1])))) # (!J1_COUNT[0] & ((J1_COUNT[1] & (B1_BUFFER[2][24])) # (!J1_COUNT[1] & ((B1_BUFFER[0][24])))));


--B1_BUFFER[3][24] is fifo:int_fifo|BUFFER[3][24]
B1_BUFFER[3][24] = DFFEAS(E1L0, K1_UUWS,  ,  , B1L0,  ,  ,  ,  );


--B1L0 is fifo:int_fifo|Mux7~3
B1L0 = (J1_COUNT[0] & ((B1L0 & ((B1_BUFFER[3][24]))) # (!B1L0 & (B1_BUFFER[1][24])))) # (!J1_COUNT[0] & (((B1L0))));


--B1L0 is fifo:int_fifo|Mux7~4
B1L0 = (J1_COUNT[2] & (B1L0)) # (!J1_COUNT[2] & ((B1L0)));


--Y1L0 is datapath:u_datapath|datapath_scsi:u_datapath_scsi|datapath_8b_MUX:u_datapath_8b_MUX|Selector0~2
Y1L0 = (Y1L0 & (((Y1L0)))) # (!Y1L0 & ((Y1L0 & (B1L0)) # (!Y1L0 & ((B1L0)))));


--B1_BUFFER[6][8] is fifo:int_fifo|BUFFER[6][8]
B1_BUFFER[6][8] = DFFEAS(E1L0, K1_LMWS,  ,  , B1L0,  ,  ,  ,  );


--B1_BUFFER[5][8] is fifo:int_fifo|BUFFER[5][8]
B1_BUFFER[5][8] = DFFEAS(E1L0, K1_LMWS,  ,  , B1L0,  ,  ,  ,  );


--B1_BUFFER[4][8] is fifo:int_fifo|BUFFER[4][8]
B1_BUFFER[4][8] = DFFEAS(E1L0, K1_LMWS,  ,  , B1L0,  ,  ,  ,  );


--B1L0 is fifo:int_fifo|Mux23~0
B1L0 = (J1_COUNT[1] & (((J1_COUNT[0])))) # (!J1_COUNT[1] & ((J1_COUNT[0] & (B1_BUFFER[5][8])) # (!J1_COUNT[0] & ((B1_BUFFER[4][8])))));


--B1_BUFFER[7][8] is fifo:int_fifo|BUFFER[7][8]
B1_BUFFER[7][8] = DFFEAS(E1L0, K1_LMWS,  ,  , B1L0,  ,  ,  ,  );


--B1L0 is fifo:int_fifo|Mux23~1
B1L0 = (J1_COUNT[1] & ((B1L0 & ((B1_BUFFER[7][8]))) # (!B1L0 & (B1_BUFFER[6][8])))) # (!J1_COUNT[1] & (((B1L0))));


--B1_BUFFER[1][8] is fifo:int_fifo|BUFFER[1][8]
B1_BUFFER[1][8] = DFFEAS(E1L0, K1_LMWS,  ,  , B1L0,  ,  ,  ,  );


--B1_BUFFER[2][8] is fifo:int_fifo|BUFFER[2][8]
B1_BUFFER[2][8] = DFFEAS(E1L0, K1_LMWS,  ,  , B1L0,  ,  ,  ,  );


--B1_BUFFER[0][8] is fifo:int_fifo|BUFFER[0][8]
B1_BUFFER[0][8] = DFFEAS(E1L0, K1_LMWS,  ,  , B1L0,  ,  ,  ,  );


--B1L0 is fifo:int_fifo|Mux23~2
B1L0 = (J1_COUNT[0] & (((J1_COUNT[1])))) # (!J1_COUNT[0] & ((J1_COUNT[1] & (B1_BUFFER[2][8])) # (!J1_COUNT[1] & ((B1_BUFFER[0][8])))));


--B1_BUFFER[3][8] is fifo:int_fifo|BUFFER[3][8]
B1_BUFFER[3][8] = DFFEAS(E1L0, K1_LMWS,  ,  , B1L0,  ,  ,  ,  );


--B1L0 is fifo:int_fifo|Mux23~3
B1L0 = (J1_COUNT[0] & ((B1L0 & ((B1_BUFFER[3][8]))) # (!B1L0 & (B1_BUFFER[1][8])))) # (!J1_COUNT[0] & (((B1L0))));


--B1L0 is fifo:int_fifo|Mux23~4
B1L0 = (J1_COUNT[2] & (B1L0)) # (!J1_COUNT[2] & ((B1L0)));


--Y1L0 is datapath:u_datapath|datapath_scsi:u_datapath_scsi|datapath_8b_MUX:u_datapath_8b_MUX|Selector0~3
Y1L0 = (Y1L0 & ((Y1L0 & ((B1L0))) # (!Y1L0 & (B1L0)))) # (!Y1L0 & (((Y1L0))));


--D1_CPU2S_o is SCSI_SM:u_SCSI_SM|CPU2S_o
D1_CPU2S_o = DFFEAS(U1_CPU2S, SCLK,  ,  ,  ,  ,  ,  ,  );


--Y1L0 is datapath:u_datapath|datapath_scsi:u_datapath_scsi|datapath_8b_MUX:u_datapath_8b_MUX|Selector0~4
Y1L0 = (D1_CPU2S_o & (Y1L0)) # (!D1_CPU2S_o & ((Y1L0)));


--Y1L0 is datapath:u_datapath|datapath_scsi:u_datapath_scsi|datapath_8b_MUX:u_datapath_8b_MUX|Z[0]~0
Y1L0 = (D1_CPU2S_o & D1_F2S_o);


--B1_BUFFER[6][1] is fifo:int_fifo|BUFFER[6][1]
B1_BUFFER[6][1] = DFFEAS(E1L0, K1_LLWS,  ,  , B1L0,  ,  ,  ,  );


--B1_BUFFER[5][1] is fifo:int_fifo|BUFFER[5][1]
B1_BUFFER[5][1] = DFFEAS(E1L0, K1_LLWS,  ,  , B1L0,  ,  ,  ,  );


--B1_BUFFER[4][1] is fifo:int_fifo|BUFFER[4][1]
B1_BUFFER[4][1] = DFFEAS(E1L0, K1_LLWS,  ,  , B1L0,  ,  ,  ,  );


--B1L0 is fifo:int_fifo|Mux30~0
B1L0 = (J1_COUNT[1] & (((J1_COUNT[0])))) # (!J1_COUNT[1] & ((J1_COUNT[0] & (B1_BUFFER[5][1])) # (!J1_COUNT[0] & ((B1_BUFFER[4][1])))));


--B1_BUFFER[7][1] is fifo:int_fifo|BUFFER[7][1]
B1_BUFFER[7][1] = DFFEAS(E1L0, K1_LLWS,  ,  , B1L0,  ,  ,  ,  );


--B1L0 is fifo:int_fifo|Mux30~1
B1L0 = (J1_COUNT[1] & ((B1L0 & ((B1_BUFFER[7][1]))) # (!B1L0 & (B1_BUFFER[6][1])))) # (!J1_COUNT[1] & (((B1L0))));


--B1_BUFFER[1][1] is fifo:int_fifo|BUFFER[1][1]
B1_BUFFER[1][1] = DFFEAS(E1L0, K1_LLWS,  ,  , B1L0,  ,  ,  ,  );


--B1_BUFFER[2][1] is fifo:int_fifo|BUFFER[2][1]
B1_BUFFER[2][1] = DFFEAS(E1L0, K1_LLWS,  ,  , B1L0,  ,  ,  ,  );


--B1_BUFFER[0][1] is fifo:int_fifo|BUFFER[0][1]
B1_BUFFER[0][1] = DFFEAS(E1L0, K1_LLWS,  ,  , B1L0,  ,  ,  ,  );


--B1L0 is fifo:int_fifo|Mux30~2
B1L0 = (J1_COUNT[0] & (((J1_COUNT[1])))) # (!J1_COUNT[0] & ((J1_COUNT[1] & (B1_BUFFER[2][1])) # (!J1_COUNT[1] & ((B1_BUFFER[0][1])))));


--B1_BUFFER[3][1] is fifo:int_fifo|BUFFER[3][1]
B1_BUFFER[3][1] = DFFEAS(E1L0, K1_LLWS,  ,  , B1L0,  ,  ,  ,  );


--B1L0 is fifo:int_fifo|Mux30~3
B1L0 = (J1_COUNT[0] & ((B1L0 & ((B1_BUFFER[3][1]))) # (!B1L0 & (B1_BUFFER[1][1])))) # (!J1_COUNT[0] & (((B1L0))));


--B1L0 is fifo:int_fifo|Mux30~4
B1L0 = (J1_COUNT[2] & (B1L0)) # (!J1_COUNT[2] & ((B1L0)));


--B1_BUFFER[6][17] is fifo:int_fifo|BUFFER[6][17]
B1_BUFFER[6][17] = DFFEAS(E1L0, K1_UMWS,  ,  , B1L0,  ,  ,  ,  );


--B1_BUFFER[5][17] is fifo:int_fifo|BUFFER[5][17]
B1_BUFFER[5][17] = DFFEAS(E1L0, K1_UMWS,  ,  , B1L0,  ,  ,  ,  );


--B1_BUFFER[4][17] is fifo:int_fifo|BUFFER[4][17]
B1_BUFFER[4][17] = DFFEAS(E1L0, K1_UMWS,  ,  , B1L0,  ,  ,  ,  );


--B1L0 is fifo:int_fifo|Mux14~0
B1L0 = (J1_COUNT[1] & (((J1_COUNT[0])))) # (!J1_COUNT[1] & ((J1_COUNT[0] & (B1_BUFFER[5][17])) # (!J1_COUNT[0] & ((B1_BUFFER[4][17])))));


--B1_BUFFER[7][17] is fifo:int_fifo|BUFFER[7][17]
B1_BUFFER[7][17] = DFFEAS(E1L0, K1_UMWS,  ,  , B1L0,  ,  ,  ,  );


--B1L0 is fifo:int_fifo|Mux14~1
B1L0 = (J1_COUNT[1] & ((B1L0 & ((B1_BUFFER[7][17]))) # (!B1L0 & (B1_BUFFER[6][17])))) # (!J1_COUNT[1] & (((B1L0))));


--B1_BUFFER[1][17] is fifo:int_fifo|BUFFER[1][17]
B1_BUFFER[1][17] = DFFEAS(E1L0, K1_UMWS,  ,  , B1L0,  ,  ,  ,  );


--B1_BUFFER[2][17] is fifo:int_fifo|BUFFER[2][17]
B1_BUFFER[2][17] = DFFEAS(E1L0, K1_UMWS,  ,  , B1L0,  ,  ,  ,  );


--B1_BUFFER[0][17] is fifo:int_fifo|BUFFER[0][17]
B1_BUFFER[0][17] = DFFEAS(E1L0, K1_UMWS,  ,  , B1L0,  ,  ,  ,  );


--B1L0 is fifo:int_fifo|Mux14~2
B1L0 = (J1_COUNT[0] & (((J1_COUNT[1])))) # (!J1_COUNT[0] & ((J1_COUNT[1] & (B1_BUFFER[2][17])) # (!J1_COUNT[1] & ((B1_BUFFER[0][17])))));


--B1_BUFFER[3][17] is fifo:int_fifo|BUFFER[3][17]
B1_BUFFER[3][17] = DFFEAS(E1L0, K1_UMWS,  ,  , B1L0,  ,  ,  ,  );


--B1L0 is fifo:int_fifo|Mux14~3
B1L0 = (J1_COUNT[0] & ((B1L0 & ((B1_BUFFER[3][17]))) # (!B1L0 & (B1_BUFFER[1][17])))) # (!J1_COUNT[0] & (((B1L0))));


--B1L0 is fifo:int_fifo|Mux14~4
B1L0 = (J1_COUNT[2] & (B1L0)) # (!J1_COUNT[2] & ((B1L0)));


--B1_BUFFER[6][25] is fifo:int_fifo|BUFFER[6][25]
B1_BUFFER[6][25] = DFFEAS(E1L0, K1_UUWS,  ,  , B1L0,  ,  ,  ,  );


--B1_BUFFER[5][25] is fifo:int_fifo|BUFFER[5][25]
B1_BUFFER[5][25] = DFFEAS(E1L0, K1_UUWS,  ,  , B1L0,  ,  ,  ,  );


--B1_BUFFER[4][25] is fifo:int_fifo|BUFFER[4][25]
B1_BUFFER[4][25] = DFFEAS(E1L0, K1_UUWS,  ,  , B1L0,  ,  ,  ,  );


--B1L0 is fifo:int_fifo|Mux6~0
B1L0 = (J1_COUNT[1] & (((J1_COUNT[0])))) # (!J1_COUNT[1] & ((J1_COUNT[0] & (B1_BUFFER[5][25])) # (!J1_COUNT[0] & ((B1_BUFFER[4][25])))));


--B1_BUFFER[7][25] is fifo:int_fifo|BUFFER[7][25]
B1_BUFFER[7][25] = DFFEAS(E1L0, K1_UUWS,  ,  , B1L0,  ,  ,  ,  );


--B1L0 is fifo:int_fifo|Mux6~1
B1L0 = (J1_COUNT[1] & ((B1L0 & ((B1_BUFFER[7][25]))) # (!B1L0 & (B1_BUFFER[6][25])))) # (!J1_COUNT[1] & (((B1L0))));


--B1_BUFFER[1][25] is fifo:int_fifo|BUFFER[1][25]
B1_BUFFER[1][25] = DFFEAS(E1L0, K1_UUWS,  ,  , B1L0,  ,  ,  ,  );


--B1_BUFFER[2][25] is fifo:int_fifo|BUFFER[2][25]
B1_BUFFER[2][25] = DFFEAS(E1L0, K1_UUWS,  ,  , B1L0,  ,  ,  ,  );


--B1_BUFFER[0][25] is fifo:int_fifo|BUFFER[0][25]
B1_BUFFER[0][25] = DFFEAS(E1L0, K1_UUWS,  ,  , B1L0,  ,  ,  ,  );


--B1L0 is fifo:int_fifo|Mux6~2
B1L0 = (J1_COUNT[0] & (((J1_COUNT[1])))) # (!J1_COUNT[0] & ((J1_COUNT[1] & (B1_BUFFER[2][25])) # (!J1_COUNT[1] & ((B1_BUFFER[0][25])))));


--B1_BUFFER[3][25] is fifo:int_fifo|BUFFER[3][25]
B1_BUFFER[3][25] = DFFEAS(E1L0, K1_UUWS,  ,  , B1L0,  ,  ,  ,  );


--B1L0 is fifo:int_fifo|Mux6~3
B1L0 = (J1_COUNT[0] & ((B1L0 & ((B1_BUFFER[3][25]))) # (!B1L0 & (B1_BUFFER[1][25])))) # (!J1_COUNT[0] & (((B1L0))));


--B1L0 is fifo:int_fifo|Mux6~4
B1L0 = (J1_COUNT[2] & (B1L0)) # (!J1_COUNT[2] & ((B1L0)));


--Y1L0 is datapath:u_datapath|datapath_scsi:u_datapath_scsi|datapath_8b_MUX:u_datapath_8b_MUX|Selector1~0
Y1L0 = (Y1L0 & (((Y1L0)))) # (!Y1L0 & ((Y1L0 & (B1L0)) # (!Y1L0 & ((B1L0)))));


--B1_BUFFER[6][9] is fifo:int_fifo|BUFFER[6][9]
B1_BUFFER[6][9] = DFFEAS(E1L0, K1_LMWS,  ,  , B1L0,  ,  ,  ,  );


--B1_BUFFER[5][9] is fifo:int_fifo|BUFFER[5][9]
B1_BUFFER[5][9] = DFFEAS(E1L0, K1_LMWS,  ,  , B1L0,  ,  ,  ,  );


--B1_BUFFER[4][9] is fifo:int_fifo|BUFFER[4][9]
B1_BUFFER[4][9] = DFFEAS(E1L0, K1_LMWS,  ,  , B1L0,  ,  ,  ,  );


--B1L0 is fifo:int_fifo|Mux22~0
B1L0 = (J1_COUNT[1] & (((J1_COUNT[0])))) # (!J1_COUNT[1] & ((J1_COUNT[0] & (B1_BUFFER[5][9])) # (!J1_COUNT[0] & ((B1_BUFFER[4][9])))));


--B1_BUFFER[7][9] is fifo:int_fifo|BUFFER[7][9]
B1_BUFFER[7][9] = DFFEAS(E1L0, K1_LMWS,  ,  , B1L0,  ,  ,  ,  );


--B1L0 is fifo:int_fifo|Mux22~1
B1L0 = (J1_COUNT[1] & ((B1L0 & ((B1_BUFFER[7][9]))) # (!B1L0 & (B1_BUFFER[6][9])))) # (!J1_COUNT[1] & (((B1L0))));


--B1_BUFFER[1][9] is fifo:int_fifo|BUFFER[1][9]
B1_BUFFER[1][9] = DFFEAS(E1L0, K1_LMWS,  ,  , B1L0,  ,  ,  ,  );


--B1_BUFFER[2][9] is fifo:int_fifo|BUFFER[2][9]
B1_BUFFER[2][9] = DFFEAS(E1L0, K1_LMWS,  ,  , B1L0,  ,  ,  ,  );


--B1_BUFFER[0][9] is fifo:int_fifo|BUFFER[0][9]
B1_BUFFER[0][9] = DFFEAS(E1L0, K1_LMWS,  ,  , B1L0,  ,  ,  ,  );


--B1L0 is fifo:int_fifo|Mux22~2
B1L0 = (J1_COUNT[0] & (((J1_COUNT[1])))) # (!J1_COUNT[0] & ((J1_COUNT[1] & (B1_BUFFER[2][9])) # (!J1_COUNT[1] & ((B1_BUFFER[0][9])))));


--B1_BUFFER[3][9] is fifo:int_fifo|BUFFER[3][9]
B1_BUFFER[3][9] = DFFEAS(E1L0, K1_LMWS,  ,  , B1L0,  ,  ,  ,  );


--B1L0 is fifo:int_fifo|Mux22~3
B1L0 = (J1_COUNT[0] & ((B1L0 & ((B1_BUFFER[3][9]))) # (!B1L0 & (B1_BUFFER[1][9])))) # (!J1_COUNT[0] & (((B1L0))));


--B1L0 is fifo:int_fifo|Mux22~4
B1L0 = (J1_COUNT[2] & (B1L0)) # (!J1_COUNT[2] & ((B1L0)));


--Y1L0 is datapath:u_datapath|datapath_scsi:u_datapath_scsi|datapath_8b_MUX:u_datapath_8b_MUX|Selector1~1
Y1L0 = (Y1L0 & ((Y1L0 & ((B1L0))) # (!Y1L0 & (B1L0)))) # (!Y1L0 & (((Y1L0))));


--Y1L0 is datapath:u_datapath|datapath_scsi:u_datapath_scsi|datapath_8b_MUX:u_datapath_8b_MUX|Selector1~2
Y1L0 = (A1L0 & D1_S2F_o);


--V1_UD_LATCH[1] is datapath:u_datapath|datapath_input:u_datapath_input|UD_LATCH[1]
V1_UD_LATCH[1] = DFFEAS(A1L0, !C1_PDS,  ,  ,  ,  ,  ,  ,  );


--Y1L0 is datapath:u_datapath|datapath_scsi:u_datapath_scsi|datapath_8b_MUX:u_datapath_8b_MUX|Selector1~3
Y1L0 = (!D1_S2F_o & ((ADDR[3] & (A1L0)) # (!ADDR[3] & ((V1_UD_LATCH[1])))));


--Y1L0 is datapath:u_datapath|datapath_scsi:u_datapath_scsi|datapath_8b_MUX:u_datapath_8b_MUX|Selector1~4
Y1L0 = (D1_CPU2S_o & (((Y1L0) # (Y1L0)))) # (!D1_CPU2S_o & (Y1L0));


--V1_UD_LATCH[2] is datapath:u_datapath|datapath_input:u_datapath_input|UD_LATCH[2]
V1_UD_LATCH[2] = DFFEAS(A1L0, !C1_PDS,  ,  ,  ,  ,  ,  ,  );


--Y1L0 is datapath:u_datapath|datapath_scsi:u_datapath_scsi|datapath_8b_MUX:u_datapath_8b_MUX|Selector2~0
Y1L0 = (ADDR[3] & (A1L0)) # (!ADDR[3] & ((V1_UD_LATCH[2])));


--Y1L0 is datapath:u_datapath|datapath_scsi:u_datapath_scsi|datapath_8b_MUX:u_datapath_8b_MUX|Selector2~1
Y1L0 = (D1_S2F_o & (A1L0)) # (!D1_S2F_o & ((Y1L0)));


--B1_BUFFER[6][18] is fifo:int_fifo|BUFFER[6][18]
B1_BUFFER[6][18] = DFFEAS(E1L0, K1_UMWS,  ,  , B1L0,  ,  ,  ,  );


--B1_BUFFER[5][18] is fifo:int_fifo|BUFFER[5][18]
B1_BUFFER[5][18] = DFFEAS(E1L0, K1_UMWS,  ,  , B1L0,  ,  ,  ,  );


--B1_BUFFER[4][18] is fifo:int_fifo|BUFFER[4][18]
B1_BUFFER[4][18] = DFFEAS(E1L0, K1_UMWS,  ,  , B1L0,  ,  ,  ,  );


--B1L0 is fifo:int_fifo|Mux13~0
B1L0 = (J1_COUNT[1] & (((J1_COUNT[0])))) # (!J1_COUNT[1] & ((J1_COUNT[0] & (B1_BUFFER[5][18])) # (!J1_COUNT[0] & ((B1_BUFFER[4][18])))));


--B1_BUFFER[7][18] is fifo:int_fifo|BUFFER[7][18]
B1_BUFFER[7][18] = DFFEAS(E1L0, K1_UMWS,  ,  , B1L0,  ,  ,  ,  );


--B1L0 is fifo:int_fifo|Mux13~1
B1L0 = (J1_COUNT[1] & ((B1L0 & ((B1_BUFFER[7][18]))) # (!B1L0 & (B1_BUFFER[6][18])))) # (!J1_COUNT[1] & (((B1L0))));


--B1_BUFFER[1][18] is fifo:int_fifo|BUFFER[1][18]
B1_BUFFER[1][18] = DFFEAS(E1L0, K1_UMWS,  ,  , B1L0,  ,  ,  ,  );


--B1_BUFFER[2][18] is fifo:int_fifo|BUFFER[2][18]
B1_BUFFER[2][18] = DFFEAS(E1L0, K1_UMWS,  ,  , B1L0,  ,  ,  ,  );


--B1_BUFFER[0][18] is fifo:int_fifo|BUFFER[0][18]
B1_BUFFER[0][18] = DFFEAS(E1L0, K1_UMWS,  ,  , B1L0,  ,  ,  ,  );


--B1L0 is fifo:int_fifo|Mux13~2
B1L0 = (J1_COUNT[0] & (((J1_COUNT[1])))) # (!J1_COUNT[0] & ((J1_COUNT[1] & (B1_BUFFER[2][18])) # (!J1_COUNT[1] & ((B1_BUFFER[0][18])))));


--B1_BUFFER[3][18] is fifo:int_fifo|BUFFER[3][18]
B1_BUFFER[3][18] = DFFEAS(E1L0, K1_UMWS,  ,  , B1L0,  ,  ,  ,  );


--B1L0 is fifo:int_fifo|Mux13~3
B1L0 = (J1_COUNT[0] & ((B1L0 & ((B1_BUFFER[3][18]))) # (!B1L0 & (B1_BUFFER[1][18])))) # (!J1_COUNT[0] & (((B1L0))));


--B1L0 is fifo:int_fifo|Mux13~4
B1L0 = (J1_COUNT[2] & (B1L0)) # (!J1_COUNT[2] & ((B1L0)));


--B1_BUFFER[6][2] is fifo:int_fifo|BUFFER[6][2]
B1_BUFFER[6][2] = DFFEAS(E1L0, K1_LLWS,  ,  , B1L0,  ,  ,  ,  );


--B1_BUFFER[5][2] is fifo:int_fifo|BUFFER[5][2]
B1_BUFFER[5][2] = DFFEAS(E1L0, K1_LLWS,  ,  , B1L0,  ,  ,  ,  );


--B1_BUFFER[4][2] is fifo:int_fifo|BUFFER[4][2]
B1_BUFFER[4][2] = DFFEAS(E1L0, K1_LLWS,  ,  , B1L0,  ,  ,  ,  );


--B1L0 is fifo:int_fifo|Mux29~0
B1L0 = (J1_COUNT[1] & (((J1_COUNT[0])))) # (!J1_COUNT[1] & ((J1_COUNT[0] & (B1_BUFFER[5][2])) # (!J1_COUNT[0] & ((B1_BUFFER[4][2])))));


--B1_BUFFER[7][2] is fifo:int_fifo|BUFFER[7][2]
B1_BUFFER[7][2] = DFFEAS(E1L0, K1_LLWS,  ,  , B1L0,  ,  ,  ,  );


--B1L0 is fifo:int_fifo|Mux29~1
B1L0 = (J1_COUNT[1] & ((B1L0 & ((B1_BUFFER[7][2]))) # (!B1L0 & (B1_BUFFER[6][2])))) # (!J1_COUNT[1] & (((B1L0))));


--B1_BUFFER[1][2] is fifo:int_fifo|BUFFER[1][2]
B1_BUFFER[1][2] = DFFEAS(E1L0, K1_LLWS,  ,  , B1L0,  ,  ,  ,  );


--B1_BUFFER[2][2] is fifo:int_fifo|BUFFER[2][2]
B1_BUFFER[2][2] = DFFEAS(E1L0, K1_LLWS,  ,  , B1L0,  ,  ,  ,  );


--B1_BUFFER[0][2] is fifo:int_fifo|BUFFER[0][2]
B1_BUFFER[0][2] = DFFEAS(E1L0, K1_LLWS,  ,  , B1L0,  ,  ,  ,  );


--B1L0 is fifo:int_fifo|Mux29~2
B1L0 = (J1_COUNT[0] & (((J1_COUNT[1])))) # (!J1_COUNT[0] & ((J1_COUNT[1] & (B1_BUFFER[2][2])) # (!J1_COUNT[1] & ((B1_BUFFER[0][2])))));


--B1_BUFFER[3][2] is fifo:int_fifo|BUFFER[3][2]
B1_BUFFER[3][2] = DFFEAS(E1L0, K1_LLWS,  ,  , B1L0,  ,  ,  ,  );


--B1L0 is fifo:int_fifo|Mux29~3
B1L0 = (J1_COUNT[0] & ((B1L0 & ((B1_BUFFER[3][2]))) # (!B1L0 & (B1_BUFFER[1][2])))) # (!J1_COUNT[0] & (((B1L0))));


--B1L0 is fifo:int_fifo|Mux29~4
B1L0 = (J1_COUNT[2] & (B1L0)) # (!J1_COUNT[2] & ((B1L0)));


--B1_BUFFER[6][26] is fifo:int_fifo|BUFFER[6][26]
B1_BUFFER[6][26] = DFFEAS(E1L0, K1_UUWS,  ,  , B1L0,  ,  ,  ,  );


--B1_BUFFER[5][26] is fifo:int_fifo|BUFFER[5][26]
B1_BUFFER[5][26] = DFFEAS(E1L0, K1_UUWS,  ,  , B1L0,  ,  ,  ,  );


--B1_BUFFER[4][26] is fifo:int_fifo|BUFFER[4][26]
B1_BUFFER[4][26] = DFFEAS(E1L0, K1_UUWS,  ,  , B1L0,  ,  ,  ,  );


--B1L0 is fifo:int_fifo|Mux5~0
B1L0 = (J1_COUNT[1] & (((J1_COUNT[0])))) # (!J1_COUNT[1] & ((J1_COUNT[0] & (B1_BUFFER[5][26])) # (!J1_COUNT[0] & ((B1_BUFFER[4][26])))));


--B1_BUFFER[7][26] is fifo:int_fifo|BUFFER[7][26]
B1_BUFFER[7][26] = DFFEAS(E1L0, K1_UUWS,  ,  , B1L0,  ,  ,  ,  );


--B1L0 is fifo:int_fifo|Mux5~1
B1L0 = (J1_COUNT[1] & ((B1L0 & ((B1_BUFFER[7][26]))) # (!B1L0 & (B1_BUFFER[6][26])))) # (!J1_COUNT[1] & (((B1L0))));


--B1_BUFFER[1][26] is fifo:int_fifo|BUFFER[1][26]
B1_BUFFER[1][26] = DFFEAS(E1L0, K1_UUWS,  ,  , B1L0,  ,  ,  ,  );


--B1_BUFFER[2][26] is fifo:int_fifo|BUFFER[2][26]
B1_BUFFER[2][26] = DFFEAS(E1L0, K1_UUWS,  ,  , B1L0,  ,  ,  ,  );


--B1_BUFFER[0][26] is fifo:int_fifo|BUFFER[0][26]
B1_BUFFER[0][26] = DFFEAS(E1L0, K1_UUWS,  ,  , B1L0,  ,  ,  ,  );


--B1L0 is fifo:int_fifo|Mux5~2
B1L0 = (J1_COUNT[0] & (((J1_COUNT[1])))) # (!J1_COUNT[0] & ((J1_COUNT[1] & (B1_BUFFER[2][26])) # (!J1_COUNT[1] & ((B1_BUFFER[0][26])))));


--B1_BUFFER[3][26] is fifo:int_fifo|BUFFER[3][26]
B1_BUFFER[3][26] = DFFEAS(E1L0, K1_UUWS,  ,  , B1L0,  ,  ,  ,  );


--B1L0 is fifo:int_fifo|Mux5~3
B1L0 = (J1_COUNT[0] & ((B1L0 & ((B1_BUFFER[3][26]))) # (!B1L0 & (B1_BUFFER[1][26])))) # (!J1_COUNT[0] & (((B1L0))));


--B1L0 is fifo:int_fifo|Mux5~4
B1L0 = (J1_COUNT[2] & (B1L0)) # (!J1_COUNT[2] & ((B1L0)));


--Y1L0 is datapath:u_datapath|datapath_scsi:u_datapath_scsi|datapath_8b_MUX:u_datapath_8b_MUX|Selector2~2
Y1L0 = (Y1L0 & (((Y1L0)))) # (!Y1L0 & ((Y1L0 & (B1L0)) # (!Y1L0 & ((B1L0)))));


--B1_BUFFER[6][10] is fifo:int_fifo|BUFFER[6][10]
B1_BUFFER[6][10] = DFFEAS(E1L0, K1_LMWS,  ,  , B1L0,  ,  ,  ,  );


--B1_BUFFER[5][10] is fifo:int_fifo|BUFFER[5][10]
B1_BUFFER[5][10] = DFFEAS(E1L0, K1_LMWS,  ,  , B1L0,  ,  ,  ,  );


--B1_BUFFER[4][10] is fifo:int_fifo|BUFFER[4][10]
B1_BUFFER[4][10] = DFFEAS(E1L0, K1_LMWS,  ,  , B1L0,  ,  ,  ,  );


--B1L0 is fifo:int_fifo|Mux21~0
B1L0 = (J1_COUNT[1] & (((J1_COUNT[0])))) # (!J1_COUNT[1] & ((J1_COUNT[0] & (B1_BUFFER[5][10])) # (!J1_COUNT[0] & ((B1_BUFFER[4][10])))));


--B1_BUFFER[7][10] is fifo:int_fifo|BUFFER[7][10]
B1_BUFFER[7][10] = DFFEAS(E1L0, K1_LMWS,  ,  , B1L0,  ,  ,  ,  );


--B1L0 is fifo:int_fifo|Mux21~1
B1L0 = (J1_COUNT[1] & ((B1L0 & ((B1_BUFFER[7][10]))) # (!B1L0 & (B1_BUFFER[6][10])))) # (!J1_COUNT[1] & (((B1L0))));


--B1_BUFFER[1][10] is fifo:int_fifo|BUFFER[1][10]
B1_BUFFER[1][10] = DFFEAS(E1L0, K1_LMWS,  ,  , B1L0,  ,  ,  ,  );


--B1_BUFFER[2][10] is fifo:int_fifo|BUFFER[2][10]
B1_BUFFER[2][10] = DFFEAS(E1L0, K1_LMWS,  ,  , B1L0,  ,  ,  ,  );


--B1_BUFFER[0][10] is fifo:int_fifo|BUFFER[0][10]
B1_BUFFER[0][10] = DFFEAS(E1L0, K1_LMWS,  ,  , B1L0,  ,  ,  ,  );


--B1L0 is fifo:int_fifo|Mux21~2
B1L0 = (J1_COUNT[0] & (((J1_COUNT[1])))) # (!J1_COUNT[0] & ((J1_COUNT[1] & (B1_BUFFER[2][10])) # (!J1_COUNT[1] & ((B1_BUFFER[0][10])))));


--B1_BUFFER[3][10] is fifo:int_fifo|BUFFER[3][10]
B1_BUFFER[3][10] = DFFEAS(E1L0, K1_LMWS,  ,  , B1L0,  ,  ,  ,  );


--B1L0 is fifo:int_fifo|Mux21~3
B1L0 = (J1_COUNT[0] & ((B1L0 & ((B1_BUFFER[3][10]))) # (!B1L0 & (B1_BUFFER[1][10])))) # (!J1_COUNT[0] & (((B1L0))));


--B1L0 is fifo:int_fifo|Mux21~4
B1L0 = (J1_COUNT[2] & (B1L0)) # (!J1_COUNT[2] & ((B1L0)));


--Y1L0 is datapath:u_datapath|datapath_scsi:u_datapath_scsi|datapath_8b_MUX:u_datapath_8b_MUX|Selector2~3
Y1L0 = (Y1L0 & ((Y1L0 & ((B1L0))) # (!Y1L0 & (B1L0)))) # (!Y1L0 & (((Y1L0))));


--Y1L0 is datapath:u_datapath|datapath_scsi:u_datapath_scsi|datapath_8b_MUX:u_datapath_8b_MUX|Selector2~4
Y1L0 = (D1_CPU2S_o & (Y1L0)) # (!D1_CPU2S_o & ((Y1L0)));


--V1_UD_LATCH[3] is datapath:u_datapath|datapath_input:u_datapath_input|UD_LATCH[3]
V1_UD_LATCH[3] = DFFEAS(A1L0, !C1_PDS,  ,  ,  ,  ,  ,  ,  );


--Y1L0 is datapath:u_datapath|datapath_scsi:u_datapath_scsi|datapath_8b_MUX:u_datapath_8b_MUX|Selector3~0
Y1L0 = (ADDR[3] & (A1L0)) # (!ADDR[3] & ((V1_UD_LATCH[3])));


--Y1L0 is datapath:u_datapath|datapath_scsi:u_datapath_scsi|datapath_8b_MUX:u_datapath_8b_MUX|Selector3~1
Y1L0 = (D1_S2F_o & (A1L0)) # (!D1_S2F_o & ((Y1L0)));


--B1_BUFFER[6][3] is fifo:int_fifo|BUFFER[6][3]
B1_BUFFER[6][3] = DFFEAS(E1L0, K1_LLWS,  ,  , B1L0,  ,  ,  ,  );


--B1_BUFFER[5][3] is fifo:int_fifo|BUFFER[5][3]
B1_BUFFER[5][3] = DFFEAS(E1L0, K1_LLWS,  ,  , B1L0,  ,  ,  ,  );


--B1_BUFFER[4][3] is fifo:int_fifo|BUFFER[4][3]
B1_BUFFER[4][3] = DFFEAS(E1L0, K1_LLWS,  ,  , B1L0,  ,  ,  ,  );


--B1L0 is fifo:int_fifo|Mux28~0
B1L0 = (J1_COUNT[1] & (((J1_COUNT[0])))) # (!J1_COUNT[1] & ((J1_COUNT[0] & (B1_BUFFER[5][3])) # (!J1_COUNT[0] & ((B1_BUFFER[4][3])))));


--B1_BUFFER[7][3] is fifo:int_fifo|BUFFER[7][3]
B1_BUFFER[7][3] = DFFEAS(E1L0, K1_LLWS,  ,  , B1L0,  ,  ,  ,  );


--B1L0 is fifo:int_fifo|Mux28~1
B1L0 = (J1_COUNT[1] & ((B1L0 & ((B1_BUFFER[7][3]))) # (!B1L0 & (B1_BUFFER[6][3])))) # (!J1_COUNT[1] & (((B1L0))));


--B1_BUFFER[1][3] is fifo:int_fifo|BUFFER[1][3]
B1_BUFFER[1][3] = DFFEAS(E1L0, K1_LLWS,  ,  , B1L0,  ,  ,  ,  );


--B1_BUFFER[2][3] is fifo:int_fifo|BUFFER[2][3]
B1_BUFFER[2][3] = DFFEAS(E1L0, K1_LLWS,  ,  , B1L0,  ,  ,  ,  );


--B1_BUFFER[0][3] is fifo:int_fifo|BUFFER[0][3]
B1_BUFFER[0][3] = DFFEAS(E1L0, K1_LLWS,  ,  , B1L0,  ,  ,  ,  );


--B1L0 is fifo:int_fifo|Mux28~2
B1L0 = (J1_COUNT[0] & (((J1_COUNT[1])))) # (!J1_COUNT[0] & ((J1_COUNT[1] & (B1_BUFFER[2][3])) # (!J1_COUNT[1] & ((B1_BUFFER[0][3])))));


--B1_BUFFER[3][3] is fifo:int_fifo|BUFFER[3][3]
B1_BUFFER[3][3] = DFFEAS(E1L0, K1_LLWS,  ,  , B1L0,  ,  ,  ,  );


--B1L0 is fifo:int_fifo|Mux28~3
B1L0 = (J1_COUNT[0] & ((B1L0 & ((B1_BUFFER[3][3]))) # (!B1L0 & (B1_BUFFER[1][3])))) # (!J1_COUNT[0] & (((B1L0))));


--B1L0 is fifo:int_fifo|Mux28~4
B1L0 = (J1_COUNT[2] & (B1L0)) # (!J1_COUNT[2] & ((B1L0)));


--B1_BUFFER[6][19] is fifo:int_fifo|BUFFER[6][19]
B1_BUFFER[6][19] = DFFEAS(E1L0, K1_UMWS,  ,  , B1L0,  ,  ,  ,  );


--B1_BUFFER[5][19] is fifo:int_fifo|BUFFER[5][19]
B1_BUFFER[5][19] = DFFEAS(E1L0, K1_UMWS,  ,  , B1L0,  ,  ,  ,  );


--B1_BUFFER[4][19] is fifo:int_fifo|BUFFER[4][19]
B1_BUFFER[4][19] = DFFEAS(E1L0, K1_UMWS,  ,  , B1L0,  ,  ,  ,  );


--B1L0 is fifo:int_fifo|Mux12~0
B1L0 = (J1_COUNT[1] & (((J1_COUNT[0])))) # (!J1_COUNT[1] & ((J1_COUNT[0] & (B1_BUFFER[5][19])) # (!J1_COUNT[0] & ((B1_BUFFER[4][19])))));


--B1_BUFFER[7][19] is fifo:int_fifo|BUFFER[7][19]
B1_BUFFER[7][19] = DFFEAS(E1L0, K1_UMWS,  ,  , B1L0,  ,  ,  ,  );


--B1L0 is fifo:int_fifo|Mux12~1
B1L0 = (J1_COUNT[1] & ((B1L0 & ((B1_BUFFER[7][19]))) # (!B1L0 & (B1_BUFFER[6][19])))) # (!J1_COUNT[1] & (((B1L0))));


--B1_BUFFER[1][19] is fifo:int_fifo|BUFFER[1][19]
B1_BUFFER[1][19] = DFFEAS(E1L0, K1_UMWS,  ,  , B1L0,  ,  ,  ,  );


--B1_BUFFER[2][19] is fifo:int_fifo|BUFFER[2][19]
B1_BUFFER[2][19] = DFFEAS(E1L0, K1_UMWS,  ,  , B1L0,  ,  ,  ,  );


--B1_BUFFER[0][19] is fifo:int_fifo|BUFFER[0][19]
B1_BUFFER[0][19] = DFFEAS(E1L0, K1_UMWS,  ,  , B1L0,  ,  ,  ,  );


--B1L0 is fifo:int_fifo|Mux12~2
B1L0 = (J1_COUNT[0] & (((J1_COUNT[1])))) # (!J1_COUNT[0] & ((J1_COUNT[1] & (B1_BUFFER[2][19])) # (!J1_COUNT[1] & ((B1_BUFFER[0][19])))));


--B1_BUFFER[3][19] is fifo:int_fifo|BUFFER[3][19]
B1_BUFFER[3][19] = DFFEAS(E1L0, K1_UMWS,  ,  , B1L0,  ,  ,  ,  );


--B1L0 is fifo:int_fifo|Mux12~3
B1L0 = (J1_COUNT[0] & ((B1L0 & ((B1_BUFFER[3][19]))) # (!B1L0 & (B1_BUFFER[1][19])))) # (!J1_COUNT[0] & (((B1L0))));


--B1L0 is fifo:int_fifo|Mux12~4
B1L0 = (J1_COUNT[2] & (B1L0)) # (!J1_COUNT[2] & ((B1L0)));


--B1_BUFFER[6][27] is fifo:int_fifo|BUFFER[6][27]
B1_BUFFER[6][27] = DFFEAS(E1L0, K1_UUWS,  ,  , B1L0,  ,  ,  ,  );


--B1_BUFFER[5][27] is fifo:int_fifo|BUFFER[5][27]
B1_BUFFER[5][27] = DFFEAS(E1L0, K1_UUWS,  ,  , B1L0,  ,  ,  ,  );


--B1_BUFFER[4][27] is fifo:int_fifo|BUFFER[4][27]
B1_BUFFER[4][27] = DFFEAS(E1L0, K1_UUWS,  ,  , B1L0,  ,  ,  ,  );


--B1L0 is fifo:int_fifo|Mux4~0
B1L0 = (J1_COUNT[1] & (((J1_COUNT[0])))) # (!J1_COUNT[1] & ((J1_COUNT[0] & (B1_BUFFER[5][27])) # (!J1_COUNT[0] & ((B1_BUFFER[4][27])))));


--B1_BUFFER[7][27] is fifo:int_fifo|BUFFER[7][27]
B1_BUFFER[7][27] = DFFEAS(E1L0, K1_UUWS,  ,  , B1L0,  ,  ,  ,  );


--B1L0 is fifo:int_fifo|Mux4~1
B1L0 = (J1_COUNT[1] & ((B1L0 & ((B1_BUFFER[7][27]))) # (!B1L0 & (B1_BUFFER[6][27])))) # (!J1_COUNT[1] & (((B1L0))));


--B1_BUFFER[1][27] is fifo:int_fifo|BUFFER[1][27]
B1_BUFFER[1][27] = DFFEAS(E1L0, K1_UUWS,  ,  , B1L0,  ,  ,  ,  );


--B1_BUFFER[2][27] is fifo:int_fifo|BUFFER[2][27]
B1_BUFFER[2][27] = DFFEAS(E1L0, K1_UUWS,  ,  , B1L0,  ,  ,  ,  );


--B1_BUFFER[0][27] is fifo:int_fifo|BUFFER[0][27]
B1_BUFFER[0][27] = DFFEAS(E1L0, K1_UUWS,  ,  , B1L0,  ,  ,  ,  );


--B1L0 is fifo:int_fifo|Mux4~2
B1L0 = (J1_COUNT[0] & (((J1_COUNT[1])))) # (!J1_COUNT[0] & ((J1_COUNT[1] & (B1_BUFFER[2][27])) # (!J1_COUNT[1] & ((B1_BUFFER[0][27])))));


--B1_BUFFER[3][27] is fifo:int_fifo|BUFFER[3][27]
B1_BUFFER[3][27] = DFFEAS(E1L0, K1_UUWS,  ,  , B1L0,  ,  ,  ,  );


--B1L0 is fifo:int_fifo|Mux4~3
B1L0 = (J1_COUNT[0] & ((B1L0 & ((B1_BUFFER[3][27]))) # (!B1L0 & (B1_BUFFER[1][27])))) # (!J1_COUNT[0] & (((B1L0))));


--B1L0 is fifo:int_fifo|Mux4~4
B1L0 = (J1_COUNT[2] & (B1L0)) # (!J1_COUNT[2] & ((B1L0)));


--Y1L0 is datapath:u_datapath|datapath_scsi:u_datapath_scsi|datapath_8b_MUX:u_datapath_8b_MUX|Selector3~2
Y1L0 = (Y1L0 & (((Y1L0)))) # (!Y1L0 & ((Y1L0 & (B1L0)) # (!Y1L0 & ((B1L0)))));


--B1_BUFFER[6][11] is fifo:int_fifo|BUFFER[6][11]
B1_BUFFER[6][11] = DFFEAS(E1L0, K1_LMWS,  ,  , B1L0,  ,  ,  ,  );


--B1_BUFFER[5][11] is fifo:int_fifo|BUFFER[5][11]
B1_BUFFER[5][11] = DFFEAS(E1L0, K1_LMWS,  ,  , B1L0,  ,  ,  ,  );


--B1_BUFFER[4][11] is fifo:int_fifo|BUFFER[4][11]
B1_BUFFER[4][11] = DFFEAS(E1L0, K1_LMWS,  ,  , B1L0,  ,  ,  ,  );


--B1L0 is fifo:int_fifo|Mux20~0
B1L0 = (J1_COUNT[1] & (((J1_COUNT[0])))) # (!J1_COUNT[1] & ((J1_COUNT[0] & (B1_BUFFER[5][11])) # (!J1_COUNT[0] & ((B1_BUFFER[4][11])))));


--B1_BUFFER[7][11] is fifo:int_fifo|BUFFER[7][11]
B1_BUFFER[7][11] = DFFEAS(E1L0, K1_LMWS,  ,  , B1L0,  ,  ,  ,  );


--B1L0 is fifo:int_fifo|Mux20~1
B1L0 = (J1_COUNT[1] & ((B1L0 & ((B1_BUFFER[7][11]))) # (!B1L0 & (B1_BUFFER[6][11])))) # (!J1_COUNT[1] & (((B1L0))));


--B1_BUFFER[1][11] is fifo:int_fifo|BUFFER[1][11]
B1_BUFFER[1][11] = DFFEAS(E1L0, K1_LMWS,  ,  , B1L0,  ,  ,  ,  );


--B1_BUFFER[2][11] is fifo:int_fifo|BUFFER[2][11]
B1_BUFFER[2][11] = DFFEAS(E1L0, K1_LMWS,  ,  , B1L0,  ,  ,  ,  );


--B1_BUFFER[0][11] is fifo:int_fifo|BUFFER[0][11]
B1_BUFFER[0][11] = DFFEAS(E1L0, K1_LMWS,  ,  , B1L0,  ,  ,  ,  );


--B1L0 is fifo:int_fifo|Mux20~2
B1L0 = (J1_COUNT[0] & (((J1_COUNT[1])))) # (!J1_COUNT[0] & ((J1_COUNT[1] & (B1_BUFFER[2][11])) # (!J1_COUNT[1] & ((B1_BUFFER[0][11])))));


--B1_BUFFER[3][11] is fifo:int_fifo|BUFFER[3][11]
B1_BUFFER[3][11] = DFFEAS(E1L0, K1_LMWS,  ,  , B1L0,  ,  ,  ,  );


--B1L0 is fifo:int_fifo|Mux20~3
B1L0 = (J1_COUNT[0] & ((B1L0 & ((B1_BUFFER[3][11]))) # (!B1L0 & (B1_BUFFER[1][11])))) # (!J1_COUNT[0] & (((B1L0))));


--B1L0 is fifo:int_fifo|Mux20~4
B1L0 = (J1_COUNT[2] & (B1L0)) # (!J1_COUNT[2] & ((B1L0)));


--Y1L0 is datapath:u_datapath|datapath_scsi:u_datapath_scsi|datapath_8b_MUX:u_datapath_8b_MUX|Selector3~3
Y1L0 = (Y1L0 & ((Y1L0 & ((B1L0))) # (!Y1L0 & (B1L0)))) # (!Y1L0 & (((Y1L0))));


--Y1L0 is datapath:u_datapath|datapath_scsi:u_datapath_scsi|datapath_8b_MUX:u_datapath_8b_MUX|Selector3~4
Y1L0 = (D1_CPU2S_o & (Y1L0)) # (!D1_CPU2S_o & ((Y1L0)));


--B1_BUFFER[6][20] is fifo:int_fifo|BUFFER[6][20]
B1_BUFFER[6][20] = DFFEAS(E1L0, K1_UMWS,  ,  , B1L0,  ,  ,  ,  );


--B1_BUFFER[5][20] is fifo:int_fifo|BUFFER[5][20]
B1_BUFFER[5][20] = DFFEAS(E1L0, K1_UMWS,  ,  , B1L0,  ,  ,  ,  );


--B1_BUFFER[4][20] is fifo:int_fifo|BUFFER[4][20]
B1_BUFFER[4][20] = DFFEAS(E1L0, K1_UMWS,  ,  , B1L0,  ,  ,  ,  );


--B1L0 is fifo:int_fifo|Mux11~0
B1L0 = (J1_COUNT[1] & (((J1_COUNT[0])))) # (!J1_COUNT[1] & ((J1_COUNT[0] & (B1_BUFFER[5][20])) # (!J1_COUNT[0] & ((B1_BUFFER[4][20])))));


--B1_BUFFER[7][20] is fifo:int_fifo|BUFFER[7][20]
B1_BUFFER[7][20] = DFFEAS(E1L0, K1_UMWS,  ,  , B1L0,  ,  ,  ,  );


--B1L0 is fifo:int_fifo|Mux11~1
B1L0 = (J1_COUNT[1] & ((B1L0 & ((B1_BUFFER[7][20]))) # (!B1L0 & (B1_BUFFER[6][20])))) # (!J1_COUNT[1] & (((B1L0))));


--B1_BUFFER[1][20] is fifo:int_fifo|BUFFER[1][20]
B1_BUFFER[1][20] = DFFEAS(E1L0, K1_UMWS,  ,  , B1L0,  ,  ,  ,  );


--B1_BUFFER[2][20] is fifo:int_fifo|BUFFER[2][20]
B1_BUFFER[2][20] = DFFEAS(E1L0, K1_UMWS,  ,  , B1L0,  ,  ,  ,  );


--B1_BUFFER[0][20] is fifo:int_fifo|BUFFER[0][20]
B1_BUFFER[0][20] = DFFEAS(E1L0, K1_UMWS,  ,  , B1L0,  ,  ,  ,  );


--B1L0 is fifo:int_fifo|Mux11~2
B1L0 = (J1_COUNT[0] & (((J1_COUNT[1])))) # (!J1_COUNT[0] & ((J1_COUNT[1] & (B1_BUFFER[2][20])) # (!J1_COUNT[1] & ((B1_BUFFER[0][20])))));


--B1_BUFFER[3][20] is fifo:int_fifo|BUFFER[3][20]
B1_BUFFER[3][20] = DFFEAS(E1L0, K1_UMWS,  ,  , B1L0,  ,  ,  ,  );


--B1L0 is fifo:int_fifo|Mux11~3
B1L0 = (J1_COUNT[0] & ((B1L0 & ((B1_BUFFER[3][20]))) # (!B1L0 & (B1_BUFFER[1][20])))) # (!J1_COUNT[0] & (((B1L0))));


--B1L0 is fifo:int_fifo|Mux11~4
B1L0 = (J1_COUNT[2] & (B1L0)) # (!J1_COUNT[2] & ((B1L0)));


--B1_BUFFER[6][4] is fifo:int_fifo|BUFFER[6][4]
B1_BUFFER[6][4] = DFFEAS(E1L0, K1_LLWS,  ,  , B1L0,  ,  ,  ,  );


--B1_BUFFER[5][4] is fifo:int_fifo|BUFFER[5][4]
B1_BUFFER[5][4] = DFFEAS(E1L0, K1_LLWS,  ,  , B1L0,  ,  ,  ,  );


--B1_BUFFER[4][4] is fifo:int_fifo|BUFFER[4][4]
B1_BUFFER[4][4] = DFFEAS(E1L0, K1_LLWS,  ,  , B1L0,  ,  ,  ,  );


--B1L0 is fifo:int_fifo|Mux27~0
B1L0 = (J1_COUNT[1] & (((J1_COUNT[0])))) # (!J1_COUNT[1] & ((J1_COUNT[0] & (B1_BUFFER[5][4])) # (!J1_COUNT[0] & ((B1_BUFFER[4][4])))));


--B1_BUFFER[7][4] is fifo:int_fifo|BUFFER[7][4]
B1_BUFFER[7][4] = DFFEAS(E1L0, K1_LLWS,  ,  , B1L0,  ,  ,  ,  );


--B1L0 is fifo:int_fifo|Mux27~1
B1L0 = (J1_COUNT[1] & ((B1L0 & ((B1_BUFFER[7][4]))) # (!B1L0 & (B1_BUFFER[6][4])))) # (!J1_COUNT[1] & (((B1L0))));


--B1_BUFFER[1][4] is fifo:int_fifo|BUFFER[1][4]
B1_BUFFER[1][4] = DFFEAS(E1L0, K1_LLWS,  ,  , B1L0,  ,  ,  ,  );


--B1_BUFFER[2][4] is fifo:int_fifo|BUFFER[2][4]
B1_BUFFER[2][4] = DFFEAS(E1L0, K1_LLWS,  ,  , B1L0,  ,  ,  ,  );


--B1_BUFFER[0][4] is fifo:int_fifo|BUFFER[0][4]
B1_BUFFER[0][4] = DFFEAS(E1L0, K1_LLWS,  ,  , B1L0,  ,  ,  ,  );


--B1L0 is fifo:int_fifo|Mux27~2
B1L0 = (J1_COUNT[0] & (((J1_COUNT[1])))) # (!J1_COUNT[0] & ((J1_COUNT[1] & (B1_BUFFER[2][4])) # (!J1_COUNT[1] & ((B1_BUFFER[0][4])))));


--B1_BUFFER[3][4] is fifo:int_fifo|BUFFER[3][4]
B1_BUFFER[3][4] = DFFEAS(E1L0, K1_LLWS,  ,  , B1L0,  ,  ,  ,  );


--B1L0 is fifo:int_fifo|Mux27~3
B1L0 = (J1_COUNT[0] & ((B1L0 & ((B1_BUFFER[3][4]))) # (!B1L0 & (B1_BUFFER[1][4])))) # (!J1_COUNT[0] & (((B1L0))));


--B1L0 is fifo:int_fifo|Mux27~4
B1L0 = (J1_COUNT[2] & (B1L0)) # (!J1_COUNT[2] & ((B1L0)));


--B1_BUFFER[6][28] is fifo:int_fifo|BUFFER[6][28]
B1_BUFFER[6][28] = DFFEAS(E1L0, K1_UUWS,  ,  , B1L0,  ,  ,  ,  );


--B1_BUFFER[5][28] is fifo:int_fifo|BUFFER[5][28]
B1_BUFFER[5][28] = DFFEAS(E1L0, K1_UUWS,  ,  , B1L0,  ,  ,  ,  );


--B1_BUFFER[4][28] is fifo:int_fifo|BUFFER[4][28]
B1_BUFFER[4][28] = DFFEAS(E1L0, K1_UUWS,  ,  , B1L0,  ,  ,  ,  );


--B1L0 is fifo:int_fifo|Mux3~0
B1L0 = (J1_COUNT[1] & (((J1_COUNT[0])))) # (!J1_COUNT[1] & ((J1_COUNT[0] & (B1_BUFFER[5][28])) # (!J1_COUNT[0] & ((B1_BUFFER[4][28])))));


--B1_BUFFER[7][28] is fifo:int_fifo|BUFFER[7][28]
B1_BUFFER[7][28] = DFFEAS(E1L0, K1_UUWS,  ,  , B1L0,  ,  ,  ,  );


--B1L0 is fifo:int_fifo|Mux3~1
B1L0 = (J1_COUNT[1] & ((B1L0 & ((B1_BUFFER[7][28]))) # (!B1L0 & (B1_BUFFER[6][28])))) # (!J1_COUNT[1] & (((B1L0))));


--B1_BUFFER[1][28] is fifo:int_fifo|BUFFER[1][28]
B1_BUFFER[1][28] = DFFEAS(E1L0, K1_UUWS,  ,  , B1L0,  ,  ,  ,  );


--B1_BUFFER[2][28] is fifo:int_fifo|BUFFER[2][28]
B1_BUFFER[2][28] = DFFEAS(E1L0, K1_UUWS,  ,  , B1L0,  ,  ,  ,  );


--B1_BUFFER[0][28] is fifo:int_fifo|BUFFER[0][28]
B1_BUFFER[0][28] = DFFEAS(E1L0, K1_UUWS,  ,  , B1L0,  ,  ,  ,  );


--B1L0 is fifo:int_fifo|Mux3~2
B1L0 = (J1_COUNT[0] & (((J1_COUNT[1])))) # (!J1_COUNT[0] & ((J1_COUNT[1] & (B1_BUFFER[2][28])) # (!J1_COUNT[1] & ((B1_BUFFER[0][28])))));


--B1_BUFFER[3][28] is fifo:int_fifo|BUFFER[3][28]
B1_BUFFER[3][28] = DFFEAS(E1L0, K1_UUWS,  ,  , B1L0,  ,  ,  ,  );


--B1L0 is fifo:int_fifo|Mux3~3
B1L0 = (J1_COUNT[0] & ((B1L0 & ((B1_BUFFER[3][28]))) # (!B1L0 & (B1_BUFFER[1][28])))) # (!J1_COUNT[0] & (((B1L0))));


--B1L0 is fifo:int_fifo|Mux3~4
B1L0 = (J1_COUNT[2] & (B1L0)) # (!J1_COUNT[2] & ((B1L0)));


--Y1L0 is datapath:u_datapath|datapath_scsi:u_datapath_scsi|datapath_8b_MUX:u_datapath_8b_MUX|Selector4~0
Y1L0 = (Y1L0 & (((Y1L0)))) # (!Y1L0 & ((Y1L0 & (B1L0)) # (!Y1L0 & ((B1L0)))));


--B1_BUFFER[6][12] is fifo:int_fifo|BUFFER[6][12]
B1_BUFFER[6][12] = DFFEAS(E1L0, K1_LMWS,  ,  , B1L0,  ,  ,  ,  );


--B1_BUFFER[5][12] is fifo:int_fifo|BUFFER[5][12]
B1_BUFFER[5][12] = DFFEAS(E1L0, K1_LMWS,  ,  , B1L0,  ,  ,  ,  );


--B1_BUFFER[4][12] is fifo:int_fifo|BUFFER[4][12]
B1_BUFFER[4][12] = DFFEAS(E1L0, K1_LMWS,  ,  , B1L0,  ,  ,  ,  );


--B1L0 is fifo:int_fifo|Mux19~0
B1L0 = (J1_COUNT[1] & (((J1_COUNT[0])))) # (!J1_COUNT[1] & ((J1_COUNT[0] & (B1_BUFFER[5][12])) # (!J1_COUNT[0] & ((B1_BUFFER[4][12])))));


--B1_BUFFER[7][12] is fifo:int_fifo|BUFFER[7][12]
B1_BUFFER[7][12] = DFFEAS(E1L0, K1_LMWS,  ,  , B1L0,  ,  ,  ,  );


--B1L0 is fifo:int_fifo|Mux19~1
B1L0 = (J1_COUNT[1] & ((B1L0 & ((B1_BUFFER[7][12]))) # (!B1L0 & (B1_BUFFER[6][12])))) # (!J1_COUNT[1] & (((B1L0))));


--B1_BUFFER[1][12] is fifo:int_fifo|BUFFER[1][12]
B1_BUFFER[1][12] = DFFEAS(E1L0, K1_LMWS,  ,  , B1L0,  ,  ,  ,  );


--B1_BUFFER[2][12] is fifo:int_fifo|BUFFER[2][12]
B1_BUFFER[2][12] = DFFEAS(E1L0, K1_LMWS,  ,  , B1L0,  ,  ,  ,  );


--B1_BUFFER[0][12] is fifo:int_fifo|BUFFER[0][12]
B1_BUFFER[0][12] = DFFEAS(E1L0, K1_LMWS,  ,  , B1L0,  ,  ,  ,  );


--B1L0 is fifo:int_fifo|Mux19~2
B1L0 = (J1_COUNT[0] & (((J1_COUNT[1])))) # (!J1_COUNT[0] & ((J1_COUNT[1] & (B1_BUFFER[2][12])) # (!J1_COUNT[1] & ((B1_BUFFER[0][12])))));


--B1_BUFFER[3][12] is fifo:int_fifo|BUFFER[3][12]
B1_BUFFER[3][12] = DFFEAS(E1L0, K1_LMWS,  ,  , B1L0,  ,  ,  ,  );


--B1L0 is fifo:int_fifo|Mux19~3
B1L0 = (J1_COUNT[0] & ((B1L0 & ((B1_BUFFER[3][12]))) # (!B1L0 & (B1_BUFFER[1][12])))) # (!J1_COUNT[0] & (((B1L0))));


--B1L0 is fifo:int_fifo|Mux19~4
B1L0 = (J1_COUNT[2] & (B1L0)) # (!J1_COUNT[2] & ((B1L0)));


--Y1L0 is datapath:u_datapath|datapath_scsi:u_datapath_scsi|datapath_8b_MUX:u_datapath_8b_MUX|Selector4~1
Y1L0 = (Y1L0 & ((Y1L0 & ((B1L0))) # (!Y1L0 & (B1L0)))) # (!Y1L0 & (((Y1L0))));


--Y1L0 is datapath:u_datapath|datapath_scsi:u_datapath_scsi|datapath_8b_MUX:u_datapath_8b_MUX|Selector4~2
Y1L0 = (A1L0 & D1_S2F_o);


--V1_UD_LATCH[4] is datapath:u_datapath|datapath_input:u_datapath_input|UD_LATCH[4]
V1_UD_LATCH[4] = DFFEAS(A1L0, !C1_PDS,  ,  ,  ,  ,  ,  ,  );


--Y1L0 is datapath:u_datapath|datapath_scsi:u_datapath_scsi|datapath_8b_MUX:u_datapath_8b_MUX|Selector4~3
Y1L0 = (!D1_S2F_o & ((ADDR[3] & (A1L0)) # (!ADDR[3] & ((V1_UD_LATCH[4])))));


--Y1L0 is datapath:u_datapath|datapath_scsi:u_datapath_scsi|datapath_8b_MUX:u_datapath_8b_MUX|Selector4~4
Y1L0 = (D1_CPU2S_o & (((Y1L0) # (Y1L0)))) # (!D1_CPU2S_o & (Y1L0));


--B1_BUFFER[6][5] is fifo:int_fifo|BUFFER[6][5]
B1_BUFFER[6][5] = DFFEAS(E1L0, K1_LLWS,  ,  , B1L0,  ,  ,  ,  );


--B1_BUFFER[5][5] is fifo:int_fifo|BUFFER[5][5]
B1_BUFFER[5][5] = DFFEAS(E1L0, K1_LLWS,  ,  , B1L0,  ,  ,  ,  );


--B1_BUFFER[4][5] is fifo:int_fifo|BUFFER[4][5]
B1_BUFFER[4][5] = DFFEAS(E1L0, K1_LLWS,  ,  , B1L0,  ,  ,  ,  );


--B1L0 is fifo:int_fifo|Mux26~0
B1L0 = (J1_COUNT[1] & (((J1_COUNT[0])))) # (!J1_COUNT[1] & ((J1_COUNT[0] & (B1_BUFFER[5][5])) # (!J1_COUNT[0] & ((B1_BUFFER[4][5])))));


--B1_BUFFER[7][5] is fifo:int_fifo|BUFFER[7][5]
B1_BUFFER[7][5] = DFFEAS(E1L0, K1_LLWS,  ,  , B1L0,  ,  ,  ,  );


--B1L0 is fifo:int_fifo|Mux26~1
B1L0 = (J1_COUNT[1] & ((B1L0 & ((B1_BUFFER[7][5]))) # (!B1L0 & (B1_BUFFER[6][5])))) # (!J1_COUNT[1] & (((B1L0))));


--B1_BUFFER[1][5] is fifo:int_fifo|BUFFER[1][5]
B1_BUFFER[1][5] = DFFEAS(E1L0, K1_LLWS,  ,  , B1L0,  ,  ,  ,  );


--B1_BUFFER[2][5] is fifo:int_fifo|BUFFER[2][5]
B1_BUFFER[2][5] = DFFEAS(E1L0, K1_LLWS,  ,  , B1L0,  ,  ,  ,  );


--B1_BUFFER[0][5] is fifo:int_fifo|BUFFER[0][5]
B1_BUFFER[0][5] = DFFEAS(E1L0, K1_LLWS,  ,  , B1L0,  ,  ,  ,  );


--B1L0 is fifo:int_fifo|Mux26~2
B1L0 = (J1_COUNT[0] & (((J1_COUNT[1])))) # (!J1_COUNT[0] & ((J1_COUNT[1] & (B1_BUFFER[2][5])) # (!J1_COUNT[1] & ((B1_BUFFER[0][5])))));


--B1_BUFFER[3][5] is fifo:int_fifo|BUFFER[3][5]
B1_BUFFER[3][5] = DFFEAS(E1L0, K1_LLWS,  ,  , B1L0,  ,  ,  ,  );


--B1L0 is fifo:int_fifo|Mux26~3
B1L0 = (J1_COUNT[0] & ((B1L0 & ((B1_BUFFER[3][5]))) # (!B1L0 & (B1_BUFFER[1][5])))) # (!J1_COUNT[0] & (((B1L0))));


--B1L0 is fifo:int_fifo|Mux26~4
B1L0 = (J1_COUNT[2] & (B1L0)) # (!J1_COUNT[2] & ((B1L0)));


--B1_BUFFER[6][21] is fifo:int_fifo|BUFFER[6][21]
B1_BUFFER[6][21] = DFFEAS(E1L0, K1_UMWS,  ,  , B1L0,  ,  ,  ,  );


--B1_BUFFER[5][21] is fifo:int_fifo|BUFFER[5][21]
B1_BUFFER[5][21] = DFFEAS(E1L0, K1_UMWS,  ,  , B1L0,  ,  ,  ,  );


--B1_BUFFER[4][21] is fifo:int_fifo|BUFFER[4][21]
B1_BUFFER[4][21] = DFFEAS(E1L0, K1_UMWS,  ,  , B1L0,  ,  ,  ,  );


--B1L0 is fifo:int_fifo|Mux10~0
B1L0 = (J1_COUNT[1] & (((J1_COUNT[0])))) # (!J1_COUNT[1] & ((J1_COUNT[0] & (B1_BUFFER[5][21])) # (!J1_COUNT[0] & ((B1_BUFFER[4][21])))));


--B1_BUFFER[7][21] is fifo:int_fifo|BUFFER[7][21]
B1_BUFFER[7][21] = DFFEAS(E1L0, K1_UMWS,  ,  , B1L0,  ,  ,  ,  );


--B1L0 is fifo:int_fifo|Mux10~1
B1L0 = (J1_COUNT[1] & ((B1L0 & ((B1_BUFFER[7][21]))) # (!B1L0 & (B1_BUFFER[6][21])))) # (!J1_COUNT[1] & (((B1L0))));


--B1_BUFFER[1][21] is fifo:int_fifo|BUFFER[1][21]
B1_BUFFER[1][21] = DFFEAS(E1L0, K1_UMWS,  ,  , B1L0,  ,  ,  ,  );


--B1_BUFFER[2][21] is fifo:int_fifo|BUFFER[2][21]
B1_BUFFER[2][21] = DFFEAS(E1L0, K1_UMWS,  ,  , B1L0,  ,  ,  ,  );


--B1_BUFFER[0][21] is fifo:int_fifo|BUFFER[0][21]
B1_BUFFER[0][21] = DFFEAS(E1L0, K1_UMWS,  ,  , B1L0,  ,  ,  ,  );


--B1L0 is fifo:int_fifo|Mux10~2
B1L0 = (J1_COUNT[0] & (((J1_COUNT[1])))) # (!J1_COUNT[0] & ((J1_COUNT[1] & (B1_BUFFER[2][21])) # (!J1_COUNT[1] & ((B1_BUFFER[0][21])))));


--B1_BUFFER[3][21] is fifo:int_fifo|BUFFER[3][21]
B1_BUFFER[3][21] = DFFEAS(E1L0, K1_UMWS,  ,  , B1L0,  ,  ,  ,  );


--B1L0 is fifo:int_fifo|Mux10~3
B1L0 = (J1_COUNT[0] & ((B1L0 & ((B1_BUFFER[3][21]))) # (!B1L0 & (B1_BUFFER[1][21])))) # (!J1_COUNT[0] & (((B1L0))));


--B1L0 is fifo:int_fifo|Mux10~4
B1L0 = (J1_COUNT[2] & (B1L0)) # (!J1_COUNT[2] & ((B1L0)));


--B1_BUFFER[6][29] is fifo:int_fifo|BUFFER[6][29]
B1_BUFFER[6][29] = DFFEAS(E1L0, K1_UUWS,  ,  , B1L0,  ,  ,  ,  );


--B1_BUFFER[5][29] is fifo:int_fifo|BUFFER[5][29]
B1_BUFFER[5][29] = DFFEAS(E1L0, K1_UUWS,  ,  , B1L0,  ,  ,  ,  );


--B1_BUFFER[4][29] is fifo:int_fifo|BUFFER[4][29]
B1_BUFFER[4][29] = DFFEAS(E1L0, K1_UUWS,  ,  , B1L0,  ,  ,  ,  );


--B1L0 is fifo:int_fifo|Mux2~0
B1L0 = (J1_COUNT[1] & (((J1_COUNT[0])))) # (!J1_COUNT[1] & ((J1_COUNT[0] & (B1_BUFFER[5][29])) # (!J1_COUNT[0] & ((B1_BUFFER[4][29])))));


--B1_BUFFER[7][29] is fifo:int_fifo|BUFFER[7][29]
B1_BUFFER[7][29] = DFFEAS(E1L0, K1_UUWS,  ,  , B1L0,  ,  ,  ,  );


--B1L0 is fifo:int_fifo|Mux2~1
B1L0 = (J1_COUNT[1] & ((B1L0 & ((B1_BUFFER[7][29]))) # (!B1L0 & (B1_BUFFER[6][29])))) # (!J1_COUNT[1] & (((B1L0))));


--B1_BUFFER[1][29] is fifo:int_fifo|BUFFER[1][29]
B1_BUFFER[1][29] = DFFEAS(E1L0, K1_UUWS,  ,  , B1L0,  ,  ,  ,  );


--B1_BUFFER[2][29] is fifo:int_fifo|BUFFER[2][29]
B1_BUFFER[2][29] = DFFEAS(E1L0, K1_UUWS,  ,  , B1L0,  ,  ,  ,  );


--B1_BUFFER[0][29] is fifo:int_fifo|BUFFER[0][29]
B1_BUFFER[0][29] = DFFEAS(E1L0, K1_UUWS,  ,  , B1L0,  ,  ,  ,  );


--B1L0 is fifo:int_fifo|Mux2~2
B1L0 = (J1_COUNT[0] & (((J1_COUNT[1])))) # (!J1_COUNT[0] & ((J1_COUNT[1] & (B1_BUFFER[2][29])) # (!J1_COUNT[1] & ((B1_BUFFER[0][29])))));


--B1_BUFFER[3][29] is fifo:int_fifo|BUFFER[3][29]
B1_BUFFER[3][29] = DFFEAS(E1L0, K1_UUWS,  ,  , B1L0,  ,  ,  ,  );


--B1L0 is fifo:int_fifo|Mux2~3
B1L0 = (J1_COUNT[0] & ((B1L0 & ((B1_BUFFER[3][29]))) # (!B1L0 & (B1_BUFFER[1][29])))) # (!J1_COUNT[0] & (((B1L0))));


--B1L0 is fifo:int_fifo|Mux2~4
B1L0 = (J1_COUNT[2] & (B1L0)) # (!J1_COUNT[2] & ((B1L0)));


--Y1L0 is datapath:u_datapath|datapath_scsi:u_datapath_scsi|datapath_8b_MUX:u_datapath_8b_MUX|Selector5~2
Y1L0 = (Y1L0 & (((Y1L0)))) # (!Y1L0 & ((Y1L0 & (B1L0)) # (!Y1L0 & ((B1L0)))));


--B1_BUFFER[6][13] is fifo:int_fifo|BUFFER[6][13]
B1_BUFFER[6][13] = DFFEAS(E1L0, K1_LMWS,  ,  , B1L0,  ,  ,  ,  );


--B1_BUFFER[5][13] is fifo:int_fifo|BUFFER[5][13]
B1_BUFFER[5][13] = DFFEAS(E1L0, K1_LMWS,  ,  , B1L0,  ,  ,  ,  );


--B1_BUFFER[4][13] is fifo:int_fifo|BUFFER[4][13]
B1_BUFFER[4][13] = DFFEAS(E1L0, K1_LMWS,  ,  , B1L0,  ,  ,  ,  );


--B1L0 is fifo:int_fifo|Mux18~0
B1L0 = (J1_COUNT[1] & (((J1_COUNT[0])))) # (!J1_COUNT[1] & ((J1_COUNT[0] & (B1_BUFFER[5][13])) # (!J1_COUNT[0] & ((B1_BUFFER[4][13])))));


--B1_BUFFER[7][13] is fifo:int_fifo|BUFFER[7][13]
B1_BUFFER[7][13] = DFFEAS(E1L0, K1_LMWS,  ,  , B1L0,  ,  ,  ,  );


--B1L0 is fifo:int_fifo|Mux18~1
B1L0 = (J1_COUNT[1] & ((B1L0 & ((B1_BUFFER[7][13]))) # (!B1L0 & (B1_BUFFER[6][13])))) # (!J1_COUNT[1] & (((B1L0))));


--B1_BUFFER[1][13] is fifo:int_fifo|BUFFER[1][13]
B1_BUFFER[1][13] = DFFEAS(E1L0, K1_LMWS,  ,  , B1L0,  ,  ,  ,  );


--B1_BUFFER[2][13] is fifo:int_fifo|BUFFER[2][13]
B1_BUFFER[2][13] = DFFEAS(E1L0, K1_LMWS,  ,  , B1L0,  ,  ,  ,  );


--B1_BUFFER[0][13] is fifo:int_fifo|BUFFER[0][13]
B1_BUFFER[0][13] = DFFEAS(E1L0, K1_LMWS,  ,  , B1L0,  ,  ,  ,  );


--B1L0 is fifo:int_fifo|Mux18~2
B1L0 = (J1_COUNT[0] & (((J1_COUNT[1])))) # (!J1_COUNT[0] & ((J1_COUNT[1] & (B1_BUFFER[2][13])) # (!J1_COUNT[1] & ((B1_BUFFER[0][13])))));


--B1_BUFFER[3][13] is fifo:int_fifo|BUFFER[3][13]
B1_BUFFER[3][13] = DFFEAS(E1L0, K1_LMWS,  ,  , B1L0,  ,  ,  ,  );


--B1L0 is fifo:int_fifo|Mux18~3
B1L0 = (J1_COUNT[0] & ((B1L0 & ((B1_BUFFER[3][13]))) # (!B1L0 & (B1_BUFFER[1][13])))) # (!J1_COUNT[0] & (((B1L0))));


--B1L0 is fifo:int_fifo|Mux18~4
B1L0 = (J1_COUNT[2] & (B1L0)) # (!J1_COUNT[2] & ((B1L0)));


--Y1L0 is datapath:u_datapath|datapath_scsi:u_datapath_scsi|datapath_8b_MUX:u_datapath_8b_MUX|Selector5~3
Y1L0 = (Y1L0 & ((Y1L0 & ((B1L0))) # (!Y1L0 & (B1L0)))) # (!Y1L0 & (((Y1L0))));


--Y1L0 is datapath:u_datapath|datapath_scsi:u_datapath_scsi|datapath_8b_MUX:u_datapath_8b_MUX|Selector5~4
Y1L0 = (A1L0 & D1_S2F_o);


--V1_UD_LATCH[5] is datapath:u_datapath|datapath_input:u_datapath_input|UD_LATCH[5]
V1_UD_LATCH[5] = DFFEAS(A1L0, !C1_PDS,  ,  ,  ,  ,  ,  ,  );


--Y1L0 is datapath:u_datapath|datapath_scsi:u_datapath_scsi|datapath_8b_MUX:u_datapath_8b_MUX|Selector5~5
Y1L0 = (!D1_S2F_o & ((ADDR[3] & (A1L0)) # (!ADDR[3] & ((V1_UD_LATCH[5])))));


--Y1L0 is datapath:u_datapath|datapath_scsi:u_datapath_scsi|datapath_8b_MUX:u_datapath_8b_MUX|Selector5~6
Y1L0 = (D1_CPU2S_o & (((Y1L0) # (Y1L0)))) # (!D1_CPU2S_o & (Y1L0));


--B1_BUFFER[6][22] is fifo:int_fifo|BUFFER[6][22]
B1_BUFFER[6][22] = DFFEAS(E1L0, K1_UMWS,  ,  , B1L0,  ,  ,  ,  );


--B1_BUFFER[5][22] is fifo:int_fifo|BUFFER[5][22]
B1_BUFFER[5][22] = DFFEAS(E1L0, K1_UMWS,  ,  , B1L0,  ,  ,  ,  );


--B1_BUFFER[4][22] is fifo:int_fifo|BUFFER[4][22]
B1_BUFFER[4][22] = DFFEAS(E1L0, K1_UMWS,  ,  , B1L0,  ,  ,  ,  );


--B1L0 is fifo:int_fifo|Mux9~0
B1L0 = (J1_COUNT[1] & (((J1_COUNT[0])))) # (!J1_COUNT[1] & ((J1_COUNT[0] & (B1_BUFFER[5][22])) # (!J1_COUNT[0] & ((B1_BUFFER[4][22])))));


--B1_BUFFER[7][22] is fifo:int_fifo|BUFFER[7][22]
B1_BUFFER[7][22] = DFFEAS(E1L0, K1_UMWS,  ,  , B1L0,  ,  ,  ,  );


--B1L0 is fifo:int_fifo|Mux9~1
B1L0 = (J1_COUNT[1] & ((B1L0 & ((B1_BUFFER[7][22]))) # (!B1L0 & (B1_BUFFER[6][22])))) # (!J1_COUNT[1] & (((B1L0))));


--B1_BUFFER[1][22] is fifo:int_fifo|BUFFER[1][22]
B1_BUFFER[1][22] = DFFEAS(E1L0, K1_UMWS,  ,  , B1L0,  ,  ,  ,  );


--B1_BUFFER[2][22] is fifo:int_fifo|BUFFER[2][22]
B1_BUFFER[2][22] = DFFEAS(E1L0, K1_UMWS,  ,  , B1L0,  ,  ,  ,  );


--B1_BUFFER[0][22] is fifo:int_fifo|BUFFER[0][22]
B1_BUFFER[0][22] = DFFEAS(E1L0, K1_UMWS,  ,  , B1L0,  ,  ,  ,  );


--B1L0 is fifo:int_fifo|Mux9~2
B1L0 = (J1_COUNT[0] & (((J1_COUNT[1])))) # (!J1_COUNT[0] & ((J1_COUNT[1] & (B1_BUFFER[2][22])) # (!J1_COUNT[1] & ((B1_BUFFER[0][22])))));


--B1_BUFFER[3][22] is fifo:int_fifo|BUFFER[3][22]
B1_BUFFER[3][22] = DFFEAS(E1L0, K1_UMWS,  ,  , B1L0,  ,  ,  ,  );


--B1L0 is fifo:int_fifo|Mux9~3
B1L0 = (J1_COUNT[0] & ((B1L0 & ((B1_BUFFER[3][22]))) # (!B1L0 & (B1_BUFFER[1][22])))) # (!J1_COUNT[0] & (((B1L0))));


--B1L0 is fifo:int_fifo|Mux9~4
B1L0 = (J1_COUNT[2] & (B1L0)) # (!J1_COUNT[2] & ((B1L0)));


--B1_BUFFER[6][6] is fifo:int_fifo|BUFFER[6][6]
B1_BUFFER[6][6] = DFFEAS(E1L0, K1_LLWS,  ,  , B1L0,  ,  ,  ,  );


--B1_BUFFER[5][6] is fifo:int_fifo|BUFFER[5][6]
B1_BUFFER[5][6] = DFFEAS(E1L0, K1_LLWS,  ,  , B1L0,  ,  ,  ,  );


--B1_BUFFER[4][6] is fifo:int_fifo|BUFFER[4][6]
B1_BUFFER[4][6] = DFFEAS(E1L0, K1_LLWS,  ,  , B1L0,  ,  ,  ,  );


--B1L0 is fifo:int_fifo|Mux25~0
B1L0 = (J1_COUNT[1] & (((J1_COUNT[0])))) # (!J1_COUNT[1] & ((J1_COUNT[0] & (B1_BUFFER[5][6])) # (!J1_COUNT[0] & ((B1_BUFFER[4][6])))));


--B1_BUFFER[7][6] is fifo:int_fifo|BUFFER[7][6]
B1_BUFFER[7][6] = DFFEAS(E1L0, K1_LLWS,  ,  , B1L0,  ,  ,  ,  );


--B1L0 is fifo:int_fifo|Mux25~1
B1L0 = (J1_COUNT[1] & ((B1L0 & ((B1_BUFFER[7][6]))) # (!B1L0 & (B1_BUFFER[6][6])))) # (!J1_COUNT[1] & (((B1L0))));


--B1_BUFFER[1][6] is fifo:int_fifo|BUFFER[1][6]
B1_BUFFER[1][6] = DFFEAS(E1L0, K1_LLWS,  ,  , B1L0,  ,  ,  ,  );


--B1_BUFFER[2][6] is fifo:int_fifo|BUFFER[2][6]
B1_BUFFER[2][6] = DFFEAS(E1L0, K1_LLWS,  ,  , B1L0,  ,  ,  ,  );


--B1_BUFFER[0][6] is fifo:int_fifo|BUFFER[0][6]
B1_BUFFER[0][6] = DFFEAS(E1L0, K1_LLWS,  ,  , B1L0,  ,  ,  ,  );


--B1L0 is fifo:int_fifo|Mux25~2
B1L0 = (J1_COUNT[0] & (((J1_COUNT[1])))) # (!J1_COUNT[0] & ((J1_COUNT[1] & (B1_BUFFER[2][6])) # (!J1_COUNT[1] & ((B1_BUFFER[0][6])))));


--B1_BUFFER[3][6] is fifo:int_fifo|BUFFER[3][6]
B1_BUFFER[3][6] = DFFEAS(E1L0, K1_LLWS,  ,  , B1L0,  ,  ,  ,  );


--B1L0 is fifo:int_fifo|Mux25~3
B1L0 = (J1_COUNT[0] & ((B1L0 & ((B1_BUFFER[3][6]))) # (!B1L0 & (B1_BUFFER[1][6])))) # (!J1_COUNT[0] & (((B1L0))));


--B1L0 is fifo:int_fifo|Mux25~4
B1L0 = (J1_COUNT[2] & (B1L0)) # (!J1_COUNT[2] & ((B1L0)));


--B1_BUFFER[6][30] is fifo:int_fifo|BUFFER[6][30]
B1_BUFFER[6][30] = DFFEAS(E1L0, K1_UUWS,  ,  , B1L0,  ,  ,  ,  );


--B1_BUFFER[5][30] is fifo:int_fifo|BUFFER[5][30]
B1_BUFFER[5][30] = DFFEAS(E1L0, K1_UUWS,  ,  , B1L0,  ,  ,  ,  );


--B1_BUFFER[4][30] is fifo:int_fifo|BUFFER[4][30]
B1_BUFFER[4][30] = DFFEAS(E1L0, K1_UUWS,  ,  , B1L0,  ,  ,  ,  );


--B1L0 is fifo:int_fifo|Mux1~0
B1L0 = (J1_COUNT[1] & (((J1_COUNT[0])))) # (!J1_COUNT[1] & ((J1_COUNT[0] & (B1_BUFFER[5][30])) # (!J1_COUNT[0] & ((B1_BUFFER[4][30])))));


--B1_BUFFER[7][30] is fifo:int_fifo|BUFFER[7][30]
B1_BUFFER[7][30] = DFFEAS(E1L0, K1_UUWS,  ,  , B1L0,  ,  ,  ,  );


--B1L0 is fifo:int_fifo|Mux1~1
B1L0 = (J1_COUNT[1] & ((B1L0 & ((B1_BUFFER[7][30]))) # (!B1L0 & (B1_BUFFER[6][30])))) # (!J1_COUNT[1] & (((B1L0))));


--B1_BUFFER[1][30] is fifo:int_fifo|BUFFER[1][30]
B1_BUFFER[1][30] = DFFEAS(E1L0, K1_UUWS,  ,  , B1L0,  ,  ,  ,  );


--B1_BUFFER[2][30] is fifo:int_fifo|BUFFER[2][30]
B1_BUFFER[2][30] = DFFEAS(E1L0, K1_UUWS,  ,  , B1L0,  ,  ,  ,  );


--B1_BUFFER[0][30] is fifo:int_fifo|BUFFER[0][30]
B1_BUFFER[0][30] = DFFEAS(E1L0, K1_UUWS,  ,  , B1L0,  ,  ,  ,  );


--B1L0 is fifo:int_fifo|Mux1~2
B1L0 = (J1_COUNT[0] & (((J1_COUNT[1])))) # (!J1_COUNT[0] & ((J1_COUNT[1] & (B1_BUFFER[2][30])) # (!J1_COUNT[1] & ((B1_BUFFER[0][30])))));


--B1_BUFFER[3][30] is fifo:int_fifo|BUFFER[3][30]
B1_BUFFER[3][30] = DFFEAS(E1L0, K1_UUWS,  ,  , B1L0,  ,  ,  ,  );


--B1L0 is fifo:int_fifo|Mux1~3
B1L0 = (J1_COUNT[0] & ((B1L0 & ((B1_BUFFER[3][30]))) # (!B1L0 & (B1_BUFFER[1][30])))) # (!J1_COUNT[0] & (((B1L0))));


--B1L0 is fifo:int_fifo|Mux1~4
B1L0 = (J1_COUNT[2] & (B1L0)) # (!J1_COUNT[2] & ((B1L0)));


--Y1L0 is datapath:u_datapath|datapath_scsi:u_datapath_scsi|datapath_8b_MUX:u_datapath_8b_MUX|Selector6~0
Y1L0 = (Y1L0 & (((Y1L0)))) # (!Y1L0 & ((Y1L0 & (B1L0)) # (!Y1L0 & ((B1L0)))));


--B1_BUFFER[6][14] is fifo:int_fifo|BUFFER[6][14]
B1_BUFFER[6][14] = DFFEAS(E1L0, K1_LMWS,  ,  , B1L0,  ,  ,  ,  );


--B1_BUFFER[5][14] is fifo:int_fifo|BUFFER[5][14]
B1_BUFFER[5][14] = DFFEAS(E1L0, K1_LMWS,  ,  , B1L0,  ,  ,  ,  );


--B1_BUFFER[4][14] is fifo:int_fifo|BUFFER[4][14]
B1_BUFFER[4][14] = DFFEAS(E1L0, K1_LMWS,  ,  , B1L0,  ,  ,  ,  );


--B1L0 is fifo:int_fifo|Mux17~0
B1L0 = (J1_COUNT[1] & (((J1_COUNT[0])))) # (!J1_COUNT[1] & ((J1_COUNT[0] & (B1_BUFFER[5][14])) # (!J1_COUNT[0] & ((B1_BUFFER[4][14])))));


--B1_BUFFER[7][14] is fifo:int_fifo|BUFFER[7][14]
B1_BUFFER[7][14] = DFFEAS(E1L0, K1_LMWS,  ,  , B1L0,  ,  ,  ,  );


--B1L0 is fifo:int_fifo|Mux17~1
B1L0 = (J1_COUNT[1] & ((B1L0 & ((B1_BUFFER[7][14]))) # (!B1L0 & (B1_BUFFER[6][14])))) # (!J1_COUNT[1] & (((B1L0))));


--B1_BUFFER[1][14] is fifo:int_fifo|BUFFER[1][14]
B1_BUFFER[1][14] = DFFEAS(E1L0, K1_LMWS,  ,  , B1L0,  ,  ,  ,  );


--B1_BUFFER[2][14] is fifo:int_fifo|BUFFER[2][14]
B1_BUFFER[2][14] = DFFEAS(E1L0, K1_LMWS,  ,  , B1L0,  ,  ,  ,  );


--B1_BUFFER[0][14] is fifo:int_fifo|BUFFER[0][14]
B1_BUFFER[0][14] = DFFEAS(E1L0, K1_LMWS,  ,  , B1L0,  ,  ,  ,  );


--B1L0 is fifo:int_fifo|Mux17~2
B1L0 = (J1_COUNT[0] & (((J1_COUNT[1])))) # (!J1_COUNT[0] & ((J1_COUNT[1] & (B1_BUFFER[2][14])) # (!J1_COUNT[1] & ((B1_BUFFER[0][14])))));


--B1_BUFFER[3][14] is fifo:int_fifo|BUFFER[3][14]
B1_BUFFER[3][14] = DFFEAS(E1L0, K1_LMWS,  ,  , B1L0,  ,  ,  ,  );


--B1L0 is fifo:int_fifo|Mux17~3
B1L0 = (J1_COUNT[0] & ((B1L0 & ((B1_BUFFER[3][14]))) # (!B1L0 & (B1_BUFFER[1][14])))) # (!J1_COUNT[0] & (((B1L0))));


--B1L0 is fifo:int_fifo|Mux17~4
B1L0 = (J1_COUNT[2] & (B1L0)) # (!J1_COUNT[2] & ((B1L0)));


--Y1L0 is datapath:u_datapath|datapath_scsi:u_datapath_scsi|datapath_8b_MUX:u_datapath_8b_MUX|Selector6~1
Y1L0 = (Y1L0 & ((Y1L0 & ((B1L0))) # (!Y1L0 & (B1L0)))) # (!Y1L0 & (((Y1L0))));


--Y1L0 is datapath:u_datapath|datapath_scsi:u_datapath_scsi|datapath_8b_MUX:u_datapath_8b_MUX|Selector6~2
Y1L0 = (A1L0 & D1_S2F_o);


--V1_UD_LATCH[6] is datapath:u_datapath|datapath_input:u_datapath_input|UD_LATCH[6]
V1_UD_LATCH[6] = DFFEAS(A1L0, !C1_PDS,  ,  ,  ,  ,  ,  ,  );


--Y1L0 is datapath:u_datapath|datapath_scsi:u_datapath_scsi|datapath_8b_MUX:u_datapath_8b_MUX|Selector6~3
Y1L0 = (!D1_S2F_o & ((ADDR[3] & (A1L0)) # (!ADDR[3] & ((V1_UD_LATCH[6])))));


--Y1L0 is datapath:u_datapath|datapath_scsi:u_datapath_scsi|datapath_8b_MUX:u_datapath_8b_MUX|Selector6~4
Y1L0 = (D1_CPU2S_o & (((Y1L0) # (Y1L0)))) # (!D1_CPU2S_o & (Y1L0));


--V1_UD_LATCH[7] is datapath:u_datapath|datapath_input:u_datapath_input|UD_LATCH[7]
V1_UD_LATCH[7] = DFFEAS(A1L0, !C1_PDS,  ,  ,  ,  ,  ,  ,  );


--Y1L0 is datapath:u_datapath|datapath_scsi:u_datapath_scsi|datapath_8b_MUX:u_datapath_8b_MUX|Selector7~0
Y1L0 = (ADDR[3] & (A1L0)) # (!ADDR[3] & ((V1_UD_LATCH[7])));


--Y1L0 is datapath:u_datapath|datapath_scsi:u_datapath_scsi|datapath_8b_MUX:u_datapath_8b_MUX|Selector7~1
Y1L0 = (D1_S2F_o & (A1L0)) # (!D1_S2F_o & ((Y1L0)));


--B1_BUFFER[6][7] is fifo:int_fifo|BUFFER[6][7]
B1_BUFFER[6][7] = DFFEAS(E1L0, K1_LLWS,  ,  , B1L0,  ,  ,  ,  );


--B1_BUFFER[5][7] is fifo:int_fifo|BUFFER[5][7]
B1_BUFFER[5][7] = DFFEAS(E1L0, K1_LLWS,  ,  , B1L0,  ,  ,  ,  );


--B1_BUFFER[4][7] is fifo:int_fifo|BUFFER[4][7]
B1_BUFFER[4][7] = DFFEAS(E1L0, K1_LLWS,  ,  , B1L0,  ,  ,  ,  );


--B1L0 is fifo:int_fifo|Mux24~0
B1L0 = (J1_COUNT[1] & (((J1_COUNT[0])))) # (!J1_COUNT[1] & ((J1_COUNT[0] & (B1_BUFFER[5][7])) # (!J1_COUNT[0] & ((B1_BUFFER[4][7])))));


--B1_BUFFER[7][7] is fifo:int_fifo|BUFFER[7][7]
B1_BUFFER[7][7] = DFFEAS(E1L0, K1_LLWS,  ,  , B1L0,  ,  ,  ,  );


--B1L0 is fifo:int_fifo|Mux24~1
B1L0 = (J1_COUNT[1] & ((B1L0 & ((B1_BUFFER[7][7]))) # (!B1L0 & (B1_BUFFER[6][7])))) # (!J1_COUNT[1] & (((B1L0))));


--B1_BUFFER[1][7] is fifo:int_fifo|BUFFER[1][7]
B1_BUFFER[1][7] = DFFEAS(E1L0, K1_LLWS,  ,  , B1L0,  ,  ,  ,  );


--B1_BUFFER[2][7] is fifo:int_fifo|BUFFER[2][7]
B1_BUFFER[2][7] = DFFEAS(E1L0, K1_LLWS,  ,  , B1L0,  ,  ,  ,  );


--B1_BUFFER[0][7] is fifo:int_fifo|BUFFER[0][7]
B1_BUFFER[0][7] = DFFEAS(E1L0, K1_LLWS,  ,  , B1L0,  ,  ,  ,  );


--B1L0 is fifo:int_fifo|Mux24~2
B1L0 = (J1_COUNT[0] & (((J1_COUNT[1])))) # (!J1_COUNT[0] & ((J1_COUNT[1] & (B1_BUFFER[2][7])) # (!J1_COUNT[1] & ((B1_BUFFER[0][7])))));


--B1_BUFFER[3][7] is fifo:int_fifo|BUFFER[3][7]
B1_BUFFER[3][7] = DFFEAS(E1L0, K1_LLWS,  ,  , B1L0,  ,  ,  ,  );


--B1L0 is fifo:int_fifo|Mux24~3
B1L0 = (J1_COUNT[0] & ((B1L0 & ((B1_BUFFER[3][7]))) # (!B1L0 & (B1_BUFFER[1][7])))) # (!J1_COUNT[0] & (((B1L0))));


--B1L0 is fifo:int_fifo|Mux24~4
B1L0 = (J1_COUNT[2] & (B1L0)) # (!J1_COUNT[2] & ((B1L0)));


--B1_BUFFER[6][23] is fifo:int_fifo|BUFFER[6][23]
B1_BUFFER[6][23] = DFFEAS(E1L0, K1_UMWS,  ,  , B1L0,  ,  ,  ,  );


--B1_BUFFER[5][23] is fifo:int_fifo|BUFFER[5][23]
B1_BUFFER[5][23] = DFFEAS(E1L0, K1_UMWS,  ,  , B1L0,  ,  ,  ,  );


--B1_BUFFER[4][23] is fifo:int_fifo|BUFFER[4][23]
B1_BUFFER[4][23] = DFFEAS(E1L0, K1_UMWS,  ,  , B1L0,  ,  ,  ,  );


--B1L0 is fifo:int_fifo|Mux8~0
B1L0 = (J1_COUNT[1] & (((J1_COUNT[0])))) # (!J1_COUNT[1] & ((J1_COUNT[0] & (B1_BUFFER[5][23])) # (!J1_COUNT[0] & ((B1_BUFFER[4][23])))));


--B1_BUFFER[7][23] is fifo:int_fifo|BUFFER[7][23]
B1_BUFFER[7][23] = DFFEAS(E1L0, K1_UMWS,  ,  , B1L0,  ,  ,  ,  );


--B1L0 is fifo:int_fifo|Mux8~1
B1L0 = (J1_COUNT[1] & ((B1L0 & ((B1_BUFFER[7][23]))) # (!B1L0 & (B1_BUFFER[6][23])))) # (!J1_COUNT[1] & (((B1L0))));


--B1_BUFFER[1][23] is fifo:int_fifo|BUFFER[1][23]
B1_BUFFER[1][23] = DFFEAS(E1L0, K1_UMWS,  ,  , B1L0,  ,  ,  ,  );


--B1_BUFFER[2][23] is fifo:int_fifo|BUFFER[2][23]
B1_BUFFER[2][23] = DFFEAS(E1L0, K1_UMWS,  ,  , B1L0,  ,  ,  ,  );


--B1_BUFFER[0][23] is fifo:int_fifo|BUFFER[0][23]
B1_BUFFER[0][23] = DFFEAS(E1L0, K1_UMWS,  ,  , B1L0,  ,  ,  ,  );


--B1L0 is fifo:int_fifo|Mux8~2
B1L0 = (J1_COUNT[0] & (((J1_COUNT[1])))) # (!J1_COUNT[0] & ((J1_COUNT[1] & (B1_BUFFER[2][23])) # (!J1_COUNT[1] & ((B1_BUFFER[0][23])))));


--B1_BUFFER[3][23] is fifo:int_fifo|BUFFER[3][23]
B1_BUFFER[3][23] = DFFEAS(E1L0, K1_UMWS,  ,  , B1L0,  ,  ,  ,  );


--B1L0 is fifo:int_fifo|Mux8~3
B1L0 = (J1_COUNT[0] & ((B1L0 & ((B1_BUFFER[3][23]))) # (!B1L0 & (B1_BUFFER[1][23])))) # (!J1_COUNT[0] & (((B1L0))));


--B1L0 is fifo:int_fifo|Mux8~4
B1L0 = (J1_COUNT[2] & (B1L0)) # (!J1_COUNT[2] & ((B1L0)));


--B1_BUFFER[6][31] is fifo:int_fifo|BUFFER[6][31]
B1_BUFFER[6][31] = DFFEAS(E1L0, K1_UUWS,  ,  , B1L0,  ,  ,  ,  );


--B1_BUFFER[5][31] is fifo:int_fifo|BUFFER[5][31]
B1_BUFFER[5][31] = DFFEAS(E1L0, K1_UUWS,  ,  , B1L0,  ,  ,  ,  );


--B1_BUFFER[4][31] is fifo:int_fifo|BUFFER[4][31]
B1_BUFFER[4][31] = DFFEAS(E1L0, K1_UUWS,  ,  , B1L0,  ,  ,  ,  );


--B1L0 is fifo:int_fifo|Mux0~0
B1L0 = (J1_COUNT[1] & (((J1_COUNT[0])))) # (!J1_COUNT[1] & ((J1_COUNT[0] & (B1_BUFFER[5][31])) # (!J1_COUNT[0] & ((B1_BUFFER[4][31])))));


--B1_BUFFER[7][31] is fifo:int_fifo|BUFFER[7][31]
B1_BUFFER[7][31] = DFFEAS(E1L0, K1_UUWS,  ,  , B1L0,  ,  ,  ,  );


--B1L0 is fifo:int_fifo|Mux0~1
B1L0 = (J1_COUNT[1] & ((B1L0 & ((B1_BUFFER[7][31]))) # (!B1L0 & (B1_BUFFER[6][31])))) # (!J1_COUNT[1] & (((B1L0))));


--B1_BUFFER[1][31] is fifo:int_fifo|BUFFER[1][31]
B1_BUFFER[1][31] = DFFEAS(E1L0, K1_UUWS,  ,  , B1L0,  ,  ,  ,  );


--B1_BUFFER[2][31] is fifo:int_fifo|BUFFER[2][31]
B1_BUFFER[2][31] = DFFEAS(E1L0, K1_UUWS,  ,  , B1L0,  ,  ,  ,  );


--B1_BUFFER[0][31] is fifo:int_fifo|BUFFER[0][31]
B1_BUFFER[0][31] = DFFEAS(E1L0, K1_UUWS,  ,  , B1L0,  ,  ,  ,  );


--B1L0 is fifo:int_fifo|Mux0~2
B1L0 = (J1_COUNT[0] & (((J1_COUNT[1])))) # (!J1_COUNT[0] & ((J1_COUNT[1] & (B1_BUFFER[2][31])) # (!J1_COUNT[1] & ((B1_BUFFER[0][31])))));


--B1_BUFFER[3][31] is fifo:int_fifo|BUFFER[3][31]
B1_BUFFER[3][31] = DFFEAS(E1L0, K1_UUWS,  ,  , B1L0,  ,  ,  ,  );


--B1L0 is fifo:int_fifo|Mux0~3
B1L0 = (J1_COUNT[0] & ((B1L0 & ((B1_BUFFER[3][31]))) # (!B1L0 & (B1_BUFFER[1][31])))) # (!J1_COUNT[0] & (((B1L0))));


--B1L0 is fifo:int_fifo|Mux0~4
B1L0 = (J1_COUNT[2] & (B1L0)) # (!J1_COUNT[2] & ((B1L0)));


--Y1L0 is datapath:u_datapath|datapath_scsi:u_datapath_scsi|datapath_8b_MUX:u_datapath_8b_MUX|Selector7~2
Y1L0 = (Y1L0 & (((Y1L0)))) # (!Y1L0 & ((Y1L0 & (B1L0)) # (!Y1L0 & ((B1L0)))));


--B1_BUFFER[6][15] is fifo:int_fifo|BUFFER[6][15]
B1_BUFFER[6][15] = DFFEAS(E1L0, K1_LMWS,  ,  , B1L0,  ,  ,  ,  );


--B1_BUFFER[5][15] is fifo:int_fifo|BUFFER[5][15]
B1_BUFFER[5][15] = DFFEAS(E1L0, K1_LMWS,  ,  , B1L0,  ,  ,  ,  );


--B1_BUFFER[4][15] is fifo:int_fifo|BUFFER[4][15]
B1_BUFFER[4][15] = DFFEAS(E1L0, K1_LMWS,  ,  , B1L0,  ,  ,  ,  );


--B1L0 is fifo:int_fifo|Mux16~0
B1L0 = (J1_COUNT[1] & (((J1_COUNT[0])))) # (!J1_COUNT[1] & ((J1_COUNT[0] & (B1_BUFFER[5][15])) # (!J1_COUNT[0] & ((B1_BUFFER[4][15])))));


--B1_BUFFER[7][15] is fifo:int_fifo|BUFFER[7][15]
B1_BUFFER[7][15] = DFFEAS(E1L0, K1_LMWS,  ,  , B1L0,  ,  ,  ,  );


--B1L0 is fifo:int_fifo|Mux16~1
B1L0 = (J1_COUNT[1] & ((B1L0 & ((B1_BUFFER[7][15]))) # (!B1L0 & (B1_BUFFER[6][15])))) # (!J1_COUNT[1] & (((B1L0))));


--B1_BUFFER[1][15] is fifo:int_fifo|BUFFER[1][15]
B1_BUFFER[1][15] = DFFEAS(E1L0, K1_LMWS,  ,  , B1L0,  ,  ,  ,  );


--B1_BUFFER[2][15] is fifo:int_fifo|BUFFER[2][15]
B1_BUFFER[2][15] = DFFEAS(E1L0, K1_LMWS,  ,  , B1L0,  ,  ,  ,  );


--B1_BUFFER[0][15] is fifo:int_fifo|BUFFER[0][15]
B1_BUFFER[0][15] = DFFEAS(E1L0, K1_LMWS,  ,  , B1L0,  ,  ,  ,  );


--B1L0 is fifo:int_fifo|Mux16~2
B1L0 = (J1_COUNT[0] & (((J1_COUNT[1])))) # (!J1_COUNT[0] & ((J1_COUNT[1] & (B1_BUFFER[2][15])) # (!J1_COUNT[1] & ((B1_BUFFER[0][15])))));


--B1_BUFFER[3][15] is fifo:int_fifo|BUFFER[3][15]
B1_BUFFER[3][15] = DFFEAS(E1L0, K1_LMWS,  ,  , B1L0,  ,  ,  ,  );


--B1L0 is fifo:int_fifo|Mux16~3
B1L0 = (J1_COUNT[0] & ((B1L0 & ((B1_BUFFER[3][15]))) # (!B1L0 & (B1_BUFFER[1][15])))) # (!J1_COUNT[0] & (((B1L0))));


--B1L0 is fifo:int_fifo|Mux16~4
B1L0 = (J1_COUNT[2] & (B1L0)) # (!J1_COUNT[2] & ((B1L0)));


--Y1L0 is datapath:u_datapath|datapath_scsi:u_datapath_scsi|datapath_8b_MUX:u_datapath_8b_MUX|Selector7~3
Y1L0 = (Y1L0 & ((Y1L0 & ((B1L0))) # (!Y1L0 & (B1L0)))) # (!Y1L0 & (((Y1L0))));


--Y1L0 is datapath:u_datapath|datapath_scsi:u_datapath_scsi|datapath_8b_MUX:u_datapath_8b_MUX|Selector7~4
Y1L0 = (D1_CPU2S_o & (Y1L0)) # (!D1_CPU2S_o & ((Y1L0)));


--L1L0 is CPU_SM:u_CPU_SM|CPU_SM_inputs:u_CPU_SM_inputs|E40_s_E41_s~1
L1L0 = (C1_STATE[2] & (C1_STATE[3] & !C1_STATE[0]));


--M1L0 is CPU_SM:u_CPU_SM|CPU_SM_outputs:u_CPU_SM_outputs|BRIDGEOUT_Z~0
M1L0 = (C1_STATE[4] & ((DSACK_LATCHED_[1]) # (DSACK_LATCHED_[0])));


--M1L0 is CPU_SM:u_CPU_SM|CPU_SM_outputs:u_CPU_SM_outputs|F~0
M1L0 = (M1L0 & (!A1L0 & ((!C1_STATE[1]) # (!A1L0))));


--M1L0 is CPU_SM:u_CPU_SM|CPU_SM_outputs:u_CPU_SM_outputs|F~1
M1L0 = (L1L0 & ((M1L0) # ((C1_STATE[1] & !_STERM))));


--L1L0 is CPU_SM:u_CPU_SM|CPU_SM_inputs:u_CPU_SM_inputs|E29_sd~0
L1L0 = (C1_STATE[4] & L1L0);


--L1_E37_s_E44_s is CPU_SM:u_CPU_SM|CPU_SM_inputs:u_CPU_SM_inputs|E37_s_E44_s
L1_E37_s_E44_s = (C1_STATE[4] & (C1_STATE[1] & (!C1_STATE[2] & !C1_STATE[3])));


--M1L0 is CPU_SM:u_CPU_SM|CPU_SM_outputs:u_CPU_SM_outputs|F~2
M1L0 = (M1L0) # ((!_STERM & ((L1L0) # (L1_E37_s_E44_s))));


--M1L0 is CPU_SM:u_CPU_SM|CPU_SM_outputs:u_CPU_SM_outputs|INCFIFO_d~1
M1L0 = ((L1L0) # ((!D1_RIFIFO_o & !M1L0))) # (!M1L0);


--H1L0 is fifo:int_fifo|fifo__full_empty_ctr:u_full_empty_ctr|COUNT[2]~1
H1L0 = (C1_INCFIFO & ((H1_COUNT[2]) # ((H1L0)))) # (!C1_INCFIFO & (H1_COUNT[2] & ((!H1L0))));


--H1L0 is fifo:int_fifo|fifo__full_empty_ctr:u_full_empty_ctr|COUNT[1]~2
H1L0 = (!H1L0 & ((C1_INCFIFO) # (H1L0)));


--H1L0 is fifo:int_fifo|fifo__full_empty_ctr:u_full_empty_ctr|COUNT[1]~3
H1L0 = H1_COUNT[1] $ (((H1L0 & (C1_INCFIFO $ (!H1_COUNT[0])))));


--H1L0 is fifo:int_fifo|fifo__full_empty_ctr:u_full_empty_ctr|COUNT~4
H1L0 = (H1_COUNT[0]) # ((!H1_COUNT[2] & !H1_COUNT[1]));


--H1L0 is fifo:int_fifo|fifo__full_empty_ctr:u_full_empty_ctr|COUNT~5
H1L0 = ((H1_COUNT[2] & H1_COUNT[1])) # (!H1_COUNT[0]);


--M1L0 is CPU_SM:u_CPU_SM|CPU_SM_outputs:u_CPU_SM_outputs|DECFIFO_d~0
M1L0 = (M1L0) # ((M1L0 & (!L1L0 & !D1_RDFIFO_o)));


--H1_clk is fifo:int_fifo|fifo__full_empty_ctr:u_full_empty_ctr|clk
H1_clk = LCELL((C1_INCFIFO) # (C1_DECFIFO));


--AB1_ACR_WR is registers:u_registers|addr_decoder:u_addr_decoder|ACR_WR
AB1_ACR_WR = LCELL((ADDR[2] & (ADDR[3] & (AB1L0 & !A1L0))));


--G1_BO1_CLK is fifo:int_fifo|fifo_byte_ptr:u_byte_ptr|BO1_CLK
G1_BO1_CLK = LCELL((D1_INCBO_o) # (AB1_ACR_WR));


--U1L0 is SCSI_SM:u_SCSI_SM|scsi_sm_outputs:u_scsi_sm_outputs|INCBO~0
U1L0 = (!D1_STATE[1] & ((D1_STATE[3] & (D1_STATE[2])) # (!D1_STATE[3] & ((D1_STATE[0])))));


--AB1L0 is registers:u_registers|addr_decoder:u_addr_decoder|ST_DMA~0
AB1L0 = (ADDR[4] & (AB1L0 & !ADDR[5]));


--AB1_FLUSH_ is registers:u_registers|addr_decoder:u_addr_decoder|FLUSH_
AB1_FLUSH_ = LCELL((BB1_CNTR_O[1] & (ADDR[2] & (AB1L0 & !ADDR[3]))));


--L1L0 is CPU_SM:u_CPU_SM|CPU_SM_inputs:u_CPU_SM_inputs|E0~0
L1L0 = (H1_FIFOEMPTY) # ((A1L0) # ((H1_FIFOFULL) # (!C1_FLUSHFIFO)));


--M1_nSTOPFLUSH_d is CPU_SM:u_CPU_SM|CPU_SM_outputs:u_CPU_SM_outputs|nSTOPFLUSH_d
M1_nSTOPFLUSH_d = (((!L1L0 & L1L0)) # (!M1L0)) # (!L1L0);


--AB1L0 is registers:u_registers|addr_decoder:u_addr_decoder|SP_DMA~1
AB1L0 = (ADDR[2] & (ADDR[3] & ADDR[5]));


--BB1L0 is registers:u_registers|registers_cntr:u_registers_cntr|CLR_DMAENA~0
BB1L0 = ((ADDR[4] & (AB1L0 & AB1L0))) # (!_RST);


--T1L0 is SCSI_SM:u_SCSI_SM|scsi_sm_inputs:u_scsi_sm_inputs|E[3]~12
T1L0 = (T1L0 & (T1L0 & (D1_STATE[0] & !D1_STATE[4])));


--U1L0 is SCSI_SM:u_SCSI_SM|scsi_sm_outputs:u_scsi_sm_outputs|INCBO~1
U1L0 = (D1_STATE[3] & D1_STATE[2]);


--T1L0 is SCSI_SM:u_SCSI_SM|scsi_sm_inputs:u_scsi_sm_inputs|E[4]~13
T1L0 = (T1L0 & (U1L0 & (!D1_STATE[4] & !D1_STATE[1])));


--C1_PAS is CPU_SM:u_CPU_SM|PAS
C1_PAS = DFFEAS(M1L0, SCLK,  ,  ,  ,  ,  ,  ,  );


--M1L0 is CPU_SM:u_CPU_SM|CPU_SM_outputs:u_CPU_SM_outputs|SIZE1_d~0
M1L0 = (N1L0) # ((C1_STATE[3] & (L1L0 & !C1_STATE[4])));


--N1L0 is CPU_SM:u_CPU_SM|cpudff1:u_cpudff1|cpudff1_d~12
N1L0 = (C1_STATE[4] & (!DSACK_LATCHED_[1] & !DSACK_LATCHED_[0]));


--M1L0 is CPU_SM:u_CPU_SM|CPU_SM_outputs:u_CPU_SM_outputs|SIZE1_d~1
M1L0 = (C1_STATE[3] & ((!C1_STATE[0]))) # (!C1_STATE[3] & (!C1_STATE[2]));


--M1L0 is CPU_SM:u_CPU_SM|CPU_SM_outputs:u_CPU_SM_outputs|SIZE1_d~2
M1L0 = (M1L0) # ((N1L0 & (M1L0 & !C1_STATE[1])));


--M1L0 is CPU_SM:u_CPU_SM|CPU_SM_outputs:u_CPU_SM_outputs|SIZE1_d~3
M1L0 = (L1L0) # (((L1L0 & L1L0)) # (!Q1L0));


--M1L0 is CPU_SM:u_CPU_SM|CPU_SM_outputs:u_CPU_SM_outputs|SIZE1_d~4
M1L0 = (L1L0) # ((_STERM & (M1L0)) # (!_STERM & ((M1L0))));


--M1L0 is CPU_SM:u_CPU_SM|CPU_SM_outputs:u_CPU_SM_outputs|SIZE1_Y~1
M1L0 = ((M1L0 & ((!R1L0) # (!L1L0)))) # (!M1L0);


--M1L0 is CPU_SM:u_CPU_SM|CPU_SM_outputs:u_CPU_SM_outputs|SIZE1_X~0
M1L0 = (C1_STATE[4] & (!C1_STATE[3] & (C1_STATE[1] $ (C1_STATE[0]))));


--M1L0 is CPU_SM:u_CPU_SM|CPU_SM_outputs:u_CPU_SM_outputs|SIZE1_Y~2
M1L0 = (!L1L0 & (!M1L0 & ((C1_STATE[2]) # (!L1L0))));


--M1L0 is CPU_SM:u_CPU_SM|CPU_SM_outputs:u_CPU_SM_outputs|SIZE1_d~5
M1L0 = (M1L0) # ((N1L0 & (M1L0 & M1L0)));


--C1_PDS is CPU_SM:u_CPU_SM|PDS
C1_PDS = DFFEAS(M1L0, SCLK,  ,  ,  ,  ,  ,  ,  );


--DB1L0 is registers:u_registers|registers_term:u_registers_term|CYCLE_END~0
DB1L0 = (A1L0) # ((AB1_h_0C) # ((ADDR[6] & !_CS)));


--M1L0 is CPU_SM:u_CPU_SM|CPU_SM_outputs:u_CPU_SM_outputs|F2CPUL_d~4
M1L0 = (!C1_STATE[2] & ((C1_STATE[1]) # (!C1_STATE[4])));


--M1L0 is CPU_SM:u_CPU_SM|CPU_SM_outputs:u_CPU_SM_outputs|F2CPUL_d~5
M1L0 = (L1L0) # ((M1L0) # ((_STERM & M1L0)));


--M1L0 is CPU_SM:u_CPU_SM|CPU_SM_outputs:u_CPU_SM_outputs|F2CPUL_d~6
M1L0 = ((C1_STATE[0] & ((!M1L0))) # (!C1_STATE[0] & (M1L0))) # (!C1_STATE[3]);


--M1L0 is CPU_SM:u_CPU_SM|CPU_SM_outputs:u_CPU_SM_outputs|F2CPUL_d~7
M1L0 = (((!M1L0) # (!M1L0)) # (!M1L0)) # (!L1L0);


--AB1_ISTR_RD_ is registers:u_registers|addr_decoder:u_addr_decoder|ISTR_RD_
AB1_ISTR_RD_ = LCELL((A1L0 & (ADDR[2] & (ADDR[3] & AB1L0))));


--U1L0 is SCSI_SM:u_SCSI_SM|scsi_sm_outputs:u_scsi_sm_outputs|S2CPU~0
U1L0 = (!D1_STATE[4] & (!D1_STATE[2] & ((D1_STATE[1]) # (A1L0))));


--U1L0 is SCSI_SM:u_SCSI_SM|scsi_sm_outputs:u_scsi_sm_outputs|S2CPU~1
U1L0 = (T1L0) # ((D1_STATE[3] & ((U1L0) # (!U1L0))));


--CB1L0 is registers:u_registers|registers_istr:u_registers_istr|CLR_INT_~0
CB1L0 = ((ADDR[3] & (AB1L0 & !ADDR[2]))) # (!_RST);


--X1L0 is datapath:u_datapath|datapath_scsi:u_datapath_scsi|SCSI_DATA_RX[0]~0
X1L0 = (A1L0 & ((D1_S2CPU_o) # (D1_S2F_o)));


--X1L0 is datapath:u_datapath|datapath_scsi:u_datapath_scsi|SCSI_DATA_RX[1]~1
X1L0 = (A1L0 & ((D1_S2CPU_o) # (D1_S2F_o)));


--X1L0 is datapath:u_datapath|datapath_scsi:u_datapath_scsi|SCSI_DATA_RX[2]~2
X1L0 = (A1L0 & ((D1_S2CPU_o) # (D1_S2F_o)));


--X1L0 is datapath:u_datapath|datapath_scsi:u_datapath_scsi|SCSI_DATA_RX[3]~3
X1L0 = (A1L0 & ((D1_S2CPU_o) # (D1_S2F_o)));


--X1L0 is datapath:u_datapath|datapath_scsi:u_datapath_scsi|SCSI_DATA_RX[4]~4
X1L0 = (A1L0 & ((D1_S2CPU_o) # (D1_S2F_o)));


--X1L0 is datapath:u_datapath|datapath_scsi:u_datapath_scsi|SCSI_DATA_RX[5]~5
X1L0 = (A1L0 & ((D1_S2CPU_o) # (D1_S2F_o)));


--X1L0 is datapath:u_datapath|datapath_scsi:u_datapath_scsi|SCSI_DATA_RX[6]~6
X1L0 = (A1L0 & ((D1_S2CPU_o) # (D1_S2F_o)));


--X1L0 is datapath:u_datapath|datapath_scsi:u_datapath_scsi|SCSI_DATA_RX[7]~7
X1L0 = (A1L0 & ((D1_S2CPU_o) # (D1_S2F_o)));


--M1L0 is CPU_SM:u_CPU_SM|CPU_SM_outputs:u_CPU_SM_outputs|BRIDGEOUT_d~0
M1L0 = (L1L0 & ((L1L0) # ((L1L0 & N1L0)))) # (!L1L0 & (L1L0 & (N1L0)));


--M1L0 is CPU_SM:u_CPU_SM|CPU_SM_outputs:u_CPU_SM_outputs|BRIDGEOUT_d~1
M1L0 = (M1L0) # ((L1L0 & ((A1L0) # (!_STERM))));


--M1L0 is CPU_SM:u_CPU_SM|CPU_SM_outputs:u_CPU_SM_outputs|BRIDGEOUT_d~2
M1L0 = (M1L0) # ((L1L0 & (M1L0 & !A1L0)));


--M1L0 is CPU_SM:u_CPU_SM|CPU_SM_outputs:u_CPU_SM_outputs|F2CPUH_X~1
M1L0 = (R1L0 & (M1L0 & (C1_STATE[2] $ (!C1_STATE[1]))));


--M1L0 is CPU_SM:u_CPU_SM|CPU_SM_outputs:u_CPU_SM_outputs|F2CPUH_d~2
M1L0 = (!L1_E37_s_E44_s & (!M1L0 & ((_STERM) # (!L1L0))));


--M1L0 is CPU_SM:u_CPU_SM|CPU_SM_outputs:u_CPU_SM_outputs|F2CPUH_Z~0
M1L0 = (P1L0 & (P1L0 & (C1_STATE[2] $ (!C1_STATE[1]))));


--M1L0 is CPU_SM:u_CPU_SM|CPU_SM_outputs:u_CPU_SM_outputs|F2CPUH_d~3
M1L0 = (L1L0 & (!M1L0 & ((C1_STATE[2]) # (!L1L0))));


--M1L0 is CPU_SM:u_CPU_SM|CPU_SM_outputs:u_CPU_SM_outputs|F2CPUH_d~4
M1L0 = (((!M1L0) # (!M1L0)) # (!M1L0)) # (!M1L0);


--U1L0 is SCSI_SM:u_SCSI_SM|scsi_sm_outputs:u_scsi_sm_outputs|S2F~0
U1L0 = (!D1_STATE[3]) # (!D1_STATE[4]);


--U1L0 is SCSI_SM:u_SCSI_SM|scsi_sm_outputs:u_scsi_sm_outputs|S2F~1
U1L0 = (T1L0) # ((D1_STATE[2] & (U1L0 & !D1_STATE[1])));


--E1L0 is datapath:u_datapath|ID[16]~0
E1L0 = (D1_S2F_o & (A1L0)) # (!D1_S2F_o & ((A1L0)));


--J1_COUNT[1] is fifo:int_fifo|fifo_3bit_cntr:u_next_in_cntr|COUNT[1]
J1_COUNT[1] = DFFEAS(J1L0, INCNI, _RST,  ,  ,  ,  ,  ,  );


--J1_COUNT[2] is fifo:int_fifo|fifo_3bit_cntr:u_next_in_cntr|COUNT[2]
J1_COUNT[2] = DFFEAS(J1L0, INCNI, _RST,  ,  ,  ,  ,  ,  );


--J1_COUNT[0] is fifo:int_fifo|fifo_3bit_cntr:u_next_in_cntr|COUNT[0]
J1_COUNT[0] = DFFEAS(J1L0, INCNI, _RST,  ,  ,  ,  ,  ,  );


--B1L0 is fifo:int_fifo|Decoder0~0
B1L0 = (J1_COUNT[1] & (J1_COUNT[2] & !J1_COUNT[0]));


--J1L0 is fifo:int_fifo|fifo_3bit_cntr:u_next_out_cntr|COUNT[1]~0
J1L0 = J1_COUNT[1] $ (J1_COUNT[0]);


--B1L0 is fifo:int_fifo|Decoder0~1
B1L0 = (J1_COUNT[0] & (J1_COUNT[2] & !J1_COUNT[1]));


--B1L0 is fifo:int_fifo|Decoder0~2
B1L0 = (J1_COUNT[2] & (!J1_COUNT[1] & !J1_COUNT[0]));


--B1L0 is fifo:int_fifo|Decoder0~3
B1L0 = (J1_COUNT[1] & (J1_COUNT[0] & J1_COUNT[2]));


--B1L0 is fifo:int_fifo|Decoder0~4
B1L0 = (J1_COUNT[0] & (!J1_COUNT[1] & !J1_COUNT[2]));


--B1L0 is fifo:int_fifo|Decoder0~5
B1L0 = (J1_COUNT[1] & (!J1_COUNT[0] & !J1_COUNT[2]));


--B1L0 is fifo:int_fifo|Decoder0~6
B1L0 = (!J1_COUNT[1] & (!J1_COUNT[0] & !J1_COUNT[2]));


--B1L0 is fifo:int_fifo|Decoder0~7
B1L0 = (J1_COUNT[1] & (J1_COUNT[0] & !J1_COUNT[2]));


--J1L0 is fifo:int_fifo|fifo_3bit_cntr:u_next_out_cntr|COUNT[2]~1
J1L0 = J1_COUNT[2] $ (((J1_COUNT[1] & J1_COUNT[0])));


--U1L0 is SCSI_SM:u_SCSI_SM|scsi_sm_outputs:u_scsi_sm_outputs|F2S~2
U1L0 = (D1_STATE[0] & (!D1_STATE[4] & (!D1_STATE[1]))) # (!D1_STATE[0] & (D1_STATE[4] & (D1_STATE[1] & !D1_STATE[2])));


--U1L0 is SCSI_SM:u_SCSI_SM|scsi_sm_outputs:u_scsi_sm_outputs|F2S~3
U1L0 = ((U1L0 & !D1_STATE[3])) # (!U1L0);


--C1_DIEL is CPU_SM:u_CPU_SM|DIEL
C1_DIEL = DFFEAS(M1L0, SCLK,  ,  ,  ,  ,  ,  ,  );


--E1L0 is datapath:u_datapath|ID[0]~1
E1L0 = (D1_CPU2S_o & (V1_UD_LATCH[0])) # (!D1_CPU2S_o & ((C1_DIEL & (V1_UD_LATCH[0])) # (!C1_DIEL & ((A1L0)))));


--E1L0 is datapath:u_datapath|ID[0]~2
E1L0 = (D1_S2F_o & (A1L0)) # (!D1_S2F_o & ((E1L0)));


--E1L0 is datapath:u_datapath|ID[24]~3
E1L0 = (D1_S2F_o & (A1L0)) # (!D1_S2F_o & ((A1L0)));


--V1_UD_LATCH[8] is datapath:u_datapath|datapath_input:u_datapath_input|UD_LATCH[8]
V1_UD_LATCH[8] = DFFEAS(A1L0, !C1_PDS,  ,  ,  ,  ,  ,  ,  );


--E1L0 is datapath:u_datapath|ID[8]~4
E1L0 = (D1_CPU2S_o & (V1_UD_LATCH[8])) # (!D1_CPU2S_o & ((C1_DIEL & (V1_UD_LATCH[8])) # (!C1_DIEL & ((A1L0)))));


--E1L0 is datapath:u_datapath|ID[8]~5
E1L0 = (D1_S2F_o & (A1L0)) # (!D1_S2F_o & ((E1L0)));


--U1_CPU2S is SCSI_SM:u_SCSI_SM|scsi_sm_outputs:u_scsi_sm_outputs|CPU2S
U1_CPU2S = (U1L0) # (((T1L0 & !D1_STATE[4])) # (!U1L0));


--E1L0 is datapath:u_datapath|ID[1]~6
E1L0 = (D1_CPU2S_o & (V1_UD_LATCH[1])) # (!D1_CPU2S_o & ((C1_DIEL & (V1_UD_LATCH[1])) # (!C1_DIEL & ((A1L0)))));


--E1L0 is datapath:u_datapath|ID[1]~7
E1L0 = (D1_S2F_o & (A1L0)) # (!D1_S2F_o & ((E1L0)));


--E1L0 is datapath:u_datapath|ID[17]~8
E1L0 = (D1_S2F_o & (A1L0)) # (!D1_S2F_o & ((A1L0)));


--E1L0 is datapath:u_datapath|ID[25]~9
E1L0 = (D1_S2F_o & (A1L0)) # (!D1_S2F_o & ((A1L0)));


--V1_UD_LATCH[9] is datapath:u_datapath|datapath_input:u_datapath_input|UD_LATCH[9]
V1_UD_LATCH[9] = DFFEAS(A1L0, !C1_PDS,  ,  ,  ,  ,  ,  ,  );


--E1L0 is datapath:u_datapath|ID[9]~10
E1L0 = (D1_CPU2S_o & (V1_UD_LATCH[9])) # (!D1_CPU2S_o & ((C1_DIEL & (V1_UD_LATCH[9])) # (!C1_DIEL & ((A1L0)))));


--E1L0 is datapath:u_datapath|ID[9]~11
E1L0 = (D1_S2F_o & (A1L0)) # (!D1_S2F_o & ((E1L0)));


--E1L0 is datapath:u_datapath|ID[18]~12
E1L0 = (D1_S2F_o & (A1L0)) # (!D1_S2F_o & ((A1L0)));


--E1L0 is datapath:u_datapath|ID[2]~13
E1L0 = (D1_CPU2S_o & (V1_UD_LATCH[2])) # (!D1_CPU2S_o & ((C1_DIEL & (V1_UD_LATCH[2])) # (!C1_DIEL & ((A1L0)))));


--E1L0 is datapath:u_datapath|ID[2]~14
E1L0 = (D1_S2F_o & (A1L0)) # (!D1_S2F_o & ((E1L0)));


--E1L0 is datapath:u_datapath|ID[26]~15
E1L0 = (D1_S2F_o & (A1L0)) # (!D1_S2F_o & ((A1L0)));


--V1_UD_LATCH[10] is datapath:u_datapath|datapath_input:u_datapath_input|UD_LATCH[10]
V1_UD_LATCH[10] = DFFEAS(A1L0, !C1_PDS,  ,  ,  ,  ,  ,  ,  );


--E1L0 is datapath:u_datapath|ID[10]~16
E1L0 = (D1_CPU2S_o & (V1_UD_LATCH[10])) # (!D1_CPU2S_o & ((C1_DIEL & (V1_UD_LATCH[10])) # (!C1_DIEL & ((A1L0)))));


--E1L0 is datapath:u_datapath|ID[10]~17
E1L0 = (D1_S2F_o & (A1L0)) # (!D1_S2F_o & ((E1L0)));


--E1L0 is datapath:u_datapath|ID[3]~18
E1L0 = (D1_CPU2S_o & (V1_UD_LATCH[3])) # (!D1_CPU2S_o & ((C1_DIEL & (V1_UD_LATCH[3])) # (!C1_DIEL & ((A1L0)))));


--E1L0 is datapath:u_datapath|ID[3]~19
E1L0 = (D1_S2F_o & (A1L0)) # (!D1_S2F_o & ((E1L0)));


--E1L0 is datapath:u_datapath|ID[19]~20
E1L0 = (D1_S2F_o & (A1L0)) # (!D1_S2F_o & ((A1L0)));


--E1L0 is datapath:u_datapath|ID[27]~21
E1L0 = (D1_S2F_o & (A1L0)) # (!D1_S2F_o & ((A1L0)));


--V1_UD_LATCH[11] is datapath:u_datapath|datapath_input:u_datapath_input|UD_LATCH[11]
V1_UD_LATCH[11] = DFFEAS(A1L0, !C1_PDS,  ,  ,  ,  ,  ,  ,  );


--E1L0 is datapath:u_datapath|ID[11]~22
E1L0 = (D1_CPU2S_o & (V1_UD_LATCH[11])) # (!D1_CPU2S_o & ((C1_DIEL & (V1_UD_LATCH[11])) # (!C1_DIEL & ((A1L0)))));


--E1L0 is datapath:u_datapath|ID[11]~23
E1L0 = (D1_S2F_o & (A1L0)) # (!D1_S2F_o & ((E1L0)));


--E1L0 is datapath:u_datapath|ID[20]~24
E1L0 = (D1_S2F_o & (A1L0)) # (!D1_S2F_o & ((A1L0)));


--E1L0 is datapath:u_datapath|ID[4]~25
E1L0 = (D1_CPU2S_o & (V1_UD_LATCH[4])) # (!D1_CPU2S_o & ((C1_DIEL & (V1_UD_LATCH[4])) # (!C1_DIEL & ((A1L0)))));


--E1L0 is datapath:u_datapath|ID[4]~26
E1L0 = (D1_S2F_o & (A1L0)) # (!D1_S2F_o & ((E1L0)));


--E1L0 is datapath:u_datapath|ID[28]~27
E1L0 = (D1_S2F_o & (A1L0)) # (!D1_S2F_o & ((A1L0)));


--V1_UD_LATCH[12] is datapath:u_datapath|datapath_input:u_datapath_input|UD_LATCH[12]
V1_UD_LATCH[12] = DFFEAS(A1L0, !C1_PDS,  ,  ,  ,  ,  ,  ,  );


--E1L0 is datapath:u_datapath|ID[12]~28
E1L0 = (D1_CPU2S_o & (V1_UD_LATCH[12])) # (!D1_CPU2S_o & ((C1_DIEL & (V1_UD_LATCH[12])) # (!C1_DIEL & ((A1L0)))));


--E1L0 is datapath:u_datapath|ID[12]~29
E1L0 = (D1_S2F_o & (A1L0)) # (!D1_S2F_o & ((E1L0)));


--E1L0 is datapath:u_datapath|ID[5]~30
E1L0 = (D1_CPU2S_o & (V1_UD_LATCH[5])) # (!D1_CPU2S_o & ((C1_DIEL & (V1_UD_LATCH[5])) # (!C1_DIEL & ((A1L0)))));


--E1L0 is datapath:u_datapath|ID[5]~31
E1L0 = (D1_S2F_o & (A1L0)) # (!D1_S2F_o & ((E1L0)));


--E1L0 is datapath:u_datapath|ID[21]~32
E1L0 = (D1_S2F_o & (A1L0)) # (!D1_S2F_o & ((A1L0)));


--E1L0 is datapath:u_datapath|ID[29]~33
E1L0 = (D1_S2F_o & (A1L0)) # (!D1_S2F_o & ((A1L0)));


--V1_UD_LATCH[13] is datapath:u_datapath|datapath_input:u_datapath_input|UD_LATCH[13]
V1_UD_LATCH[13] = DFFEAS(A1L0, !C1_PDS,  ,  ,  ,  ,  ,  ,  );


--E1L0 is datapath:u_datapath|ID[13]~34
E1L0 = (D1_CPU2S_o & (V1_UD_LATCH[13])) # (!D1_CPU2S_o & ((C1_DIEL & (V1_UD_LATCH[13])) # (!C1_DIEL & ((A1L0)))));


--E1L0 is datapath:u_datapath|ID[13]~35
E1L0 = (D1_S2F_o & (A1L0)) # (!D1_S2F_o & ((E1L0)));


--E1L0 is datapath:u_datapath|ID[22]~36
E1L0 = (D1_S2F_o & (A1L0)) # (!D1_S2F_o & ((A1L0)));


--E1L0 is datapath:u_datapath|ID[6]~37
E1L0 = (D1_CPU2S_o & (V1_UD_LATCH[6])) # (!D1_CPU2S_o & ((C1_DIEL & (V1_UD_LATCH[6])) # (!C1_DIEL & ((A1L0)))));


--E1L0 is datapath:u_datapath|ID[6]~38
E1L0 = (D1_S2F_o & (A1L0)) # (!D1_S2F_o & ((E1L0)));


--E1L0 is datapath:u_datapath|ID[30]~39
E1L0 = (D1_S2F_o & (A1L0)) # (!D1_S2F_o & ((A1L0)));


--V1_UD_LATCH[14] is datapath:u_datapath|datapath_input:u_datapath_input|UD_LATCH[14]
V1_UD_LATCH[14] = DFFEAS(A1L0, !C1_PDS,  ,  ,  ,  ,  ,  ,  );


--E1L0 is datapath:u_datapath|ID[14]~40
E1L0 = (D1_CPU2S_o & (V1_UD_LATCH[14])) # (!D1_CPU2S_o & ((C1_DIEL & (V1_UD_LATCH[14])) # (!C1_DIEL & ((A1L0)))));


--E1L0 is datapath:u_datapath|ID[14]~41
E1L0 = (D1_S2F_o & (A1L0)) # (!D1_S2F_o & ((E1L0)));


--E1L0 is datapath:u_datapath|ID[7]~42
E1L0 = (D1_CPU2S_o & (V1_UD_LATCH[7])) # (!D1_CPU2S_o & ((C1_DIEL & (V1_UD_LATCH[7])) # (!C1_DIEL & ((A1L0)))));


--E1L0 is datapath:u_datapath|ID[7]~43
E1L0 = (D1_S2F_o & (A1L0)) # (!D1_S2F_o & ((E1L0)));


--E1L0 is datapath:u_datapath|ID[23]~44
E1L0 = (D1_S2F_o & (A1L0)) # (!D1_S2F_o & ((A1L0)));


--E1L0 is datapath:u_datapath|ID[31]~45
E1L0 = (D1_S2F_o & (A1L0)) # (!D1_S2F_o & ((A1L0)));


--V1_UD_LATCH[15] is datapath:u_datapath|datapath_input:u_datapath_input|UD_LATCH[15]
V1_UD_LATCH[15] = DFFEAS(A1L0, !C1_PDS,  ,  ,  ,  ,  ,  ,  );


--E1L0 is datapath:u_datapath|ID[15]~46
E1L0 = (D1_CPU2S_o & (V1_UD_LATCH[15])) # (!D1_CPU2S_o & ((C1_DIEL & (V1_UD_LATCH[15])) # (!C1_DIEL & ((A1L0)))));


--E1L0 is datapath:u_datapath|ID[15]~47
E1L0 = (D1_S2F_o & (A1L0)) # (!D1_S2F_o & ((E1L0)));


--AB1_ST_DMA is registers:u_registers|addr_decoder:u_addr_decoder|ST_DMA
AB1_ST_DMA = LCELL((AB1L0 & (!ADDR[2] & !ADDR[3])));


--M1L0 is CPU_SM:u_CPU_SM|CPU_SM_outputs:u_CPU_SM_outputs|PLLW_d~0
M1L0 = (C1_STATE[1] & ((H1_FIFOFULL) # ((M1L0)))) # (!C1_STATE[1] & (!L1L0 & ((H1_FIFOFULL) # (M1L0))));


--M1L0 is CPU_SM:u_CPU_SM|CPU_SM_outputs:u_CPU_SM_outputs|PAS_d~0
M1L0 = (M1L0 & (((!P1L0 & !N1L0)) # (!_STERM)));


--M1L0 is CPU_SM:u_CPU_SM|CPU_SM_outputs:u_CPU_SM_outputs|PAS_d~1
M1L0 = (((!M1L0) # (!M1L0)) # (!N1L0)) # (!M1L0);


--M1L0 is CPU_SM:u_CPU_SM|CPU_SM_outputs:u_CPU_SM_outputs|PDS_d~0
M1L0 = (N1L0) # ((L1L0) # ((M1L0) # (!M1L0)));


--DB1_TERM_COUNTER[2] is registers:u_registers|registers_term:u_registers_term|TERM_COUNTER[2]
DB1_TERM_COUNTER[2] = DFFEAS(DB1L0, !SCLK, !A1L0,  ,  ,  ,  ,  ,  );


--DB1_TERM_COUNTER[1] is registers:u_registers|registers_term:u_registers_term|TERM_COUNTER[1]
DB1_TERM_COUNTER[1] = DFFEAS(DB1L0, !SCLK, !A1L0,  ,  ,  ,  ,  ,  );


--DB1_TERM_COUNTER[0] is registers:u_registers|registers_term:u_registers_term|TERM_COUNTER[0]
DB1_TERM_COUNTER[0] = DFFEAS(DB1L0, !SCLK, !A1L0,  ,  ,  ,  ,  ,  );


--A1L0 is rtl~0
A1L0 = LCELL((DB1_TERM_COUNTER[2] & (!DB1_TERM_COUNTER[1] & !DB1_TERM_COUNTER[0])));


--U1_SET_DSACK is SCSI_SM:u_SCSI_SM|scsi_sm_outputs:u_scsi_sm_outputs|SET_DSACK
U1_SET_DSACK = LCELL((D1_STATE[4] & ((T1L0))) # (!D1_STATE[4] & (T1L0)));


--LHW is LHW
LHW = DFFEAS(C1_PLHW, !SCLK,  ,  ,  ,  ,  ,  ,  );


--K1L0 is fifo:int_fifo|fifo_write_strobes:u_write_strobes|LMWS~0
K1L0 = (D1_DACK_o & D1_RE_o);


--K1_UMWS is fifo:int_fifo|fifo_write_strobes:u_write_strobes|UMWS
K1_UMWS = LCELL((LHW) # ((G1_BO0 & (K1L0 & !G1_BO1))));


--J1L0 is fifo:int_fifo|fifo_3bit_cntr:u_next_in_cntr|COUNT[1]~0
J1L0 = J1_COUNT[1] $ (J1_COUNT[0]);


--J1L0 is fifo:int_fifo|fifo_3bit_cntr:u_next_in_cntr|COUNT[2]~1
J1L0 = J1_COUNT[2] $ (((J1_COUNT[1] & J1_COUNT[0])));


--C1_INCNO is CPU_SM:u_CPU_SM|INCNO
C1_INCNO = DFFEAS(M1L0, SCLK,  ,  ,  ,  ,  ,  ,  );


--D1_INCNO_o is SCSI_SM:u_SCSI_SM|INCNO_o
D1_INCNO_o = DFFEAS(U1L0, SCLK,  ,  ,  ,  ,  ,  ,  );


--INCNO is INCNO
INCNO = LCELL((C1_INCNO) # (D1_INCNO_o));


--M1L0 is CPU_SM:u_CPU_SM|CPU_SM_outputs:u_CPU_SM_outputs|DIEL_d~0
M1L0 = (!A1L0 & ((N1L0) # ((C1_STATE[4] & L1L0))));


--M1L0 is CPU_SM:u_CPU_SM|CPU_SM_outputs:u_CPU_SM_outputs|DIEL_d~1
M1L0 = (C1_STATE[4] & (((!C1_STATE[3])))) # (!C1_STATE[4] & (_STERM & ((!C1_STATE[3]) # (!C1_STATE[2]))));


--M1L0 is CPU_SM:u_CPU_SM|CPU_SM_outputs:u_CPU_SM_outputs|DIEH_Z~0
M1L0 = (P1L0 & ((C1_STATE[4] & (L1L0)) # (!C1_STATE[4] & ((L1L0)))));


--M1L0 is CPU_SM:u_CPU_SM|CPU_SM_outputs:u_CPU_SM_outputs|DIEL_d~2
M1L0 = (L1L0 & ((M1L0) # ((M1L0 & !C1_STATE[3])))) # (!L1L0 & (((M1L0 & !C1_STATE[3]))));


--M1L0 is CPU_SM:u_CPU_SM|CPU_SM_outputs:u_CPU_SM_outputs|DIEL_d~3
M1L0 = (N1L0) # ((M1L0) # ((M1L0) # (!M1L0)));


--LLW is LLW
LLW = DFFEAS(C1_PLLW, !SCLK,  ,  ,  ,  ,  ,  ,  );


--K1_UUWS is fifo:int_fifo|fifo_write_strobes:u_write_strobes|UUWS
K1_UUWS = LCELL((LHW) # ((K1L0 & (!G1_BO1 & !G1_BO0))));


--K1_LMWS is fifo:int_fifo|fifo_write_strobes:u_write_strobes|LMWS
K1_LMWS = LCELL((LLW) # ((G1_BO1 & (K1L0 & !G1_BO0))));


--DB1L0 is registers:u_registers|registers_term:u_registers_term|TERM_COUNTER[2]~0
DB1L0 = DB1_TERM_COUNTER[2] $ (((AB1L0 & (DB1_TERM_COUNTER[1] & DB1_TERM_COUNTER[0]))));


--DB1L0 is registers:u_registers|registers_term:u_registers_term|TERM_COUNTER[1]~1
DB1L0 = DB1_TERM_COUNTER[1] $ (((!_CS & (!A1L0 & DB1_TERM_COUNTER[0]))));


--DB1L0 is registers:u_registers|registers_term:u_registers_term|TERM_COUNTER[0]~2
DB1L0 = DB1_TERM_COUNTER[0] $ (((!_CS & !A1L0)));


--C1_PLHW is CPU_SM:u_CPU_SM|PLHW
C1_PLHW = DFFEAS(M1L0, SCLK,  ,  ,  ,  ,  ,  ,  );


--C1_INCNI is CPU_SM:u_CPU_SM|INCNI
C1_INCNI = DFFEAS(M1L0, SCLK,  ,  ,  ,  ,  ,  ,  );


--D1_INCNI_o is SCSI_SM:u_SCSI_SM|INCNI_o
D1_INCNI_o = DFFEAS(U1L0, SCLK,  ,  ,  ,  ,  ,  ,  );


--INCNI is INCNI
INCNI = LCELL((C1_INCNI) # (D1_INCNI_o));


--U1L0 is SCSI_SM:u_SCSI_SM|scsi_sm_outputs:u_scsi_sm_outputs|INCNO~0
U1L0 = (T1L0) # ((H1_FIFOFULL & (D1_STATE[4] & T1L0)));


--C1_PLLW is CPU_SM:u_CPU_SM|PLLW
C1_PLLW = DFFEAS(M1L0, SCLK,  ,  ,  ,  ,  ,  ,  );


--M1L0 is CPU_SM:u_CPU_SM|CPU_SM_outputs:u_CPU_SM_outputs|PLHW_d~0
M1L0 = (A1L0 & ((L1L0) # ((L1L0 & !C1_STATE[0])))) # (!A1L0 & (((L1L0 & !C1_STATE[0]))));


--M1L0 is CPU_SM:u_CPU_SM|CPU_SM_outputs:u_CPU_SM_outputs|PLHW_d~1
M1L0 = ((_STERM & M1L0)) # (!M1L0);


--U1L0 is SCSI_SM:u_SCSI_SM|scsi_sm_outputs:u_scsi_sm_outputs|INCNI~0
U1L0 = (T1L0) # ((H1_FIFOFULL & (D1_STATE[4] & T1L0)));


--M1L0 is CPU_SM:u_CPU_SM|CPU_SM_outputs:u_CPU_SM_outputs|PLLW_d~1
M1L0 = (C1_STATE[4] & (((C1_STATE[1] & !C1_STATE[0])))) # (!C1_STATE[4] & (!C1_STATE[1] & ((C1_STATE[0]) # (!C1_STATE[2]))));


--M1L0 is CPU_SM:u_CPU_SM|CPU_SM_outputs:u_CPU_SM_outputs|PLLW_d~2
M1L0 = (!C1_STATE[3] & ((M1L0) # (M1L0)));


--M1L0 is CPU_SM:u_CPU_SM|CPU_SM_outputs:u_CPU_SM_outputs|PLLW_d~3
M1L0 = (N1L0) # (((L1L0 & R1L0)) # (!M1L0));


--M1L0 is CPU_SM:u_CPU_SM|CPU_SM_outputs:u_CPU_SM_outputs|PLLW_d~4
M1L0 = (N1L0) # ((L1L0 & (!C1_STATE[0] & !P1L0)));


--M1L0 is CPU_SM:u_CPU_SM|CPU_SM_outputs:u_CPU_SM_outputs|PLLW_d~5
M1L0 = (M1L0) # ((M1L0) # ((_STERM & M1L0)));


--N1L0 is CPU_SM:u_CPU_SM|cpudff1:u_cpudff1|cpudff1_d~13
N1L0 = (!DSACK_LATCHED_[1] & (!DSACK_LATCHED_[0] & (C1_STATE[4] & L1L0)));


--L1L0 is CPU_SM:u_CPU_SM|CPU_SM_inputs:u_CPU_SM_inputs|E4~2
L1L0 = (((G1_BO1 & G1_BO0)) # (!L1L0)) # (!LEFTOVERS);


--M1L0 is CPU_SM:u_CPU_SM|CPU_SM_outputs:u_CPU_SM_outputs|nBREQ_d~9
M1L0 = (BB1_CNTR_O[1] & (C1_DMAENA & (M1L0 & C1_FLUSHFIFO)));


--R1L0 is CPU_SM:u_CPU_SM|cpudff4:u_cpudff4|cpudff4_d~16
R1L0 = ((!R1L0) # (!M1L0)) # (!L1L0);


--L1L0 is CPU_SM:u_CPU_SM|CPU_SM_inputs:u_CPU_SM_inputs|E5~2
L1L0 = (((!L1L0) # (!LEFTOVERS)) # (!G1_BO0)) # (!G1_BO1);


--T1L0 is SCSI_SM:u_SCSI_SM|scsi_sm_inputs:u_scsi_sm_inputs|E[9]~14
T1L0 = (D1_STATE[1] & (!D1_STATE[3] & (D1_STATE[4] & T1L0)));


--U1L0 is SCSI_SM:u_SCSI_SM|scsi_sm_outputs:u_scsi_sm_outputs|F2S~4
U1L0 = (!T1L0 & (((D1_STATE[3]) # (!T1L0)) # (!D1_STATE[1])));


--M1L0 is CPU_SM:u_CPU_SM|CPU_SM_outputs:u_CPU_SM_outputs|nBREQ_d~10
M1L0 = (M1L0) # ((C1_STATE[4] & (C1_STATE[0] & M1L0)));


--M1L0 is CPU_SM:u_CPU_SM|CPU_SM_outputs:u_CPU_SM_outputs|F2CPUH_d~5
M1L0 = (_STERM & (((C1_STATE[4])) # (!L1L0))) # (!_STERM & (((!Q1L0))));


--K1_LLWS is fifo:int_fifo|fifo_write_strobes:u_write_strobes|LLWS
K1_LLWS = LCELL((LLW) # ((G1_BO1 & (G1_BO0 & K1L0))));


--R1L0 is CPU_SM:u_CPU_SM|cpudff4:u_cpudff4|cpudff4_d~17
R1L0 = (F1_FLUSHFIFO & (!H1_FIFOEMPTY & (G1_BO1 $ (G1_BO0))));


--U1L0 is SCSI_SM:u_SCSI_SM|scsi_sm_outputs:u_scsi_sm_outputs|SCSI_CS~0
U1L0 = (D1_STATE[4] & (D1_STATE[3] $ ((!D1_STATE[1])))) # (!D1_STATE[4] & ((D1_STATE[3] & ((!D1_STATE[2]))) # (!D1_STATE[3] & (D1_STATE[1] & D1_STATE[2]))));


--U1L0 is SCSI_SM:u_SCSI_SM|scsi_sm_outputs:u_scsi_sm_outputs|SCSI_CS~1
U1L0 = (U1L0 & ((D1_STATE[1]) # (D1_STATE[3] $ (D1_STATE[0])))) # (!U1L0 & (((D1_STATE[1] & D1_STATE[0]))));


--A1L0 is DSACK_LATCHED_[1]~0
A1L0 = !A1L0;


--A1L0 is DSACK_LATCHED_[0]~1
A1L0 = !A1L0;


--G1L0 is fifo:int_fifo|fifo_byte_ptr:u_byte_ptr|BO0~0
G1L0 = !G1_BO0;


--D1L0 is SCSI_SM:u_SCSI_SM|CDSACK_~0
D1L0 = !D1_nLS2CPU;


--J1L0 is fifo:int_fifo|fifo_3bit_cntr:u_next_out_cntr|COUNT[0]~2
J1L0 = !J1_COUNT[0];


--J1L0 is fifo:int_fifo|fifo_3bit_cntr:u_next_in_cntr|COUNT[0]~2
J1L0 = !J1_COUNT[0];


--_INT is _INT
--operation mode is output

_INT = OUTPUT(OPNDRN(!CB1_INT));


--_BR is _BR
--operation mode is output

_BR = OUTPUT(OPNDRN(!C1_BREQ));


--SIZ1 is SIZ1
--operation mode is bidir

SIZ1_tri_out = TRI(C1_SIZE1, C1_BGACK);
SIZ1 = BIDIR(SIZ1_tri_out);


--A1L0 is R_W~0
--operation mode is bidir

A1L0 = R_W;

--R_W is R_W
--operation mode is bidir

R_W_tri_out = TRI(!BB1_CNTR_O[1], C1_BGACK);
R_W = BIDIR(R_W_tri_out);


--A1L0 is _AS~0
--operation mode is bidir

A1L0 = _AS;

--_AS is _AS
--operation mode is bidir

_AS_tri_out = TRI(AS_O_, C1_BGACK);
_AS = BIDIR(_AS_tri_out);


--_DS is _DS
--operation mode is bidir

_DS_tri_out = TRI(DS_O_, C1_BGACK);
_DS = BIDIR(_DS_tri_out);


--A1L0 is _DSACK[0]~0
--operation mode is bidir

A1L0 = _DSACK[0];

--_DSACK[0] is _DSACK[0]
--operation mode is bidir

_DSACK[0] = BIDIR(OPNDRN(A1L0));


--A1L0 is _DSACK[1]~1
--operation mode is bidir

A1L0 = _DSACK[1];

--_DSACK[1] is _DSACK[1]
--operation mode is bidir

_DSACK[1] = BIDIR(OPNDRN(A1L0));


--A1L0 is DATA[0]~0
--operation mode is bidir

A1L0 = DATA[0];

--DATA[0] is DATA[0]
--operation mode is bidir

DATA[0]_tri_out = TRI(W1L0, W1L0);
DATA[0] = BIDIR(DATA[0]_tri_out);


--A1L0 is DATA[1]~1
--operation mode is bidir

A1L0 = DATA[1];

--DATA[1] is DATA[1]
--operation mode is bidir

DATA[1]_tri_out = TRI(W1L0, W1L0);
DATA[1] = BIDIR(DATA[1]_tri_out);


--A1L0 is DATA[2]~2
--operation mode is bidir

A1L0 = DATA[2];

--DATA[2] is DATA[2]
--operation mode is bidir

DATA[2]_tri_out = TRI(W1L0, W1L0);
DATA[2] = BIDIR(DATA[2]_tri_out);


--A1L0 is DATA[3]~3
--operation mode is bidir

A1L0 = DATA[3];

--DATA[3] is DATA[3]
--operation mode is bidir

DATA[3]_tri_out = TRI(W1L0, W1L0);
DATA[3] = BIDIR(DATA[3]_tri_out);


--A1L0 is DATA[4]~4
--operation mode is bidir

A1L0 = DATA[4];

--DATA[4] is DATA[4]
--operation mode is bidir

DATA[4]_tri_out = TRI(W1L0, W1L0);
DATA[4] = BIDIR(DATA[4]_tri_out);


--A1L0 is DATA[5]~5
--operation mode is bidir

A1L0 = DATA[5];

--DATA[5] is DATA[5]
--operation mode is bidir

DATA[5]_tri_out = TRI(W1L0, W1L0);
DATA[5] = BIDIR(DATA[5]_tri_out);


--A1L0 is DATA[6]~6
--operation mode is bidir

A1L0 = DATA[6];

--DATA[6] is DATA[6]
--operation mode is bidir

DATA[6]_tri_out = TRI(W1L0, W1L0);
DATA[6] = BIDIR(DATA[6]_tri_out);


--A1L0 is DATA[7]~7
--operation mode is bidir

A1L0 = DATA[7];

--DATA[7] is DATA[7]
--operation mode is bidir

DATA[7]_tri_out = TRI(W1L0, W1L0);
DATA[7] = BIDIR(DATA[7]_tri_out);


--A1L0 is DATA[8]~8
--operation mode is bidir

A1L0 = DATA[8];

--DATA[8] is DATA[8]
--operation mode is bidir

DATA[8]_tri_out = TRI(W1L0, W1L0);
DATA[8] = BIDIR(DATA[8]_tri_out);


--A1L0 is DATA[9]~9
--operation mode is bidir

A1L0 = DATA[9];

--DATA[9] is DATA[9]
--operation mode is bidir

DATA[9]_tri_out = TRI(W1L0, W1L0);
DATA[9] = BIDIR(DATA[9]_tri_out);


--A1L0 is DATA[10]~10
--operation mode is bidir

A1L0 = DATA[10];

--DATA[10] is DATA[10]
--operation mode is bidir

DATA[10]_tri_out = TRI(W1L0, W1L0);
DATA[10] = BIDIR(DATA[10]_tri_out);


--A1L0 is DATA[11]~11
--operation mode is bidir

A1L0 = DATA[11];

--DATA[11] is DATA[11]
--operation mode is bidir

DATA[11]_tri_out = TRI(W1L0, W1L0);
DATA[11] = BIDIR(DATA[11]_tri_out);


--A1L0 is DATA[12]~12
--operation mode is bidir

A1L0 = DATA[12];

--DATA[12] is DATA[12]
--operation mode is bidir

DATA[12]_tri_out = TRI(W1L0, W1L0);
DATA[12] = BIDIR(DATA[12]_tri_out);


--A1L0 is DATA[13]~13
--operation mode is bidir

A1L0 = DATA[13];

--DATA[13] is DATA[13]
--operation mode is bidir

DATA[13]_tri_out = TRI(W1L0, W1L0);
DATA[13] = BIDIR(DATA[13]_tri_out);


--A1L0 is DATA[14]~14
--operation mode is bidir

A1L0 = DATA[14];

--DATA[14] is DATA[14]
--operation mode is bidir

DATA[14]_tri_out = TRI(W1L0, W1L0);
DATA[14] = BIDIR(DATA[14]_tri_out);


--A1L0 is DATA[15]~15
--operation mode is bidir

A1L0 = DATA[15];

--DATA[15] is DATA[15]
--operation mode is bidir

DATA[15]_tri_out = TRI(W1L0, W1L0);
DATA[15] = BIDIR(DATA[15]_tri_out);


--A1L0 is DATA[16]~16
--operation mode is bidir

A1L0 = DATA[16];

--DATA[16] is DATA[16]
--operation mode is bidir

DATA[16]_tri_out = TRI(W1L0, W1L0);
DATA[16] = BIDIR(DATA[16]_tri_out);


--A1L0 is DATA[17]~17
--operation mode is bidir

A1L0 = DATA[17];

--DATA[17] is DATA[17]
--operation mode is bidir

DATA[17]_tri_out = TRI(W1L0, W1L0);
DATA[17] = BIDIR(DATA[17]_tri_out);


--A1L0 is DATA[18]~18
--operation mode is bidir

A1L0 = DATA[18];

--DATA[18] is DATA[18]
--operation mode is bidir

DATA[18]_tri_out = TRI(W1L0, W1L0);
DATA[18] = BIDIR(DATA[18]_tri_out);


--A1L0 is DATA[19]~19
--operation mode is bidir

A1L0 = DATA[19];

--DATA[19] is DATA[19]
--operation mode is bidir

DATA[19]_tri_out = TRI(W1L0, W1L0);
DATA[19] = BIDIR(DATA[19]_tri_out);


--A1L0 is DATA[20]~20
--operation mode is bidir

A1L0 = DATA[20];

--DATA[20] is DATA[20]
--operation mode is bidir

DATA[20]_tri_out = TRI(W1L0, W1L0);
DATA[20] = BIDIR(DATA[20]_tri_out);


--A1L0 is DATA[21]~21
--operation mode is bidir

A1L0 = DATA[21];

--DATA[21] is DATA[21]
--operation mode is bidir

DATA[21]_tri_out = TRI(W1L0, W1L0);
DATA[21] = BIDIR(DATA[21]_tri_out);


--A1L0 is DATA[22]~22
--operation mode is bidir

A1L0 = DATA[22];

--DATA[22] is DATA[22]
--operation mode is bidir

DATA[22]_tri_out = TRI(W1L0, W1L0);
DATA[22] = BIDIR(DATA[22]_tri_out);


--A1L0 is DATA[23]~23
--operation mode is bidir

A1L0 = DATA[23];

--DATA[23] is DATA[23]
--operation mode is bidir

DATA[23]_tri_out = TRI(W1L0, W1L0);
DATA[23] = BIDIR(DATA[23]_tri_out);


--A1L0 is DATA[24]~24
--operation mode is bidir

A1L0 = DATA[24];

--DATA[24] is DATA[24]
--operation mode is bidir

DATA[24]_tri_out = TRI(W1L0, W1L0);
DATA[24] = BIDIR(DATA[24]_tri_out);


--A1L0 is DATA[25]~25
--operation mode is bidir

A1L0 = DATA[25];

--DATA[25] is DATA[25]
--operation mode is bidir

DATA[25]_tri_out = TRI(W1L0, W1L0);
DATA[25] = BIDIR(DATA[25]_tri_out);


--A1L0 is DATA[26]~26
--operation mode is bidir

A1L0 = DATA[26];

--DATA[26] is DATA[26]
--operation mode is bidir

DATA[26]_tri_out = TRI(W1L0, W1L0);
DATA[26] = BIDIR(DATA[26]_tri_out);


--A1L0 is DATA[27]~27
--operation mode is bidir

A1L0 = DATA[27];

--DATA[27] is DATA[27]
--operation mode is bidir

DATA[27]_tri_out = TRI(W1L0, W1L0);
DATA[27] = BIDIR(DATA[27]_tri_out);


--A1L0 is DATA[28]~28
--operation mode is bidir

A1L0 = DATA[28];

--DATA[28] is DATA[28]
--operation mode is bidir

DATA[28]_tri_out = TRI(W1L0, W1L0);
DATA[28] = BIDIR(DATA[28]_tri_out);


--A1L0 is DATA[29]~29
--operation mode is bidir

A1L0 = DATA[29];

--DATA[29] is DATA[29]
--operation mode is bidir

DATA[29]_tri_out = TRI(W1L0, W1L0);
DATA[29] = BIDIR(DATA[29]_tri_out);


--A1L0 is DATA[30]~30
--operation mode is bidir

A1L0 = DATA[30];

--DATA[30] is DATA[30]
--operation mode is bidir

DATA[30]_tri_out = TRI(W1L0, W1L0);
DATA[30] = BIDIR(DATA[30]_tri_out);


--A1L0 is DATA[31]~31
--operation mode is bidir

A1L0 = DATA[31];

--DATA[31] is DATA[31]
--operation mode is bidir

DATA[31]_tri_out = TRI(W1L0, W1L0);
DATA[31] = BIDIR(DATA[31]_tri_out);


--A1L0 is _BGACK~0
--operation mode is bidir

A1L0 = _BGACK;

--_BGACK is _BGACK
--operation mode is bidir

_BGACK = BIDIR(OPNDRN(!C1_BGACK));


--A1L0 is PD_PORT[0]~0
--operation mode is bidir

A1L0 = PD_PORT[0];

--PD_PORT[0] is PD_PORT[0]
--operation mode is bidir

PD_PORT[0]_tri_out = TRI(Y1L0, Y1L0);
PD_PORT[0] = BIDIR(PD_PORT[0]_tri_out);


--A1L0 is PD_PORT[1]~1
--operation mode is bidir

A1L0 = PD_PORT[1];

--PD_PORT[1] is PD_PORT[1]
--operation mode is bidir

PD_PORT[1]_tri_out = TRI(Y1L0, Y1L0);
PD_PORT[1] = BIDIR(PD_PORT[1]_tri_out);


--A1L0 is PD_PORT[2]~2
--operation mode is bidir

A1L0 = PD_PORT[2];

--PD_PORT[2] is PD_PORT[2]
--operation mode is bidir

PD_PORT[2]_tri_out = TRI(Y1L0, Y1L0);
PD_PORT[2] = BIDIR(PD_PORT[2]_tri_out);


--A1L0 is PD_PORT[3]~3
--operation mode is bidir

A1L0 = PD_PORT[3];

--PD_PORT[3] is PD_PORT[3]
--operation mode is bidir

PD_PORT[3]_tri_out = TRI(Y1L0, Y1L0);
PD_PORT[3] = BIDIR(PD_PORT[3]_tri_out);


--A1L0 is PD_PORT[4]~4
--operation mode is bidir

A1L0 = PD_PORT[4];

--PD_PORT[4] is PD_PORT[4]
--operation mode is bidir

PD_PORT[4]_tri_out = TRI(Y1L0, Y1L0);
PD_PORT[4] = BIDIR(PD_PORT[4]_tri_out);


--A1L0 is PD_PORT[5]~5
--operation mode is bidir

A1L0 = PD_PORT[5];

--PD_PORT[5] is PD_PORT[5]
--operation mode is bidir

PD_PORT[5]_tri_out = TRI(Y1L0, Y1L0);
PD_PORT[5] = BIDIR(PD_PORT[5]_tri_out);


--A1L0 is PD_PORT[6]~6
--operation mode is bidir

A1L0 = PD_PORT[6];

--PD_PORT[6] is PD_PORT[6]
--operation mode is bidir

PD_PORT[6]_tri_out = TRI(Y1L0, Y1L0);
PD_PORT[6] = BIDIR(PD_PORT[6]_tri_out);


--A1L0 is PD_PORT[7]~7
--operation mode is bidir

A1L0 = PD_PORT[7];

--PD_PORT[7] is PD_PORT[7]
--operation mode is bidir

PD_PORT[7]_tri_out = TRI(Y1L0, Y1L0);
PD_PORT[7] = BIDIR(PD_PORT[7]_tri_out);


--_BERR is _BERR
--operation mode is input

_BERR = INPUT();


--_DMAEN is _DMAEN
--operation mode is output

_DMAEN = OUTPUT(!C1_BGACK);


--_DACK is _DACK
--operation mode is output

_DACK = OUTPUT(!D1_DACK_o);


--_IOR is _IOR
--operation mode is output

_IOR = OUTPUT(!A1L0);


--_IOW is _IOW
--operation mode is output

_IOW = OUTPUT(!A1L0);


--_CSS is _CSS
--operation mode is output

_CSS = OUTPUT(!D1_SCSI_CS_o);


--_LED_RD is _LED_RD
--operation mode is output

_LED_RD = OUTPUT(A1L0);


--_LED_WR is _LED_WR
--operation mode is output

_LED_WR = OUTPUT(A1L0);


--_LED_DMA is _LED_DMA
--operation mode is output

_LED_DMA = OUTPUT(!C1_BGACK);


--OWN_ is OWN_
--operation mode is output

OWN_ = OUTPUT(!C1_BGACK);


--DATA_OE_ is DATA_OE_
--operation mode is output

DATA_OE_ = OUTPUT(A1L0);


--_CS is _CS
--operation mode is input

_CS = INPUT();


--ADDR[2] is ADDR[2]
--operation mode is input

ADDR[2] = INPUT();


--ADDR[3] is ADDR[3]
--operation mode is input

ADDR[3] = INPUT();


--ADDR[6] is ADDR[6]
--operation mode is input

ADDR[6] = INPUT();


--ADDR[4] is ADDR[4]
--operation mode is input

ADDR[4] = INPUT();


--ADDR[5] is ADDR[5]
--operation mode is input

ADDR[5] = INPUT();


--INTA is INTA
--operation mode is input

INTA = INPUT();


--_STERM is _STERM
--operation mode is input

_STERM = INPUT();


--SCLK is SCLK
--operation mode is input

SCLK = INPUT();


--_RST is _RST
--operation mode is input

_RST = INPUT();


--_BG is _BG
--operation mode is input

_BG = INPUT();


--_DREQ is _DREQ
--operation mode is input

_DREQ = INPUT();



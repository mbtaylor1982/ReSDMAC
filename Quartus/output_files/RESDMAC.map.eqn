-- Copyright (C) 1991-2013 Altera Corporation
-- Your use of Altera Corporation's design tools, logic functions 
-- and other software and tools, and its AMPP partner logic 
-- functions, and any output files from any of the foregoing 
-- (including device programming or simulation files), and any 
-- associated documentation or information are expressly subject 
-- to the terms and conditions of the Altera Program License 
-- Subscription Agreement, Altera MegaCore Function License 
-- Agreement, or other applicable license agreement, including, 
-- without limitation, that your use is for the sole purpose of 
-- programming logic devices manufactured by Altera and sold by 
-- Altera or its authorized distributors.  Please refer to the 
-- applicable agreement for further details.
--X1__locked is PLL:u_PLL|atpll:APLL_inst|altpll:altpll_component|_locked
X1__locked = PLL.LOCKED(.ENA(), .CLKSWITCH(), .ARESET(!_RST), .PFDENA(), .INCLK(SCLK), .INCLK());

--X1__clk0 is PLL:u_PLL|atpll:APLL_inst|altpll:altpll_component|_clk0
X1__clk0 = PLL.CLK0(.ENA(), .CLKSWITCH(), .ARESET(!_RST), .PFDENA(), .INCLK(SCLK), .INCLK());

--X1__clk1 is PLL:u_PLL|atpll:APLL_inst|altpll:altpll_component|_clk1
X1__clk1 = PLL.CLK1(.ENA(), .CLKSWITCH(), .ARESET(!_RST), .PFDENA(), .INCLK(SCLK), .INCLK());

--X1__clk2 is PLL:u_PLL|atpll:APLL_inst|altpll:altpll_component|_clk2
X1__clk2 = PLL.CLK2(.ENA(), .CLKSWITCH(), .ARESET(!_RST), .PFDENA(), .INCLK(SCLK), .INCLK());


--N4_q_b[7] is fifo:int_fifo|altsyncram:BUFFER[0][7]__4|altsyncram_4ig1:auto_generated|q_b[7]
--RAM Block Operation Mode: Simple Dual-Port
--Port A Depth: 8, Port A Width: 1, Port B Depth: 8, Port B Width: 1
--Port A Logical Depth: 8, Port A Logical Width: 8, Port B Logical Depth: 8, Port B Logical Width: 8
--Port A Input: Registered, Port B Input: Registered, Port B Output: Un-registered
N4_q_b[7]_PORT_A_data_in = F1L3;
N4_q_b[7]_PORT_A_data_in_reg = DFFE(N4_q_b[7]_PORT_A_data_in, N4_q_b[7]_clock_0, , , );
N4_q_b[7]_PORT_A_address = BUS(L1_COUNT[0], L1_COUNT[1], L1_COUNT[2]);
N4_q_b[7]_PORT_A_address_reg = DFFE(N4_q_b[7]_PORT_A_address, N4_q_b[7]_clock_0, , , );
N4_q_b[7]_PORT_B_address = BUS(L2_COUNT[0], L2_COUNT[1], L2_COUNT[2]);
N4_q_b[7]_PORT_B_address_reg = DFFE(N4_q_b[7]_PORT_B_address, N4_q_b[7]_clock_0, , , );
N4_q_b[7]_PORT_A_write_enable = M1_LLWS;
N4_q_b[7]_PORT_A_write_enable_reg = DFFE(N4_q_b[7]_PORT_A_write_enable, N4_q_b[7]_clock_0, , , );
N4_q_b[7]_PORT_B_read_enable = VCC;
N4_q_b[7]_PORT_B_read_enable_reg = DFFE(N4_q_b[7]_PORT_B_read_enable, N4_q_b[7]_clock_0, , , );
N4_q_b[7]_clock_0 = SCLK;
N4_q_b[7]_PORT_B_data_out = MEMORY(N4_q_b[7]_PORT_A_data_in_reg, , N4_q_b[7]_PORT_A_address_reg, N4_q_b[7]_PORT_B_address_reg, N4_q_b[7]_PORT_A_write_enable_reg, N4_q_b[7]_PORT_B_read_enable_reg, , , N4_q_b[7]_clock_0, , , , , );
N4_q_b[7] = N4_q_b[7]_PORT_B_data_out[0];


--N2_q_b[7] is fifo:int_fifo|altsyncram:BUFFER[0][23]__2|altsyncram_4ig1:auto_generated|q_b[7]
--RAM Block Operation Mode: Simple Dual-Port
--Port A Depth: 8, Port A Width: 1, Port B Depth: 8, Port B Width: 1
--Port A Logical Depth: 8, Port A Logical Width: 8, Port B Logical Depth: 8, Port B Logical Width: 8
--Port A Input: Registered, Port B Input: Registered, Port B Output: Un-registered
N2_q_b[7]_PORT_A_data_in = F1L27;
N2_q_b[7]_PORT_A_data_in_reg = DFFE(N2_q_b[7]_PORT_A_data_in, N2_q_b[7]_clock_0, , , );
N2_q_b[7]_PORT_A_address = BUS(L1_COUNT[0], L1_COUNT[1], L1_COUNT[2]);
N2_q_b[7]_PORT_A_address_reg = DFFE(N2_q_b[7]_PORT_A_address, N2_q_b[7]_clock_0, , , );
N2_q_b[7]_PORT_B_address = BUS(L2_COUNT[0], L2_COUNT[1], L2_COUNT[2]);
N2_q_b[7]_PORT_B_address_reg = DFFE(N2_q_b[7]_PORT_B_address, N2_q_b[7]_clock_0, , , );
N2_q_b[7]_PORT_A_write_enable = M1_UMWS;
N2_q_b[7]_PORT_A_write_enable_reg = DFFE(N2_q_b[7]_PORT_A_write_enable, N2_q_b[7]_clock_0, , , );
N2_q_b[7]_PORT_B_read_enable = VCC;
N2_q_b[7]_PORT_B_read_enable_reg = DFFE(N2_q_b[7]_PORT_B_read_enable, N2_q_b[7]_clock_0, , , );
N2_q_b[7]_clock_0 = SCLK;
N2_q_b[7]_PORT_B_data_out = MEMORY(N2_q_b[7]_PORT_A_data_in_reg, , N2_q_b[7]_PORT_A_address_reg, N2_q_b[7]_PORT_B_address_reg, N2_q_b[7]_PORT_A_write_enable_reg, N2_q_b[7]_PORT_B_read_enable_reg, , , N2_q_b[7]_clock_0, , , , , );
N2_q_b[7] = N2_q_b[7]_PORT_B_data_out[0];


--N3_q_b[7] is fifo:int_fifo|altsyncram:BUFFER[0][15]__3|altsyncram_4ig1:auto_generated|q_b[7]
--RAM Block Operation Mode: Simple Dual-Port
--Port A Depth: 8, Port A Width: 1, Port B Depth: 8, Port B Width: 1
--Port A Logical Depth: 8, Port A Logical Width: 8, Port B Logical Depth: 8, Port B Logical Width: 8
--Port A Input: Registered, Port B Input: Registered, Port B Output: Un-registered
N3_q_b[7]_PORT_A_data_in = F1L12;
N3_q_b[7]_PORT_A_data_in_reg = DFFE(N3_q_b[7]_PORT_A_data_in, N3_q_b[7]_clock_0, , , );
N3_q_b[7]_PORT_A_address = BUS(L1_COUNT[0], L1_COUNT[1], L1_COUNT[2]);
N3_q_b[7]_PORT_A_address_reg = DFFE(N3_q_b[7]_PORT_A_address, N3_q_b[7]_clock_0, , , );
N3_q_b[7]_PORT_B_address = BUS(L2_COUNT[0], L2_COUNT[1], L2_COUNT[2]);
N3_q_b[7]_PORT_B_address_reg = DFFE(N3_q_b[7]_PORT_B_address, N3_q_b[7]_clock_0, , , );
N3_q_b[7]_PORT_A_write_enable = M1_LMWS;
N3_q_b[7]_PORT_A_write_enable_reg = DFFE(N3_q_b[7]_PORT_A_write_enable, N3_q_b[7]_clock_0, , , );
N3_q_b[7]_PORT_B_read_enable = VCC;
N3_q_b[7]_PORT_B_read_enable_reg = DFFE(N3_q_b[7]_PORT_B_read_enable, N3_q_b[7]_clock_0, , , );
N3_q_b[7]_clock_0 = SCLK;
N3_q_b[7]_PORT_B_data_out = MEMORY(N3_q_b[7]_PORT_A_data_in_reg, , N3_q_b[7]_PORT_A_address_reg, N3_q_b[7]_PORT_B_address_reg, N3_q_b[7]_PORT_A_write_enable_reg, N3_q_b[7]_PORT_B_read_enable_reg, , , N3_q_b[7]_clock_0, , , , , );
N3_q_b[7] = N3_q_b[7]_PORT_B_data_out[0];


--N1_q_b[7] is fifo:int_fifo|altsyncram:BUFFER[0][31]__1|altsyncram_4ig1:auto_generated|q_b[7]
--RAM Block Operation Mode: Simple Dual-Port
--Port A Depth: 8, Port A Width: 1, Port B Depth: 8, Port B Width: 1
--Port A Logical Depth: 8, Port A Logical Width: 8, Port B Logical Depth: 8, Port B Logical Width: 8
--Port A Input: Registered, Port B Input: Registered, Port B Output: Un-registered
N1_q_b[7]_PORT_A_data_in = F1L35;
N1_q_b[7]_PORT_A_data_in_reg = DFFE(N1_q_b[7]_PORT_A_data_in, N1_q_b[7]_clock_0, , , );
N1_q_b[7]_PORT_A_address = BUS(L1_COUNT[0], L1_COUNT[1], L1_COUNT[2]);
N1_q_b[7]_PORT_A_address_reg = DFFE(N1_q_b[7]_PORT_A_address, N1_q_b[7]_clock_0, , , );
N1_q_b[7]_PORT_B_address = BUS(L2_COUNT[0], L2_COUNT[1], L2_COUNT[2]);
N1_q_b[7]_PORT_B_address_reg = DFFE(N1_q_b[7]_PORT_B_address, N1_q_b[7]_clock_0, , , );
N1_q_b[7]_PORT_A_write_enable = M1_UUWS;
N1_q_b[7]_PORT_A_write_enable_reg = DFFE(N1_q_b[7]_PORT_A_write_enable, N1_q_b[7]_clock_0, , , );
N1_q_b[7]_PORT_B_read_enable = VCC;
N1_q_b[7]_PORT_B_read_enable_reg = DFFE(N1_q_b[7]_PORT_B_read_enable, N1_q_b[7]_clock_0, , , );
N1_q_b[7]_clock_0 = SCLK;
N1_q_b[7]_PORT_B_data_out = MEMORY(N1_q_b[7]_PORT_A_data_in_reg, , N1_q_b[7]_PORT_A_address_reg, N1_q_b[7]_PORT_B_address_reg, N1_q_b[7]_PORT_A_write_enable_reg, N1_q_b[7]_PORT_B_read_enable_reg, , , N1_q_b[7]_clock_0, , , , , );
N1_q_b[7] = N1_q_b[7]_PORT_B_data_out[0];


--N4_q_b[6] is fifo:int_fifo|altsyncram:BUFFER[0][7]__4|altsyncram_4ig1:auto_generated|q_b[6]
--RAM Block Operation Mode: Simple Dual-Port
--Port A Depth: 8, Port A Width: 1, Port B Depth: 8, Port B Width: 1
--Port A Logical Depth: 8, Port A Logical Width: 8, Port B Logical Depth: 8, Port B Logical Width: 8
--Port A Input: Registered, Port B Input: Registered, Port B Output: Un-registered
N4_q_b[6]_PORT_A_data_in = F1L4;
N4_q_b[6]_PORT_A_data_in_reg = DFFE(N4_q_b[6]_PORT_A_data_in, N4_q_b[6]_clock_0, , , );
N4_q_b[6]_PORT_A_address = BUS(L1_COUNT[0], L1_COUNT[1], L1_COUNT[2]);
N4_q_b[6]_PORT_A_address_reg = DFFE(N4_q_b[6]_PORT_A_address, N4_q_b[6]_clock_0, , , );
N4_q_b[6]_PORT_B_address = BUS(L2_COUNT[0], L2_COUNT[1], L2_COUNT[2]);
N4_q_b[6]_PORT_B_address_reg = DFFE(N4_q_b[6]_PORT_B_address, N4_q_b[6]_clock_0, , , );
N4_q_b[6]_PORT_A_write_enable = M1_LLWS;
N4_q_b[6]_PORT_A_write_enable_reg = DFFE(N4_q_b[6]_PORT_A_write_enable, N4_q_b[6]_clock_0, , , );
N4_q_b[6]_PORT_B_read_enable = VCC;
N4_q_b[6]_PORT_B_read_enable_reg = DFFE(N4_q_b[6]_PORT_B_read_enable, N4_q_b[6]_clock_0, , , );
N4_q_b[6]_clock_0 = SCLK;
N4_q_b[6]_PORT_B_data_out = MEMORY(N4_q_b[6]_PORT_A_data_in_reg, , N4_q_b[6]_PORT_A_address_reg, N4_q_b[6]_PORT_B_address_reg, N4_q_b[6]_PORT_A_write_enable_reg, N4_q_b[6]_PORT_B_read_enable_reg, , , N4_q_b[6]_clock_0, , , , , );
N4_q_b[6] = N4_q_b[6]_PORT_B_data_out[0];


--N2_q_b[6] is fifo:int_fifo|altsyncram:BUFFER[0][23]__2|altsyncram_4ig1:auto_generated|q_b[6]
--RAM Block Operation Mode: Simple Dual-Port
--Port A Depth: 8, Port A Width: 1, Port B Depth: 8, Port B Width: 1
--Port A Logical Depth: 8, Port A Logical Width: 8, Port B Logical Depth: 8, Port B Logical Width: 8
--Port A Input: Registered, Port B Input: Registered, Port B Output: Un-registered
N2_q_b[6]_PORT_A_data_in = F1L28;
N2_q_b[6]_PORT_A_data_in_reg = DFFE(N2_q_b[6]_PORT_A_data_in, N2_q_b[6]_clock_0, , , );
N2_q_b[6]_PORT_A_address = BUS(L1_COUNT[0], L1_COUNT[1], L1_COUNT[2]);
N2_q_b[6]_PORT_A_address_reg = DFFE(N2_q_b[6]_PORT_A_address, N2_q_b[6]_clock_0, , , );
N2_q_b[6]_PORT_B_address = BUS(L2_COUNT[0], L2_COUNT[1], L2_COUNT[2]);
N2_q_b[6]_PORT_B_address_reg = DFFE(N2_q_b[6]_PORT_B_address, N2_q_b[6]_clock_0, , , );
N2_q_b[6]_PORT_A_write_enable = M1_UMWS;
N2_q_b[6]_PORT_A_write_enable_reg = DFFE(N2_q_b[6]_PORT_A_write_enable, N2_q_b[6]_clock_0, , , );
N2_q_b[6]_PORT_B_read_enable = VCC;
N2_q_b[6]_PORT_B_read_enable_reg = DFFE(N2_q_b[6]_PORT_B_read_enable, N2_q_b[6]_clock_0, , , );
N2_q_b[6]_clock_0 = SCLK;
N2_q_b[6]_PORT_B_data_out = MEMORY(N2_q_b[6]_PORT_A_data_in_reg, , N2_q_b[6]_PORT_A_address_reg, N2_q_b[6]_PORT_B_address_reg, N2_q_b[6]_PORT_A_write_enable_reg, N2_q_b[6]_PORT_B_read_enable_reg, , , N2_q_b[6]_clock_0, , , , , );
N2_q_b[6] = N2_q_b[6]_PORT_B_data_out[0];


--N3_q_b[6] is fifo:int_fifo|altsyncram:BUFFER[0][15]__3|altsyncram_4ig1:auto_generated|q_b[6]
--RAM Block Operation Mode: Simple Dual-Port
--Port A Depth: 8, Port A Width: 1, Port B Depth: 8, Port B Width: 1
--Port A Logical Depth: 8, Port A Logical Width: 8, Port B Logical Depth: 8, Port B Logical Width: 8
--Port A Input: Registered, Port B Input: Registered, Port B Output: Un-registered
N3_q_b[6]_PORT_A_data_in = F1L14;
N3_q_b[6]_PORT_A_data_in_reg = DFFE(N3_q_b[6]_PORT_A_data_in, N3_q_b[6]_clock_0, , , );
N3_q_b[6]_PORT_A_address = BUS(L1_COUNT[0], L1_COUNT[1], L1_COUNT[2]);
N3_q_b[6]_PORT_A_address_reg = DFFE(N3_q_b[6]_PORT_A_address, N3_q_b[6]_clock_0, , , );
N3_q_b[6]_PORT_B_address = BUS(L2_COUNT[0], L2_COUNT[1], L2_COUNT[2]);
N3_q_b[6]_PORT_B_address_reg = DFFE(N3_q_b[6]_PORT_B_address, N3_q_b[6]_clock_0, , , );
N3_q_b[6]_PORT_A_write_enable = M1_LMWS;
N3_q_b[6]_PORT_A_write_enable_reg = DFFE(N3_q_b[6]_PORT_A_write_enable, N3_q_b[6]_clock_0, , , );
N3_q_b[6]_PORT_B_read_enable = VCC;
N3_q_b[6]_PORT_B_read_enable_reg = DFFE(N3_q_b[6]_PORT_B_read_enable, N3_q_b[6]_clock_0, , , );
N3_q_b[6]_clock_0 = SCLK;
N3_q_b[6]_PORT_B_data_out = MEMORY(N3_q_b[6]_PORT_A_data_in_reg, , N3_q_b[6]_PORT_A_address_reg, N3_q_b[6]_PORT_B_address_reg, N3_q_b[6]_PORT_A_write_enable_reg, N3_q_b[6]_PORT_B_read_enable_reg, , , N3_q_b[6]_clock_0, , , , , );
N3_q_b[6] = N3_q_b[6]_PORT_B_data_out[0];


--N1_q_b[6] is fifo:int_fifo|altsyncram:BUFFER[0][31]__1|altsyncram_4ig1:auto_generated|q_b[6]
--RAM Block Operation Mode: Simple Dual-Port
--Port A Depth: 8, Port A Width: 1, Port B Depth: 8, Port B Width: 1
--Port A Logical Depth: 8, Port A Logical Width: 8, Port B Logical Depth: 8, Port B Logical Width: 8
--Port A Input: Registered, Port B Input: Registered, Port B Output: Un-registered
N1_q_b[6]_PORT_A_data_in = F1L36;
N1_q_b[6]_PORT_A_data_in_reg = DFFE(N1_q_b[6]_PORT_A_data_in, N1_q_b[6]_clock_0, , , );
N1_q_b[6]_PORT_A_address = BUS(L1_COUNT[0], L1_COUNT[1], L1_COUNT[2]);
N1_q_b[6]_PORT_A_address_reg = DFFE(N1_q_b[6]_PORT_A_address, N1_q_b[6]_clock_0, , , );
N1_q_b[6]_PORT_B_address = BUS(L2_COUNT[0], L2_COUNT[1], L2_COUNT[2]);
N1_q_b[6]_PORT_B_address_reg = DFFE(N1_q_b[6]_PORT_B_address, N1_q_b[6]_clock_0, , , );
N1_q_b[6]_PORT_A_write_enable = M1_UUWS;
N1_q_b[6]_PORT_A_write_enable_reg = DFFE(N1_q_b[6]_PORT_A_write_enable, N1_q_b[6]_clock_0, , , );
N1_q_b[6]_PORT_B_read_enable = VCC;
N1_q_b[6]_PORT_B_read_enable_reg = DFFE(N1_q_b[6]_PORT_B_read_enable, N1_q_b[6]_clock_0, , , );
N1_q_b[6]_clock_0 = SCLK;
N1_q_b[6]_PORT_B_data_out = MEMORY(N1_q_b[6]_PORT_A_data_in_reg, , N1_q_b[6]_PORT_A_address_reg, N1_q_b[6]_PORT_B_address_reg, N1_q_b[6]_PORT_A_write_enable_reg, N1_q_b[6]_PORT_B_read_enable_reg, , , N1_q_b[6]_clock_0, , , , , );
N1_q_b[6] = N1_q_b[6]_PORT_B_data_out[0];


--N4_q_b[5] is fifo:int_fifo|altsyncram:BUFFER[0][7]__4|altsyncram_4ig1:auto_generated|q_b[5]
--RAM Block Operation Mode: Simple Dual-Port
--Port A Depth: 8, Port A Width: 1, Port B Depth: 8, Port B Width: 1
--Port A Logical Depth: 8, Port A Logical Width: 8, Port B Logical Depth: 8, Port B Logical Width: 8
--Port A Input: Registered, Port B Input: Registered, Port B Output: Un-registered
N4_q_b[5]_PORT_A_data_in = F1L5;
N4_q_b[5]_PORT_A_data_in_reg = DFFE(N4_q_b[5]_PORT_A_data_in, N4_q_b[5]_clock_0, , , );
N4_q_b[5]_PORT_A_address = BUS(L1_COUNT[0], L1_COUNT[1], L1_COUNT[2]);
N4_q_b[5]_PORT_A_address_reg = DFFE(N4_q_b[5]_PORT_A_address, N4_q_b[5]_clock_0, , , );
N4_q_b[5]_PORT_B_address = BUS(L2_COUNT[0], L2_COUNT[1], L2_COUNT[2]);
N4_q_b[5]_PORT_B_address_reg = DFFE(N4_q_b[5]_PORT_B_address, N4_q_b[5]_clock_0, , , );
N4_q_b[5]_PORT_A_write_enable = M1_LLWS;
N4_q_b[5]_PORT_A_write_enable_reg = DFFE(N4_q_b[5]_PORT_A_write_enable, N4_q_b[5]_clock_0, , , );
N4_q_b[5]_PORT_B_read_enable = VCC;
N4_q_b[5]_PORT_B_read_enable_reg = DFFE(N4_q_b[5]_PORT_B_read_enable, N4_q_b[5]_clock_0, , , );
N4_q_b[5]_clock_0 = SCLK;
N4_q_b[5]_PORT_B_data_out = MEMORY(N4_q_b[5]_PORT_A_data_in_reg, , N4_q_b[5]_PORT_A_address_reg, N4_q_b[5]_PORT_B_address_reg, N4_q_b[5]_PORT_A_write_enable_reg, N4_q_b[5]_PORT_B_read_enable_reg, , , N4_q_b[5]_clock_0, , , , , );
N4_q_b[5] = N4_q_b[5]_PORT_B_data_out[0];


--N2_q_b[5] is fifo:int_fifo|altsyncram:BUFFER[0][23]__2|altsyncram_4ig1:auto_generated|q_b[5]
--RAM Block Operation Mode: Simple Dual-Port
--Port A Depth: 8, Port A Width: 1, Port B Depth: 8, Port B Width: 1
--Port A Logical Depth: 8, Port A Logical Width: 8, Port B Logical Depth: 8, Port B Logical Width: 8
--Port A Input: Registered, Port B Input: Registered, Port B Output: Un-registered
N2_q_b[5]_PORT_A_data_in = F1L29;
N2_q_b[5]_PORT_A_data_in_reg = DFFE(N2_q_b[5]_PORT_A_data_in, N2_q_b[5]_clock_0, , , );
N2_q_b[5]_PORT_A_address = BUS(L1_COUNT[0], L1_COUNT[1], L1_COUNT[2]);
N2_q_b[5]_PORT_A_address_reg = DFFE(N2_q_b[5]_PORT_A_address, N2_q_b[5]_clock_0, , , );
N2_q_b[5]_PORT_B_address = BUS(L2_COUNT[0], L2_COUNT[1], L2_COUNT[2]);
N2_q_b[5]_PORT_B_address_reg = DFFE(N2_q_b[5]_PORT_B_address, N2_q_b[5]_clock_0, , , );
N2_q_b[5]_PORT_A_write_enable = M1_UMWS;
N2_q_b[5]_PORT_A_write_enable_reg = DFFE(N2_q_b[5]_PORT_A_write_enable, N2_q_b[5]_clock_0, , , );
N2_q_b[5]_PORT_B_read_enable = VCC;
N2_q_b[5]_PORT_B_read_enable_reg = DFFE(N2_q_b[5]_PORT_B_read_enable, N2_q_b[5]_clock_0, , , );
N2_q_b[5]_clock_0 = SCLK;
N2_q_b[5]_PORT_B_data_out = MEMORY(N2_q_b[5]_PORT_A_data_in_reg, , N2_q_b[5]_PORT_A_address_reg, N2_q_b[5]_PORT_B_address_reg, N2_q_b[5]_PORT_A_write_enable_reg, N2_q_b[5]_PORT_B_read_enable_reg, , , N2_q_b[5]_clock_0, , , , , );
N2_q_b[5] = N2_q_b[5]_PORT_B_data_out[0];


--N3_q_b[5] is fifo:int_fifo|altsyncram:BUFFER[0][15]__3|altsyncram_4ig1:auto_generated|q_b[5]
--RAM Block Operation Mode: Simple Dual-Port
--Port A Depth: 8, Port A Width: 1, Port B Depth: 8, Port B Width: 1
--Port A Logical Depth: 8, Port A Logical Width: 8, Port B Logical Depth: 8, Port B Logical Width: 8
--Port A Input: Registered, Port B Input: Registered, Port B Output: Un-registered
N3_q_b[5]_PORT_A_data_in = F1L16;
N3_q_b[5]_PORT_A_data_in_reg = DFFE(N3_q_b[5]_PORT_A_data_in, N3_q_b[5]_clock_0, , , );
N3_q_b[5]_PORT_A_address = BUS(L1_COUNT[0], L1_COUNT[1], L1_COUNT[2]);
N3_q_b[5]_PORT_A_address_reg = DFFE(N3_q_b[5]_PORT_A_address, N3_q_b[5]_clock_0, , , );
N3_q_b[5]_PORT_B_address = BUS(L2_COUNT[0], L2_COUNT[1], L2_COUNT[2]);
N3_q_b[5]_PORT_B_address_reg = DFFE(N3_q_b[5]_PORT_B_address, N3_q_b[5]_clock_0, , , );
N3_q_b[5]_PORT_A_write_enable = M1_LMWS;
N3_q_b[5]_PORT_A_write_enable_reg = DFFE(N3_q_b[5]_PORT_A_write_enable, N3_q_b[5]_clock_0, , , );
N3_q_b[5]_PORT_B_read_enable = VCC;
N3_q_b[5]_PORT_B_read_enable_reg = DFFE(N3_q_b[5]_PORT_B_read_enable, N3_q_b[5]_clock_0, , , );
N3_q_b[5]_clock_0 = SCLK;
N3_q_b[5]_PORT_B_data_out = MEMORY(N3_q_b[5]_PORT_A_data_in_reg, , N3_q_b[5]_PORT_A_address_reg, N3_q_b[5]_PORT_B_address_reg, N3_q_b[5]_PORT_A_write_enable_reg, N3_q_b[5]_PORT_B_read_enable_reg, , , N3_q_b[5]_clock_0, , , , , );
N3_q_b[5] = N3_q_b[5]_PORT_B_data_out[0];


--N1_q_b[5] is fifo:int_fifo|altsyncram:BUFFER[0][31]__1|altsyncram_4ig1:auto_generated|q_b[5]
--RAM Block Operation Mode: Simple Dual-Port
--Port A Depth: 8, Port A Width: 1, Port B Depth: 8, Port B Width: 1
--Port A Logical Depth: 8, Port A Logical Width: 8, Port B Logical Depth: 8, Port B Logical Width: 8
--Port A Input: Registered, Port B Input: Registered, Port B Output: Un-registered
N1_q_b[5]_PORT_A_data_in = F1L37;
N1_q_b[5]_PORT_A_data_in_reg = DFFE(N1_q_b[5]_PORT_A_data_in, N1_q_b[5]_clock_0, , , );
N1_q_b[5]_PORT_A_address = BUS(L1_COUNT[0], L1_COUNT[1], L1_COUNT[2]);
N1_q_b[5]_PORT_A_address_reg = DFFE(N1_q_b[5]_PORT_A_address, N1_q_b[5]_clock_0, , , );
N1_q_b[5]_PORT_B_address = BUS(L2_COUNT[0], L2_COUNT[1], L2_COUNT[2]);
N1_q_b[5]_PORT_B_address_reg = DFFE(N1_q_b[5]_PORT_B_address, N1_q_b[5]_clock_0, , , );
N1_q_b[5]_PORT_A_write_enable = M1_UUWS;
N1_q_b[5]_PORT_A_write_enable_reg = DFFE(N1_q_b[5]_PORT_A_write_enable, N1_q_b[5]_clock_0, , , );
N1_q_b[5]_PORT_B_read_enable = VCC;
N1_q_b[5]_PORT_B_read_enable_reg = DFFE(N1_q_b[5]_PORT_B_read_enable, N1_q_b[5]_clock_0, , , );
N1_q_b[5]_clock_0 = SCLK;
N1_q_b[5]_PORT_B_data_out = MEMORY(N1_q_b[5]_PORT_A_data_in_reg, , N1_q_b[5]_PORT_A_address_reg, N1_q_b[5]_PORT_B_address_reg, N1_q_b[5]_PORT_A_write_enable_reg, N1_q_b[5]_PORT_B_read_enable_reg, , , N1_q_b[5]_clock_0, , , , , );
N1_q_b[5] = N1_q_b[5]_PORT_B_data_out[0];


--N4_q_b[4] is fifo:int_fifo|altsyncram:BUFFER[0][7]__4|altsyncram_4ig1:auto_generated|q_b[4]
--RAM Block Operation Mode: Simple Dual-Port
--Port A Depth: 8, Port A Width: 1, Port B Depth: 8, Port B Width: 1
--Port A Logical Depth: 8, Port A Logical Width: 8, Port B Logical Depth: 8, Port B Logical Width: 8
--Port A Input: Registered, Port B Input: Registered, Port B Output: Un-registered
N4_q_b[4]_PORT_A_data_in = F1L6;
N4_q_b[4]_PORT_A_data_in_reg = DFFE(N4_q_b[4]_PORT_A_data_in, N4_q_b[4]_clock_0, , , );
N4_q_b[4]_PORT_A_address = BUS(L1_COUNT[0], L1_COUNT[1], L1_COUNT[2]);
N4_q_b[4]_PORT_A_address_reg = DFFE(N4_q_b[4]_PORT_A_address, N4_q_b[4]_clock_0, , , );
N4_q_b[4]_PORT_B_address = BUS(L2_COUNT[0], L2_COUNT[1], L2_COUNT[2]);
N4_q_b[4]_PORT_B_address_reg = DFFE(N4_q_b[4]_PORT_B_address, N4_q_b[4]_clock_0, , , );
N4_q_b[4]_PORT_A_write_enable = M1_LLWS;
N4_q_b[4]_PORT_A_write_enable_reg = DFFE(N4_q_b[4]_PORT_A_write_enable, N4_q_b[4]_clock_0, , , );
N4_q_b[4]_PORT_B_read_enable = VCC;
N4_q_b[4]_PORT_B_read_enable_reg = DFFE(N4_q_b[4]_PORT_B_read_enable, N4_q_b[4]_clock_0, , , );
N4_q_b[4]_clock_0 = SCLK;
N4_q_b[4]_PORT_B_data_out = MEMORY(N4_q_b[4]_PORT_A_data_in_reg, , N4_q_b[4]_PORT_A_address_reg, N4_q_b[4]_PORT_B_address_reg, N4_q_b[4]_PORT_A_write_enable_reg, N4_q_b[4]_PORT_B_read_enable_reg, , , N4_q_b[4]_clock_0, , , , , );
N4_q_b[4] = N4_q_b[4]_PORT_B_data_out[0];


--N2_q_b[4] is fifo:int_fifo|altsyncram:BUFFER[0][23]__2|altsyncram_4ig1:auto_generated|q_b[4]
--RAM Block Operation Mode: Simple Dual-Port
--Port A Depth: 8, Port A Width: 1, Port B Depth: 8, Port B Width: 1
--Port A Logical Depth: 8, Port A Logical Width: 8, Port B Logical Depth: 8, Port B Logical Width: 8
--Port A Input: Registered, Port B Input: Registered, Port B Output: Un-registered
N2_q_b[4]_PORT_A_data_in = F1L30;
N2_q_b[4]_PORT_A_data_in_reg = DFFE(N2_q_b[4]_PORT_A_data_in, N2_q_b[4]_clock_0, , , );
N2_q_b[4]_PORT_A_address = BUS(L1_COUNT[0], L1_COUNT[1], L1_COUNT[2]);
N2_q_b[4]_PORT_A_address_reg = DFFE(N2_q_b[4]_PORT_A_address, N2_q_b[4]_clock_0, , , );
N2_q_b[4]_PORT_B_address = BUS(L2_COUNT[0], L2_COUNT[1], L2_COUNT[2]);
N2_q_b[4]_PORT_B_address_reg = DFFE(N2_q_b[4]_PORT_B_address, N2_q_b[4]_clock_0, , , );
N2_q_b[4]_PORT_A_write_enable = M1_UMWS;
N2_q_b[4]_PORT_A_write_enable_reg = DFFE(N2_q_b[4]_PORT_A_write_enable, N2_q_b[4]_clock_0, , , );
N2_q_b[4]_PORT_B_read_enable = VCC;
N2_q_b[4]_PORT_B_read_enable_reg = DFFE(N2_q_b[4]_PORT_B_read_enable, N2_q_b[4]_clock_0, , , );
N2_q_b[4]_clock_0 = SCLK;
N2_q_b[4]_PORT_B_data_out = MEMORY(N2_q_b[4]_PORT_A_data_in_reg, , N2_q_b[4]_PORT_A_address_reg, N2_q_b[4]_PORT_B_address_reg, N2_q_b[4]_PORT_A_write_enable_reg, N2_q_b[4]_PORT_B_read_enable_reg, , , N2_q_b[4]_clock_0, , , , , );
N2_q_b[4] = N2_q_b[4]_PORT_B_data_out[0];


--N3_q_b[4] is fifo:int_fifo|altsyncram:BUFFER[0][15]__3|altsyncram_4ig1:auto_generated|q_b[4]
--RAM Block Operation Mode: Simple Dual-Port
--Port A Depth: 8, Port A Width: 1, Port B Depth: 8, Port B Width: 1
--Port A Logical Depth: 8, Port A Logical Width: 8, Port B Logical Depth: 8, Port B Logical Width: 8
--Port A Input: Registered, Port B Input: Registered, Port B Output: Un-registered
N3_q_b[4]_PORT_A_data_in = F1L18;
N3_q_b[4]_PORT_A_data_in_reg = DFFE(N3_q_b[4]_PORT_A_data_in, N3_q_b[4]_clock_0, , , );
N3_q_b[4]_PORT_A_address = BUS(L1_COUNT[0], L1_COUNT[1], L1_COUNT[2]);
N3_q_b[4]_PORT_A_address_reg = DFFE(N3_q_b[4]_PORT_A_address, N3_q_b[4]_clock_0, , , );
N3_q_b[4]_PORT_B_address = BUS(L2_COUNT[0], L2_COUNT[1], L2_COUNT[2]);
N3_q_b[4]_PORT_B_address_reg = DFFE(N3_q_b[4]_PORT_B_address, N3_q_b[4]_clock_0, , , );
N3_q_b[4]_PORT_A_write_enable = M1_LMWS;
N3_q_b[4]_PORT_A_write_enable_reg = DFFE(N3_q_b[4]_PORT_A_write_enable, N3_q_b[4]_clock_0, , , );
N3_q_b[4]_PORT_B_read_enable = VCC;
N3_q_b[4]_PORT_B_read_enable_reg = DFFE(N3_q_b[4]_PORT_B_read_enable, N3_q_b[4]_clock_0, , , );
N3_q_b[4]_clock_0 = SCLK;
N3_q_b[4]_PORT_B_data_out = MEMORY(N3_q_b[4]_PORT_A_data_in_reg, , N3_q_b[4]_PORT_A_address_reg, N3_q_b[4]_PORT_B_address_reg, N3_q_b[4]_PORT_A_write_enable_reg, N3_q_b[4]_PORT_B_read_enable_reg, , , N3_q_b[4]_clock_0, , , , , );
N3_q_b[4] = N3_q_b[4]_PORT_B_data_out[0];


--N1_q_b[4] is fifo:int_fifo|altsyncram:BUFFER[0][31]__1|altsyncram_4ig1:auto_generated|q_b[4]
--RAM Block Operation Mode: Simple Dual-Port
--Port A Depth: 8, Port A Width: 1, Port B Depth: 8, Port B Width: 1
--Port A Logical Depth: 8, Port A Logical Width: 8, Port B Logical Depth: 8, Port B Logical Width: 8
--Port A Input: Registered, Port B Input: Registered, Port B Output: Un-registered
N1_q_b[4]_PORT_A_data_in = F1L38;
N1_q_b[4]_PORT_A_data_in_reg = DFFE(N1_q_b[4]_PORT_A_data_in, N1_q_b[4]_clock_0, , , );
N1_q_b[4]_PORT_A_address = BUS(L1_COUNT[0], L1_COUNT[1], L1_COUNT[2]);
N1_q_b[4]_PORT_A_address_reg = DFFE(N1_q_b[4]_PORT_A_address, N1_q_b[4]_clock_0, , , );
N1_q_b[4]_PORT_B_address = BUS(L2_COUNT[0], L2_COUNT[1], L2_COUNT[2]);
N1_q_b[4]_PORT_B_address_reg = DFFE(N1_q_b[4]_PORT_B_address, N1_q_b[4]_clock_0, , , );
N1_q_b[4]_PORT_A_write_enable = M1_UUWS;
N1_q_b[4]_PORT_A_write_enable_reg = DFFE(N1_q_b[4]_PORT_A_write_enable, N1_q_b[4]_clock_0, , , );
N1_q_b[4]_PORT_B_read_enable = VCC;
N1_q_b[4]_PORT_B_read_enable_reg = DFFE(N1_q_b[4]_PORT_B_read_enable, N1_q_b[4]_clock_0, , , );
N1_q_b[4]_clock_0 = SCLK;
N1_q_b[4]_PORT_B_data_out = MEMORY(N1_q_b[4]_PORT_A_data_in_reg, , N1_q_b[4]_PORT_A_address_reg, N1_q_b[4]_PORT_B_address_reg, N1_q_b[4]_PORT_A_write_enable_reg, N1_q_b[4]_PORT_B_read_enable_reg, , , N1_q_b[4]_clock_0, , , , , );
N1_q_b[4] = N1_q_b[4]_PORT_B_data_out[0];


--N4_q_b[3] is fifo:int_fifo|altsyncram:BUFFER[0][7]__4|altsyncram_4ig1:auto_generated|q_b[3]
--RAM Block Operation Mode: Simple Dual-Port
--Port A Depth: 8, Port A Width: 1, Port B Depth: 8, Port B Width: 1
--Port A Logical Depth: 8, Port A Logical Width: 8, Port B Logical Depth: 8, Port B Logical Width: 8
--Port A Input: Registered, Port B Input: Registered, Port B Output: Un-registered
N4_q_b[3]_PORT_A_data_in = F1L7;
N4_q_b[3]_PORT_A_data_in_reg = DFFE(N4_q_b[3]_PORT_A_data_in, N4_q_b[3]_clock_0, , , );
N4_q_b[3]_PORT_A_address = BUS(L1_COUNT[0], L1_COUNT[1], L1_COUNT[2]);
N4_q_b[3]_PORT_A_address_reg = DFFE(N4_q_b[3]_PORT_A_address, N4_q_b[3]_clock_0, , , );
N4_q_b[3]_PORT_B_address = BUS(L2_COUNT[0], L2_COUNT[1], L2_COUNT[2]);
N4_q_b[3]_PORT_B_address_reg = DFFE(N4_q_b[3]_PORT_B_address, N4_q_b[3]_clock_0, , , );
N4_q_b[3]_PORT_A_write_enable = M1_LLWS;
N4_q_b[3]_PORT_A_write_enable_reg = DFFE(N4_q_b[3]_PORT_A_write_enable, N4_q_b[3]_clock_0, , , );
N4_q_b[3]_PORT_B_read_enable = VCC;
N4_q_b[3]_PORT_B_read_enable_reg = DFFE(N4_q_b[3]_PORT_B_read_enable, N4_q_b[3]_clock_0, , , );
N4_q_b[3]_clock_0 = SCLK;
N4_q_b[3]_PORT_B_data_out = MEMORY(N4_q_b[3]_PORT_A_data_in_reg, , N4_q_b[3]_PORT_A_address_reg, N4_q_b[3]_PORT_B_address_reg, N4_q_b[3]_PORT_A_write_enable_reg, N4_q_b[3]_PORT_B_read_enable_reg, , , N4_q_b[3]_clock_0, , , , , );
N4_q_b[3] = N4_q_b[3]_PORT_B_data_out[0];


--N2_q_b[3] is fifo:int_fifo|altsyncram:BUFFER[0][23]__2|altsyncram_4ig1:auto_generated|q_b[3]
--RAM Block Operation Mode: Simple Dual-Port
--Port A Depth: 8, Port A Width: 1, Port B Depth: 8, Port B Width: 1
--Port A Logical Depth: 8, Port A Logical Width: 8, Port B Logical Depth: 8, Port B Logical Width: 8
--Port A Input: Registered, Port B Input: Registered, Port B Output: Un-registered
N2_q_b[3]_PORT_A_data_in = F1L31;
N2_q_b[3]_PORT_A_data_in_reg = DFFE(N2_q_b[3]_PORT_A_data_in, N2_q_b[3]_clock_0, , , );
N2_q_b[3]_PORT_A_address = BUS(L1_COUNT[0], L1_COUNT[1], L1_COUNT[2]);
N2_q_b[3]_PORT_A_address_reg = DFFE(N2_q_b[3]_PORT_A_address, N2_q_b[3]_clock_0, , , );
N2_q_b[3]_PORT_B_address = BUS(L2_COUNT[0], L2_COUNT[1], L2_COUNT[2]);
N2_q_b[3]_PORT_B_address_reg = DFFE(N2_q_b[3]_PORT_B_address, N2_q_b[3]_clock_0, , , );
N2_q_b[3]_PORT_A_write_enable = M1_UMWS;
N2_q_b[3]_PORT_A_write_enable_reg = DFFE(N2_q_b[3]_PORT_A_write_enable, N2_q_b[3]_clock_0, , , );
N2_q_b[3]_PORT_B_read_enable = VCC;
N2_q_b[3]_PORT_B_read_enable_reg = DFFE(N2_q_b[3]_PORT_B_read_enable, N2_q_b[3]_clock_0, , , );
N2_q_b[3]_clock_0 = SCLK;
N2_q_b[3]_PORT_B_data_out = MEMORY(N2_q_b[3]_PORT_A_data_in_reg, , N2_q_b[3]_PORT_A_address_reg, N2_q_b[3]_PORT_B_address_reg, N2_q_b[3]_PORT_A_write_enable_reg, N2_q_b[3]_PORT_B_read_enable_reg, , , N2_q_b[3]_clock_0, , , , , );
N2_q_b[3] = N2_q_b[3]_PORT_B_data_out[0];


--N3_q_b[3] is fifo:int_fifo|altsyncram:BUFFER[0][15]__3|altsyncram_4ig1:auto_generated|q_b[3]
--RAM Block Operation Mode: Simple Dual-Port
--Port A Depth: 8, Port A Width: 1, Port B Depth: 8, Port B Width: 1
--Port A Logical Depth: 8, Port A Logical Width: 8, Port B Logical Depth: 8, Port B Logical Width: 8
--Port A Input: Registered, Port B Input: Registered, Port B Output: Un-registered
N3_q_b[3]_PORT_A_data_in = F1L20;
N3_q_b[3]_PORT_A_data_in_reg = DFFE(N3_q_b[3]_PORT_A_data_in, N3_q_b[3]_clock_0, , , );
N3_q_b[3]_PORT_A_address = BUS(L1_COUNT[0], L1_COUNT[1], L1_COUNT[2]);
N3_q_b[3]_PORT_A_address_reg = DFFE(N3_q_b[3]_PORT_A_address, N3_q_b[3]_clock_0, , , );
N3_q_b[3]_PORT_B_address = BUS(L2_COUNT[0], L2_COUNT[1], L2_COUNT[2]);
N3_q_b[3]_PORT_B_address_reg = DFFE(N3_q_b[3]_PORT_B_address, N3_q_b[3]_clock_0, , , );
N3_q_b[3]_PORT_A_write_enable = M1_LMWS;
N3_q_b[3]_PORT_A_write_enable_reg = DFFE(N3_q_b[3]_PORT_A_write_enable, N3_q_b[3]_clock_0, , , );
N3_q_b[3]_PORT_B_read_enable = VCC;
N3_q_b[3]_PORT_B_read_enable_reg = DFFE(N3_q_b[3]_PORT_B_read_enable, N3_q_b[3]_clock_0, , , );
N3_q_b[3]_clock_0 = SCLK;
N3_q_b[3]_PORT_B_data_out = MEMORY(N3_q_b[3]_PORT_A_data_in_reg, , N3_q_b[3]_PORT_A_address_reg, N3_q_b[3]_PORT_B_address_reg, N3_q_b[3]_PORT_A_write_enable_reg, N3_q_b[3]_PORT_B_read_enable_reg, , , N3_q_b[3]_clock_0, , , , , );
N3_q_b[3] = N3_q_b[3]_PORT_B_data_out[0];


--N1_q_b[3] is fifo:int_fifo|altsyncram:BUFFER[0][31]__1|altsyncram_4ig1:auto_generated|q_b[3]
--RAM Block Operation Mode: Simple Dual-Port
--Port A Depth: 8, Port A Width: 1, Port B Depth: 8, Port B Width: 1
--Port A Logical Depth: 8, Port A Logical Width: 8, Port B Logical Depth: 8, Port B Logical Width: 8
--Port A Input: Registered, Port B Input: Registered, Port B Output: Un-registered
N1_q_b[3]_PORT_A_data_in = F1L39;
N1_q_b[3]_PORT_A_data_in_reg = DFFE(N1_q_b[3]_PORT_A_data_in, N1_q_b[3]_clock_0, , , );
N1_q_b[3]_PORT_A_address = BUS(L1_COUNT[0], L1_COUNT[1], L1_COUNT[2]);
N1_q_b[3]_PORT_A_address_reg = DFFE(N1_q_b[3]_PORT_A_address, N1_q_b[3]_clock_0, , , );
N1_q_b[3]_PORT_B_address = BUS(L2_COUNT[0], L2_COUNT[1], L2_COUNT[2]);
N1_q_b[3]_PORT_B_address_reg = DFFE(N1_q_b[3]_PORT_B_address, N1_q_b[3]_clock_0, , , );
N1_q_b[3]_PORT_A_write_enable = M1_UUWS;
N1_q_b[3]_PORT_A_write_enable_reg = DFFE(N1_q_b[3]_PORT_A_write_enable, N1_q_b[3]_clock_0, , , );
N1_q_b[3]_PORT_B_read_enable = VCC;
N1_q_b[3]_PORT_B_read_enable_reg = DFFE(N1_q_b[3]_PORT_B_read_enable, N1_q_b[3]_clock_0, , , );
N1_q_b[3]_clock_0 = SCLK;
N1_q_b[3]_PORT_B_data_out = MEMORY(N1_q_b[3]_PORT_A_data_in_reg, , N1_q_b[3]_PORT_A_address_reg, N1_q_b[3]_PORT_B_address_reg, N1_q_b[3]_PORT_A_write_enable_reg, N1_q_b[3]_PORT_B_read_enable_reg, , , N1_q_b[3]_clock_0, , , , , );
N1_q_b[3] = N1_q_b[3]_PORT_B_data_out[0];


--N4_q_b[2] is fifo:int_fifo|altsyncram:BUFFER[0][7]__4|altsyncram_4ig1:auto_generated|q_b[2]
--RAM Block Operation Mode: Simple Dual-Port
--Port A Depth: 8, Port A Width: 1, Port B Depth: 8, Port B Width: 1
--Port A Logical Depth: 8, Port A Logical Width: 8, Port B Logical Depth: 8, Port B Logical Width: 8
--Port A Input: Registered, Port B Input: Registered, Port B Output: Un-registered
N4_q_b[2]_PORT_A_data_in = F1L8;
N4_q_b[2]_PORT_A_data_in_reg = DFFE(N4_q_b[2]_PORT_A_data_in, N4_q_b[2]_clock_0, , , );
N4_q_b[2]_PORT_A_address = BUS(L1_COUNT[0], L1_COUNT[1], L1_COUNT[2]);
N4_q_b[2]_PORT_A_address_reg = DFFE(N4_q_b[2]_PORT_A_address, N4_q_b[2]_clock_0, , , );
N4_q_b[2]_PORT_B_address = BUS(L2_COUNT[0], L2_COUNT[1], L2_COUNT[2]);
N4_q_b[2]_PORT_B_address_reg = DFFE(N4_q_b[2]_PORT_B_address, N4_q_b[2]_clock_0, , , );
N4_q_b[2]_PORT_A_write_enable = M1_LLWS;
N4_q_b[2]_PORT_A_write_enable_reg = DFFE(N4_q_b[2]_PORT_A_write_enable, N4_q_b[2]_clock_0, , , );
N4_q_b[2]_PORT_B_read_enable = VCC;
N4_q_b[2]_PORT_B_read_enable_reg = DFFE(N4_q_b[2]_PORT_B_read_enable, N4_q_b[2]_clock_0, , , );
N4_q_b[2]_clock_0 = SCLK;
N4_q_b[2]_PORT_B_data_out = MEMORY(N4_q_b[2]_PORT_A_data_in_reg, , N4_q_b[2]_PORT_A_address_reg, N4_q_b[2]_PORT_B_address_reg, N4_q_b[2]_PORT_A_write_enable_reg, N4_q_b[2]_PORT_B_read_enable_reg, , , N4_q_b[2]_clock_0, , , , , );
N4_q_b[2] = N4_q_b[2]_PORT_B_data_out[0];


--N2_q_b[2] is fifo:int_fifo|altsyncram:BUFFER[0][23]__2|altsyncram_4ig1:auto_generated|q_b[2]
--RAM Block Operation Mode: Simple Dual-Port
--Port A Depth: 8, Port A Width: 1, Port B Depth: 8, Port B Width: 1
--Port A Logical Depth: 8, Port A Logical Width: 8, Port B Logical Depth: 8, Port B Logical Width: 8
--Port A Input: Registered, Port B Input: Registered, Port B Output: Un-registered
N2_q_b[2]_PORT_A_data_in = F1L32;
N2_q_b[2]_PORT_A_data_in_reg = DFFE(N2_q_b[2]_PORT_A_data_in, N2_q_b[2]_clock_0, , , );
N2_q_b[2]_PORT_A_address = BUS(L1_COUNT[0], L1_COUNT[1], L1_COUNT[2]);
N2_q_b[2]_PORT_A_address_reg = DFFE(N2_q_b[2]_PORT_A_address, N2_q_b[2]_clock_0, , , );
N2_q_b[2]_PORT_B_address = BUS(L2_COUNT[0], L2_COUNT[1], L2_COUNT[2]);
N2_q_b[2]_PORT_B_address_reg = DFFE(N2_q_b[2]_PORT_B_address, N2_q_b[2]_clock_0, , , );
N2_q_b[2]_PORT_A_write_enable = M1_UMWS;
N2_q_b[2]_PORT_A_write_enable_reg = DFFE(N2_q_b[2]_PORT_A_write_enable, N2_q_b[2]_clock_0, , , );
N2_q_b[2]_PORT_B_read_enable = VCC;
N2_q_b[2]_PORT_B_read_enable_reg = DFFE(N2_q_b[2]_PORT_B_read_enable, N2_q_b[2]_clock_0, , , );
N2_q_b[2]_clock_0 = SCLK;
N2_q_b[2]_PORT_B_data_out = MEMORY(N2_q_b[2]_PORT_A_data_in_reg, , N2_q_b[2]_PORT_A_address_reg, N2_q_b[2]_PORT_B_address_reg, N2_q_b[2]_PORT_A_write_enable_reg, N2_q_b[2]_PORT_B_read_enable_reg, , , N2_q_b[2]_clock_0, , , , , );
N2_q_b[2] = N2_q_b[2]_PORT_B_data_out[0];


--N3_q_b[2] is fifo:int_fifo|altsyncram:BUFFER[0][15]__3|altsyncram_4ig1:auto_generated|q_b[2]
--RAM Block Operation Mode: Simple Dual-Port
--Port A Depth: 8, Port A Width: 1, Port B Depth: 8, Port B Width: 1
--Port A Logical Depth: 8, Port A Logical Width: 8, Port B Logical Depth: 8, Port B Logical Width: 8
--Port A Input: Registered, Port B Input: Registered, Port B Output: Un-registered
N3_q_b[2]_PORT_A_data_in = F1L22;
N3_q_b[2]_PORT_A_data_in_reg = DFFE(N3_q_b[2]_PORT_A_data_in, N3_q_b[2]_clock_0, , , );
N3_q_b[2]_PORT_A_address = BUS(L1_COUNT[0], L1_COUNT[1], L1_COUNT[2]);
N3_q_b[2]_PORT_A_address_reg = DFFE(N3_q_b[2]_PORT_A_address, N3_q_b[2]_clock_0, , , );
N3_q_b[2]_PORT_B_address = BUS(L2_COUNT[0], L2_COUNT[1], L2_COUNT[2]);
N3_q_b[2]_PORT_B_address_reg = DFFE(N3_q_b[2]_PORT_B_address, N3_q_b[2]_clock_0, , , );
N3_q_b[2]_PORT_A_write_enable = M1_LMWS;
N3_q_b[2]_PORT_A_write_enable_reg = DFFE(N3_q_b[2]_PORT_A_write_enable, N3_q_b[2]_clock_0, , , );
N3_q_b[2]_PORT_B_read_enable = VCC;
N3_q_b[2]_PORT_B_read_enable_reg = DFFE(N3_q_b[2]_PORT_B_read_enable, N3_q_b[2]_clock_0, , , );
N3_q_b[2]_clock_0 = SCLK;
N3_q_b[2]_PORT_B_data_out = MEMORY(N3_q_b[2]_PORT_A_data_in_reg, , N3_q_b[2]_PORT_A_address_reg, N3_q_b[2]_PORT_B_address_reg, N3_q_b[2]_PORT_A_write_enable_reg, N3_q_b[2]_PORT_B_read_enable_reg, , , N3_q_b[2]_clock_0, , , , , );
N3_q_b[2] = N3_q_b[2]_PORT_B_data_out[0];


--N1_q_b[2] is fifo:int_fifo|altsyncram:BUFFER[0][31]__1|altsyncram_4ig1:auto_generated|q_b[2]
--RAM Block Operation Mode: Simple Dual-Port
--Port A Depth: 8, Port A Width: 1, Port B Depth: 8, Port B Width: 1
--Port A Logical Depth: 8, Port A Logical Width: 8, Port B Logical Depth: 8, Port B Logical Width: 8
--Port A Input: Registered, Port B Input: Registered, Port B Output: Un-registered
N1_q_b[2]_PORT_A_data_in = F1L40;
N1_q_b[2]_PORT_A_data_in_reg = DFFE(N1_q_b[2]_PORT_A_data_in, N1_q_b[2]_clock_0, , , );
N1_q_b[2]_PORT_A_address = BUS(L1_COUNT[0], L1_COUNT[1], L1_COUNT[2]);
N1_q_b[2]_PORT_A_address_reg = DFFE(N1_q_b[2]_PORT_A_address, N1_q_b[2]_clock_0, , , );
N1_q_b[2]_PORT_B_address = BUS(L2_COUNT[0], L2_COUNT[1], L2_COUNT[2]);
N1_q_b[2]_PORT_B_address_reg = DFFE(N1_q_b[2]_PORT_B_address, N1_q_b[2]_clock_0, , , );
N1_q_b[2]_PORT_A_write_enable = M1_UUWS;
N1_q_b[2]_PORT_A_write_enable_reg = DFFE(N1_q_b[2]_PORT_A_write_enable, N1_q_b[2]_clock_0, , , );
N1_q_b[2]_PORT_B_read_enable = VCC;
N1_q_b[2]_PORT_B_read_enable_reg = DFFE(N1_q_b[2]_PORT_B_read_enable, N1_q_b[2]_clock_0, , , );
N1_q_b[2]_clock_0 = SCLK;
N1_q_b[2]_PORT_B_data_out = MEMORY(N1_q_b[2]_PORT_A_data_in_reg, , N1_q_b[2]_PORT_A_address_reg, N1_q_b[2]_PORT_B_address_reg, N1_q_b[2]_PORT_A_write_enable_reg, N1_q_b[2]_PORT_B_read_enable_reg, , , N1_q_b[2]_clock_0, , , , , );
N1_q_b[2] = N1_q_b[2]_PORT_B_data_out[0];


--N4_q_b[1] is fifo:int_fifo|altsyncram:BUFFER[0][7]__4|altsyncram_4ig1:auto_generated|q_b[1]
--RAM Block Operation Mode: Simple Dual-Port
--Port A Depth: 8, Port A Width: 1, Port B Depth: 8, Port B Width: 1
--Port A Logical Depth: 8, Port A Logical Width: 8, Port B Logical Depth: 8, Port B Logical Width: 8
--Port A Input: Registered, Port B Input: Registered, Port B Output: Un-registered
N4_q_b[1]_PORT_A_data_in = F1L9;
N4_q_b[1]_PORT_A_data_in_reg = DFFE(N4_q_b[1]_PORT_A_data_in, N4_q_b[1]_clock_0, , , );
N4_q_b[1]_PORT_A_address = BUS(L1_COUNT[0], L1_COUNT[1], L1_COUNT[2]);
N4_q_b[1]_PORT_A_address_reg = DFFE(N4_q_b[1]_PORT_A_address, N4_q_b[1]_clock_0, , , );
N4_q_b[1]_PORT_B_address = BUS(L2_COUNT[0], L2_COUNT[1], L2_COUNT[2]);
N4_q_b[1]_PORT_B_address_reg = DFFE(N4_q_b[1]_PORT_B_address, N4_q_b[1]_clock_0, , , );
N4_q_b[1]_PORT_A_write_enable = M1_LLWS;
N4_q_b[1]_PORT_A_write_enable_reg = DFFE(N4_q_b[1]_PORT_A_write_enable, N4_q_b[1]_clock_0, , , );
N4_q_b[1]_PORT_B_read_enable = VCC;
N4_q_b[1]_PORT_B_read_enable_reg = DFFE(N4_q_b[1]_PORT_B_read_enable, N4_q_b[1]_clock_0, , , );
N4_q_b[1]_clock_0 = SCLK;
N4_q_b[1]_PORT_B_data_out = MEMORY(N4_q_b[1]_PORT_A_data_in_reg, , N4_q_b[1]_PORT_A_address_reg, N4_q_b[1]_PORT_B_address_reg, N4_q_b[1]_PORT_A_write_enable_reg, N4_q_b[1]_PORT_B_read_enable_reg, , , N4_q_b[1]_clock_0, , , , , );
N4_q_b[1] = N4_q_b[1]_PORT_B_data_out[0];


--N2_q_b[1] is fifo:int_fifo|altsyncram:BUFFER[0][23]__2|altsyncram_4ig1:auto_generated|q_b[1]
--RAM Block Operation Mode: Simple Dual-Port
--Port A Depth: 8, Port A Width: 1, Port B Depth: 8, Port B Width: 1
--Port A Logical Depth: 8, Port A Logical Width: 8, Port B Logical Depth: 8, Port B Logical Width: 8
--Port A Input: Registered, Port B Input: Registered, Port B Output: Un-registered
N2_q_b[1]_PORT_A_data_in = F1L33;
N2_q_b[1]_PORT_A_data_in_reg = DFFE(N2_q_b[1]_PORT_A_data_in, N2_q_b[1]_clock_0, , , );
N2_q_b[1]_PORT_A_address = BUS(L1_COUNT[0], L1_COUNT[1], L1_COUNT[2]);
N2_q_b[1]_PORT_A_address_reg = DFFE(N2_q_b[1]_PORT_A_address, N2_q_b[1]_clock_0, , , );
N2_q_b[1]_PORT_B_address = BUS(L2_COUNT[0], L2_COUNT[1], L2_COUNT[2]);
N2_q_b[1]_PORT_B_address_reg = DFFE(N2_q_b[1]_PORT_B_address, N2_q_b[1]_clock_0, , , );
N2_q_b[1]_PORT_A_write_enable = M1_UMWS;
N2_q_b[1]_PORT_A_write_enable_reg = DFFE(N2_q_b[1]_PORT_A_write_enable, N2_q_b[1]_clock_0, , , );
N2_q_b[1]_PORT_B_read_enable = VCC;
N2_q_b[1]_PORT_B_read_enable_reg = DFFE(N2_q_b[1]_PORT_B_read_enable, N2_q_b[1]_clock_0, , , );
N2_q_b[1]_clock_0 = SCLK;
N2_q_b[1]_PORT_B_data_out = MEMORY(N2_q_b[1]_PORT_A_data_in_reg, , N2_q_b[1]_PORT_A_address_reg, N2_q_b[1]_PORT_B_address_reg, N2_q_b[1]_PORT_A_write_enable_reg, N2_q_b[1]_PORT_B_read_enable_reg, , , N2_q_b[1]_clock_0, , , , , );
N2_q_b[1] = N2_q_b[1]_PORT_B_data_out[0];


--N3_q_b[1] is fifo:int_fifo|altsyncram:BUFFER[0][15]__3|altsyncram_4ig1:auto_generated|q_b[1]
--RAM Block Operation Mode: Simple Dual-Port
--Port A Depth: 8, Port A Width: 1, Port B Depth: 8, Port B Width: 1
--Port A Logical Depth: 8, Port A Logical Width: 8, Port B Logical Depth: 8, Port B Logical Width: 8
--Port A Input: Registered, Port B Input: Registered, Port B Output: Un-registered
N3_q_b[1]_PORT_A_data_in = F1L24;
N3_q_b[1]_PORT_A_data_in_reg = DFFE(N3_q_b[1]_PORT_A_data_in, N3_q_b[1]_clock_0, , , );
N3_q_b[1]_PORT_A_address = BUS(L1_COUNT[0], L1_COUNT[1], L1_COUNT[2]);
N3_q_b[1]_PORT_A_address_reg = DFFE(N3_q_b[1]_PORT_A_address, N3_q_b[1]_clock_0, , , );
N3_q_b[1]_PORT_B_address = BUS(L2_COUNT[0], L2_COUNT[1], L2_COUNT[2]);
N3_q_b[1]_PORT_B_address_reg = DFFE(N3_q_b[1]_PORT_B_address, N3_q_b[1]_clock_0, , , );
N3_q_b[1]_PORT_A_write_enable = M1_LMWS;
N3_q_b[1]_PORT_A_write_enable_reg = DFFE(N3_q_b[1]_PORT_A_write_enable, N3_q_b[1]_clock_0, , , );
N3_q_b[1]_PORT_B_read_enable = VCC;
N3_q_b[1]_PORT_B_read_enable_reg = DFFE(N3_q_b[1]_PORT_B_read_enable, N3_q_b[1]_clock_0, , , );
N3_q_b[1]_clock_0 = SCLK;
N3_q_b[1]_PORT_B_data_out = MEMORY(N3_q_b[1]_PORT_A_data_in_reg, , N3_q_b[1]_PORT_A_address_reg, N3_q_b[1]_PORT_B_address_reg, N3_q_b[1]_PORT_A_write_enable_reg, N3_q_b[1]_PORT_B_read_enable_reg, , , N3_q_b[1]_clock_0, , , , , );
N3_q_b[1] = N3_q_b[1]_PORT_B_data_out[0];


--N1_q_b[1] is fifo:int_fifo|altsyncram:BUFFER[0][31]__1|altsyncram_4ig1:auto_generated|q_b[1]
--RAM Block Operation Mode: Simple Dual-Port
--Port A Depth: 8, Port A Width: 1, Port B Depth: 8, Port B Width: 1
--Port A Logical Depth: 8, Port A Logical Width: 8, Port B Logical Depth: 8, Port B Logical Width: 8
--Port A Input: Registered, Port B Input: Registered, Port B Output: Un-registered
N1_q_b[1]_PORT_A_data_in = F1L41;
N1_q_b[1]_PORT_A_data_in_reg = DFFE(N1_q_b[1]_PORT_A_data_in, N1_q_b[1]_clock_0, , , );
N1_q_b[1]_PORT_A_address = BUS(L1_COUNT[0], L1_COUNT[1], L1_COUNT[2]);
N1_q_b[1]_PORT_A_address_reg = DFFE(N1_q_b[1]_PORT_A_address, N1_q_b[1]_clock_0, , , );
N1_q_b[1]_PORT_B_address = BUS(L2_COUNT[0], L2_COUNT[1], L2_COUNT[2]);
N1_q_b[1]_PORT_B_address_reg = DFFE(N1_q_b[1]_PORT_B_address, N1_q_b[1]_clock_0, , , );
N1_q_b[1]_PORT_A_write_enable = M1_UUWS;
N1_q_b[1]_PORT_A_write_enable_reg = DFFE(N1_q_b[1]_PORT_A_write_enable, N1_q_b[1]_clock_0, , , );
N1_q_b[1]_PORT_B_read_enable = VCC;
N1_q_b[1]_PORT_B_read_enable_reg = DFFE(N1_q_b[1]_PORT_B_read_enable, N1_q_b[1]_clock_0, , , );
N1_q_b[1]_clock_0 = SCLK;
N1_q_b[1]_PORT_B_data_out = MEMORY(N1_q_b[1]_PORT_A_data_in_reg, , N1_q_b[1]_PORT_A_address_reg, N1_q_b[1]_PORT_B_address_reg, N1_q_b[1]_PORT_A_write_enable_reg, N1_q_b[1]_PORT_B_read_enable_reg, , , N1_q_b[1]_clock_0, , , , , );
N1_q_b[1] = N1_q_b[1]_PORT_B_data_out[0];


--N4_q_b[0] is fifo:int_fifo|altsyncram:BUFFER[0][7]__4|altsyncram_4ig1:auto_generated|q_b[0]
--RAM Block Operation Mode: Simple Dual-Port
--Port A Depth: 8, Port A Width: 1, Port B Depth: 8, Port B Width: 1
--Port A Logical Depth: 8, Port A Logical Width: 8, Port B Logical Depth: 8, Port B Logical Width: 8
--Port A Input: Registered, Port B Input: Registered, Port B Output: Un-registered
N4_q_b[0]_PORT_A_data_in = F1L10;
N4_q_b[0]_PORT_A_data_in_reg = DFFE(N4_q_b[0]_PORT_A_data_in, N4_q_b[0]_clock_0, , , );
N4_q_b[0]_PORT_A_address = BUS(L1_COUNT[0], L1_COUNT[1], L1_COUNT[2]);
N4_q_b[0]_PORT_A_address_reg = DFFE(N4_q_b[0]_PORT_A_address, N4_q_b[0]_clock_0, , , );
N4_q_b[0]_PORT_B_address = BUS(L2_COUNT[0], L2_COUNT[1], L2_COUNT[2]);
N4_q_b[0]_PORT_B_address_reg = DFFE(N4_q_b[0]_PORT_B_address, N4_q_b[0]_clock_0, , , );
N4_q_b[0]_PORT_A_write_enable = M1_LLWS;
N4_q_b[0]_PORT_A_write_enable_reg = DFFE(N4_q_b[0]_PORT_A_write_enable, N4_q_b[0]_clock_0, , , );
N4_q_b[0]_PORT_B_read_enable = VCC;
N4_q_b[0]_PORT_B_read_enable_reg = DFFE(N4_q_b[0]_PORT_B_read_enable, N4_q_b[0]_clock_0, , , );
N4_q_b[0]_clock_0 = SCLK;
N4_q_b[0]_PORT_B_data_out = MEMORY(N4_q_b[0]_PORT_A_data_in_reg, , N4_q_b[0]_PORT_A_address_reg, N4_q_b[0]_PORT_B_address_reg, N4_q_b[0]_PORT_A_write_enable_reg, N4_q_b[0]_PORT_B_read_enable_reg, , , N4_q_b[0]_clock_0, , , , , );
N4_q_b[0] = N4_q_b[0]_PORT_B_data_out[0];


--N2_q_b[0] is fifo:int_fifo|altsyncram:BUFFER[0][23]__2|altsyncram_4ig1:auto_generated|q_b[0]
--RAM Block Operation Mode: Simple Dual-Port
--Port A Depth: 8, Port A Width: 1, Port B Depth: 8, Port B Width: 1
--Port A Logical Depth: 8, Port A Logical Width: 8, Port B Logical Depth: 8, Port B Logical Width: 8
--Port A Input: Registered, Port B Input: Registered, Port B Output: Un-registered
N2_q_b[0]_PORT_A_data_in = F1L34;
N2_q_b[0]_PORT_A_data_in_reg = DFFE(N2_q_b[0]_PORT_A_data_in, N2_q_b[0]_clock_0, , , );
N2_q_b[0]_PORT_A_address = BUS(L1_COUNT[0], L1_COUNT[1], L1_COUNT[2]);
N2_q_b[0]_PORT_A_address_reg = DFFE(N2_q_b[0]_PORT_A_address, N2_q_b[0]_clock_0, , , );
N2_q_b[0]_PORT_B_address = BUS(L2_COUNT[0], L2_COUNT[1], L2_COUNT[2]);
N2_q_b[0]_PORT_B_address_reg = DFFE(N2_q_b[0]_PORT_B_address, N2_q_b[0]_clock_0, , , );
N2_q_b[0]_PORT_A_write_enable = M1_UMWS;
N2_q_b[0]_PORT_A_write_enable_reg = DFFE(N2_q_b[0]_PORT_A_write_enable, N2_q_b[0]_clock_0, , , );
N2_q_b[0]_PORT_B_read_enable = VCC;
N2_q_b[0]_PORT_B_read_enable_reg = DFFE(N2_q_b[0]_PORT_B_read_enable, N2_q_b[0]_clock_0, , , );
N2_q_b[0]_clock_0 = SCLK;
N2_q_b[0]_PORT_B_data_out = MEMORY(N2_q_b[0]_PORT_A_data_in_reg, , N2_q_b[0]_PORT_A_address_reg, N2_q_b[0]_PORT_B_address_reg, N2_q_b[0]_PORT_A_write_enable_reg, N2_q_b[0]_PORT_B_read_enable_reg, , , N2_q_b[0]_clock_0, , , , , );
N2_q_b[0] = N2_q_b[0]_PORT_B_data_out[0];


--N3_q_b[0] is fifo:int_fifo|altsyncram:BUFFER[0][15]__3|altsyncram_4ig1:auto_generated|q_b[0]
--RAM Block Operation Mode: Simple Dual-Port
--Port A Depth: 8, Port A Width: 1, Port B Depth: 8, Port B Width: 1
--Port A Logical Depth: 8, Port A Logical Width: 8, Port B Logical Depth: 8, Port B Logical Width: 8
--Port A Input: Registered, Port B Input: Registered, Port B Output: Un-registered
N3_q_b[0]_PORT_A_data_in = F1L26;
N3_q_b[0]_PORT_A_data_in_reg = DFFE(N3_q_b[0]_PORT_A_data_in, N3_q_b[0]_clock_0, , , );
N3_q_b[0]_PORT_A_address = BUS(L1_COUNT[0], L1_COUNT[1], L1_COUNT[2]);
N3_q_b[0]_PORT_A_address_reg = DFFE(N3_q_b[0]_PORT_A_address, N3_q_b[0]_clock_0, , , );
N3_q_b[0]_PORT_B_address = BUS(L2_COUNT[0], L2_COUNT[1], L2_COUNT[2]);
N3_q_b[0]_PORT_B_address_reg = DFFE(N3_q_b[0]_PORT_B_address, N3_q_b[0]_clock_0, , , );
N3_q_b[0]_PORT_A_write_enable = M1_LMWS;
N3_q_b[0]_PORT_A_write_enable_reg = DFFE(N3_q_b[0]_PORT_A_write_enable, N3_q_b[0]_clock_0, , , );
N3_q_b[0]_PORT_B_read_enable = VCC;
N3_q_b[0]_PORT_B_read_enable_reg = DFFE(N3_q_b[0]_PORT_B_read_enable, N3_q_b[0]_clock_0, , , );
N3_q_b[0]_clock_0 = SCLK;
N3_q_b[0]_PORT_B_data_out = MEMORY(N3_q_b[0]_PORT_A_data_in_reg, , N3_q_b[0]_PORT_A_address_reg, N3_q_b[0]_PORT_B_address_reg, N3_q_b[0]_PORT_A_write_enable_reg, N3_q_b[0]_PORT_B_read_enable_reg, , , N3_q_b[0]_clock_0, , , , , );
N3_q_b[0] = N3_q_b[0]_PORT_B_data_out[0];


--N1_q_b[0] is fifo:int_fifo|altsyncram:BUFFER[0][31]__1|altsyncram_4ig1:auto_generated|q_b[0]
--RAM Block Operation Mode: Simple Dual-Port
--Port A Depth: 8, Port A Width: 1, Port B Depth: 8, Port B Width: 1
--Port A Logical Depth: 8, Port A Logical Width: 8, Port B Logical Depth: 8, Port B Logical Width: 8
--Port A Input: Registered, Port B Input: Registered, Port B Output: Un-registered
N1_q_b[0]_PORT_A_data_in = F1L42;
N1_q_b[0]_PORT_A_data_in_reg = DFFE(N1_q_b[0]_PORT_A_data_in, N1_q_b[0]_clock_0, , , );
N1_q_b[0]_PORT_A_address = BUS(L1_COUNT[0], L1_COUNT[1], L1_COUNT[2]);
N1_q_b[0]_PORT_A_address_reg = DFFE(N1_q_b[0]_PORT_A_address, N1_q_b[0]_clock_0, , , );
N1_q_b[0]_PORT_B_address = BUS(L2_COUNT[0], L2_COUNT[1], L2_COUNT[2]);
N1_q_b[0]_PORT_B_address_reg = DFFE(N1_q_b[0]_PORT_B_address, N1_q_b[0]_clock_0, , , );
N1_q_b[0]_PORT_A_write_enable = M1_UUWS;
N1_q_b[0]_PORT_A_write_enable_reg = DFFE(N1_q_b[0]_PORT_A_write_enable, N1_q_b[0]_clock_0, , , );
N1_q_b[0]_PORT_B_read_enable = VCC;
N1_q_b[0]_PORT_B_read_enable_reg = DFFE(N1_q_b[0]_PORT_B_read_enable, N1_q_b[0]_clock_0, , , );
N1_q_b[0]_clock_0 = SCLK;
N1_q_b[0]_PORT_B_data_out = MEMORY(N1_q_b[0]_PORT_A_data_in_reg, , N1_q_b[0]_PORT_A_address_reg, N1_q_b[0]_PORT_B_address_reg, N1_q_b[0]_PORT_A_write_enable_reg, N1_q_b[0]_PORT_B_read_enable_reg, , , N1_q_b[0]_clock_0, , , , , );
N1_q_b[0] = N1_q_b[0]_PORT_B_data_out[0];


--INT is INT
INT = OUTPUT(GB1L10);


--_SIZ1 is _SIZ1
_SIZ1 = OUTPUT(A1L151);


--DSACK_O[0] is DSACK_O[0]
DSACK_O[0] = OUTPUT(A1L84);


--DSACK_O[1] is DSACK_O[1]
DSACK_O[1] = OUTPUT(A1L84);


--BR is BR
BR = OUTPUT(C1_BREQ);


--_DMAEN is _DMAEN
_DMAEN = OUTPUT(C1L2);


--_DACK is _DACK
_DACK = OUTPUT(E1L7);


--_CSS is _CSS
_CSS = OUTPUT(E1L23);


--_IOR is _IOR
_IOR = OUTPUT(A1L140);


--_IOW is _IOW
_IOW = OUTPUT(A1L143);


--_LED_RD is _LED_RD
_LED_RD = OUTPUT(A1L146);


--_LED_WR is _LED_WR
_LED_WR = OUTPUT(A1L148);


--_LED_DMA is _LED_DMA
_LED_DMA = OUTPUT(C1L2);


--OWN is OWN
OWN = OUTPUT(C1_BGACK);


--DATA_OE_ is DATA_OE_
DATA_OE_ = OUTPUT(F1_DATA_OE_);


--PDATA_OE_ is PDATA_OE_
PDATA_OE_ = OUTPUT(A1L96);


--R_W_IO is R_W_IO
R_W_IO = BIDIR(R_W_IO);


--_AS_IO is _AS_IO
_AS_IO = BIDIR(_AS_IO);


--_DS_IO is _DS_IO
_DS_IO = BIDIR(_DS_IO);


--DATA_IO[0] is DATA_IO[0]
DATA_IO[0] = BIDIR(DATA_IO[0]);


--DATA_IO[1] is DATA_IO[1]
DATA_IO[1] = BIDIR(DATA_IO[1]);


--DATA_IO[2] is DATA_IO[2]
DATA_IO[2] = BIDIR(DATA_IO[2]);


--DATA_IO[3] is DATA_IO[3]
DATA_IO[3] = BIDIR(DATA_IO[3]);


--DATA_IO[4] is DATA_IO[4]
DATA_IO[4] = BIDIR(DATA_IO[4]);


--DATA_IO[5] is DATA_IO[5]
DATA_IO[5] = BIDIR(DATA_IO[5]);


--DATA_IO[6] is DATA_IO[6]
DATA_IO[6] = BIDIR(DATA_IO[6]);


--DATA_IO[7] is DATA_IO[7]
DATA_IO[7] = BIDIR(DATA_IO[7]);


--DATA_IO[8] is DATA_IO[8]
DATA_IO[8] = BIDIR(DATA_IO[8]);


--DATA_IO[9] is DATA_IO[9]
DATA_IO[9] = BIDIR(DATA_IO[9]);


--DATA_IO[10] is DATA_IO[10]
DATA_IO[10] = BIDIR(DATA_IO[10]);


--DATA_IO[11] is DATA_IO[11]
DATA_IO[11] = BIDIR(DATA_IO[11]);


--DATA_IO[12] is DATA_IO[12]
DATA_IO[12] = BIDIR(DATA_IO[12]);


--DATA_IO[13] is DATA_IO[13]
DATA_IO[13] = BIDIR(DATA_IO[13]);


--DATA_IO[14] is DATA_IO[14]
DATA_IO[14] = BIDIR(DATA_IO[14]);


--DATA_IO[15] is DATA_IO[15]
DATA_IO[15] = BIDIR(DATA_IO[15]);


--DATA_IO[16] is DATA_IO[16]
DATA_IO[16] = BIDIR(DATA_IO[16]);


--DATA_IO[17] is DATA_IO[17]
DATA_IO[17] = BIDIR(DATA_IO[17]);


--DATA_IO[18] is DATA_IO[18]
DATA_IO[18] = BIDIR(DATA_IO[18]);


--DATA_IO[19] is DATA_IO[19]
DATA_IO[19] = BIDIR(DATA_IO[19]);


--DATA_IO[20] is DATA_IO[20]
DATA_IO[20] = BIDIR(DATA_IO[20]);


--DATA_IO[21] is DATA_IO[21]
DATA_IO[21] = BIDIR(DATA_IO[21]);


--DATA_IO[22] is DATA_IO[22]
DATA_IO[22] = BIDIR(DATA_IO[22]);


--DATA_IO[23] is DATA_IO[23]
DATA_IO[23] = BIDIR(DATA_IO[23]);


--DATA_IO[24] is DATA_IO[24]
DATA_IO[24] = BIDIR(DATA_IO[24]);


--DATA_IO[25] is DATA_IO[25]
DATA_IO[25] = BIDIR(DATA_IO[25]);


--DATA_IO[26] is DATA_IO[26]
DATA_IO[26] = BIDIR(DATA_IO[26]);


--DATA_IO[27] is DATA_IO[27]
DATA_IO[27] = BIDIR(DATA_IO[27]);


--DATA_IO[28] is DATA_IO[28]
DATA_IO[28] = BIDIR(DATA_IO[28]);


--DATA_IO[29] is DATA_IO[29]
DATA_IO[29] = BIDIR(DATA_IO[29]);


--DATA_IO[30] is DATA_IO[30]
DATA_IO[30] = BIDIR(DATA_IO[30]);


--DATA_IO[31] is DATA_IO[31]
DATA_IO[31] = BIDIR(DATA_IO[31]);


--_BGACK_IO is _BGACK_IO
_BGACK_IO = BIDIR(_BGACK_IO);


--PD_PORT[0] is PD_PORT[0]
PD_PORT[0] = BIDIR(PD_PORT[0]);


--PD_PORT[1] is PD_PORT[1]
PD_PORT[1] = BIDIR(PD_PORT[1]);


--PD_PORT[2] is PD_PORT[2]
PD_PORT[2] = BIDIR(PD_PORT[2]);


--PD_PORT[3] is PD_PORT[3]
PD_PORT[3] = BIDIR(PD_PORT[3]);


--PD_PORT[4] is PD_PORT[4]
PD_PORT[4] = BIDIR(PD_PORT[4]);


--PD_PORT[5] is PD_PORT[5]
PD_PORT[5] = BIDIR(PD_PORT[5]);


--PD_PORT[6] is PD_PORT[6]
PD_PORT[6] = BIDIR(PD_PORT[6]);


--PD_PORT[7] is PD_PORT[7]
PD_PORT[7] = BIDIR(PD_PORT[7]);


--PD_PORT[8] is PD_PORT[8]
PD_PORT[8] = BIDIR(PD_PORT[8]);


--PD_PORT[9] is PD_PORT[9]
PD_PORT[9] = BIDIR(PD_PORT[9]);


--PD_PORT[10] is PD_PORT[10]
PD_PORT[10] = BIDIR(PD_PORT[10]);


--PD_PORT[11] is PD_PORT[11]
PD_PORT[11] = BIDIR(PD_PORT[11]);


--PD_PORT[12] is PD_PORT[12]
PD_PORT[12] = BIDIR(PD_PORT[12]);


--PD_PORT[13] is PD_PORT[13]
PD_PORT[13] = BIDIR(PD_PORT[13]);


--PD_PORT[14] is PD_PORT[14]
PD_PORT[14] = BIDIR(PD_PORT[14]);


--PD_PORT[15] is PD_PORT[15]
PD_PORT[15] = BIDIR(PD_PORT[15]);


--GB1_INT_O_ is registers:u_registers|registers_istr:u_registers_istr|INT_O_
GB1_INT_O_ = DFFEAS(GB1_INT, !X1__clk0,  ,  ,  ,  ,  ,  ,  );


--C1_BGACK is CPU_SM:u_CPU_SM|BGACK
C1_BGACK = DFFEAS(Q1L3, X1__clk1, E1_CRESET_,  ,  ,  ,  ,  ,  );


--C1_SIZE1 is CPU_SM:u_CPU_SM|SIZE1
C1_SIZE1 = DFFEAS(Q1L66, X1__clk1, E1_CRESET_,  ,  ,  ,  ,  ,  );


--A1L151 is _SIZ1~0
A1L151 = (!C1_SIZE1) # (!C1_BGACK);


--HB1_REG_DSK_ is registers:u_registers|registers_term:u_registers_term|REG_DSK_
HB1_REG_DSK_ = DFFEAS(HB1L4, X1__clk0, !A1L126,  ,  ,  ,  ,  ,  );


--E1_nLS2CPU is SCSI_SM:u_SCSI_SM|nLS2CPU
E1_nLS2CPU = DFFEAS(E1L26, X1__clk2, !A1L126,  ,  ,  ,  ,  ,  );


--A1L83 is DSACK_O~0
A1L83 = (!HB1_REG_DSK_ & !E1_nLS2CPU);


--C1_BREQ is CPU_SM:u_CPU_SM|BREQ
C1_BREQ = DFFEAS(Q1L68, X1__clk1, E1_CRESET_,  ,  ,  ,  ,  ,  );


--E1_DACK_o is SCSI_SM:u_SCSI_SM|DACK_o
E1_DACK_o = DFFEAS(Y1L7, X1__clk1,  ,  ,  ,  ,  ,  ,  );


--E1_SCSI_CS_o is SCSI_SM:u_SCSI_SM|SCSI_CS_o
E1_SCSI_CS_o = DFFEAS(Y1_WideOr30, X1__clk1,  ,  ,  ,  ,  ,  ,  );


--FB1_CNTR_O[4] is registers:u_registers|registers_cntr:u_registers_cntr|CNTR_O[4]
FB1_CNTR_O[4] = DFFEAS(FB1L7, !X1__clk0, X1__locked,  ,  ,  ,  ,  ,  );


--E1_RE_o is SCSI_SM:u_SCSI_SM|RE_o
E1_RE_o = DFFEAS(Y1L20, X1__clk1,  ,  ,  ,  ,  ,  ,  );


--A1L139 is _IOR~0
A1L139 = (FB1_CNTR_O[4]) # (E1_RE_o);


--E1_WE_o is SCSI_SM:u_SCSI_SM|WE_o
E1_WE_o = DFFEAS(Y1L18, X1__clk1,  ,  ,  ,  ,  ,  ,  );


--A1L142 is _IOW~0
A1L142 = (FB1_CNTR_O[4]) # (E1_WE_o);


--_CS is _CS
_CS = INPUT();


--FB1L9 is registers:u_registers|registers_cntr:u_registers_cntr|CNTR_O[8]~0
FB1L9 = (!_CS & !A1L126);


--FB1_CNTR_O[1] is registers:u_registers|registers_cntr:u_registers_cntr|CNTR_O[1]
FB1_CNTR_O[1] = DFFEAS(FB1L3, !X1__clk0, X1__locked,  ,  ,  ,  ,  ,  );


--A1L146 is _LED_RD~0
A1L146 = (C1_BGACK & (((!FB1_CNTR_O[1])))) # (!C1_BGACK & (((!FB1L9)) # (!A1L123)));


--A1L148 is _LED_WR~0
A1L148 = (C1_BGACK & (FB1_CNTR_O[1])) # (!C1_BGACK & (((A1L123) # (!FB1L9))));


--F1L2 is datapath:u_datapath|DOEL_~0
F1L2 = (C1_BGACK & FB1_CNTR_O[1]);


--F1_DATA_OE_ is datapath:u_datapath|DATA_OE_
F1_DATA_OE_ = (F1L2) # ((A1L123 & (!_CS & !A1L137)));


--A1L95 is PDATA_OE_~0
A1L95 = (E1_DACK_o) # (E1_SCSI_CS_o);


--INTA is INTA
INTA = INPUT();


--FB1_CNTR_O[2] is registers:u_registers|registers_cntr:u_registers_cntr|CNTR_O[2]
FB1_CNTR_O[2] = DFFEAS(FB1L5, !X1__clk0, X1__locked,  ,  ,  ,  ,  ,  );


--GB1_INT is registers:u_registers|registers_istr:u_registers_istr|INT
GB1_INT = (!FB1_CNTR_O[2]) # (!INTA);


--C1_STATE[0] is CPU_SM:u_CPU_SM|STATE[0]
C1_STATE[0] = DFFEAS(R1L6, X1__clk1, E1_CRESET_,  ,  ,  ,  ,  ,  );


--C1_STATE[1] is CPU_SM:u_CPU_SM|STATE[1]
C1_STATE[1] = DFFEAS(S1L8, X1__clk1, E1_CRESET_,  ,  ,  ,  ,  ,  );


--C1_STATE[3] is CPU_SM:u_CPU_SM|STATE[3]
C1_STATE[3] = DFFEAS(U1L10, X1__clk1, E1_CRESET_,  ,  ,  ,  ,  ,  );


--C1_STATE[2] is CPU_SM:u_CPU_SM|STATE[2]
C1_STATE[2] = DFFEAS(T1L10, X1__clk1, E1_CRESET_,  ,  ,  ,  ,  ,  );


--C1_BGRANT_ is CPU_SM:u_CPU_SM|BGRANT_
C1_BGRANT_ = DFFEAS(C1L4, X1__clk2, E1_CRESET_,  ,  ,  ,  ,  ,  );


--C1_nCYCLEDONE is CPU_SM:u_CPU_SM|nCYCLEDONE
C1_nCYCLEDONE = DFFEAS(C1L37, X1__clk2, E1_CRESET_,  ,  ,  ,  ,  ,  );


--C1_STATE[4] is CPU_SM:u_CPU_SM|STATE[4]
C1_STATE[4] = DFFEAS(V1L10, X1__clk1, E1_CRESET_,  ,  ,  ,  ,  ,  );


--Q1L1 is CPU_SM:u_CPU_SM|CPU_SM_outputs:u_CPU_SM_outputs|BGACK_d~0
Q1L1 = (C1_STATE[4]) # ((!C1_STATE[2] & (C1_BGRANT_ & C1_nCYCLEDONE)));


--Q1L2 is CPU_SM:u_CPU_SM|CPU_SM_outputs:u_CPU_SM_outputs|BGACK_d~1
Q1L2 = (C1_STATE[1] & ((C1_STATE[3] & ((!Q1L1) # (!C1_STATE[2]))) # (!C1_STATE[3] & ((C1_STATE[2]) # (Q1L1))))) # (!C1_STATE[1] & ((C1_STATE[2]) # ((C1_STATE[3] & Q1L1))));


--Q1L3 is CPU_SM:u_CPU_SM|CPU_SM_outputs:u_CPU_SM_outputs|BGACK_d~2
Q1L3 = (C1_STATE[0]) # (Q1L2);


--E1_CRESET_ is SCSI_SM:u_SCSI_SM|CRESET_
E1_CRESET_ = DFFEAS(X1__locked, !X1__clk0,  ,  ,  ,  ,  ,  ,  );


--Q1L59 is CPU_SM:u_CPU_SM|CPU_SM_outputs:u_CPU_SM_outputs|SIZE1_Y~0
Q1L59 = (C1_STATE[0] & (C1_STATE[1] & (C1_STATE[2] $ (C1_STATE[4]))));


--_STERM is _STERM
_STERM = INPUT();


--Q1L12 is CPU_SM:u_CPU_SM|CPU_SM_outputs:u_CPU_SM_outputs|Equal2~0
Q1L12 = (C1_STATE[0] & !C1_STATE[3]);


--Q1L13 is CPU_SM:u_CPU_SM|CPU_SM_outputs:u_CPU_SM_outputs|Equal2~1
Q1L13 = (C1_STATE[1] & (C1_STATE[4] & (Q1L12 & !C1_STATE[2])));


--Q1L60 is CPU_SM:u_CPU_SM|CPU_SM_outputs:u_CPU_SM_outputs|SIZE1_d~0
Q1L60 = (_STERM & (((!Q1L13)))) # (!_STERM & ((C1_STATE[3]) # ((!Q1L59))));


--C1_DSACK_LATCHED_[0] is CPU_SM:u_CPU_SM|DSACK_LATCHED_[0]
C1_DSACK_LATCHED_[0] = DFFEAS(A1L85, !X1__clk0, !A1L126,  ,  ,  ,  ,  ,  );


--C1_DSACK_LATCHED_[1] is CPU_SM:u_CPU_SM|DSACK_LATCHED_[1]
C1_DSACK_LATCHED_[1] = DFFEAS(A1L86, !X1__clk0, !A1L126,  ,  ,  ,  ,  ,  );


--DSACK_I_[1] is DSACK_I_[1]
DSACK_I_[1] = INPUT();


--_BERR is _BERR
_BERR = INPUT();


--V1L1 is CPU_SM:u_CPU_SM|cpudff5:u_cpudff5|cpudff5_d~0
V1L1 = (C1_DSACK_LATCHED_[0] & (((!_BERR) # (!DSACK_I_[1])))) # (!C1_DSACK_LATCHED_[0] & (C1_DSACK_LATCHED_[1] & ((!_BERR) # (!DSACK_I_[1]))));


--DSACK_I_[0] is DSACK_I_[0]
DSACK_I_[0] = INPUT();


--A1L85 is DSK0_IN_~0
A1L85 = (!DSACK_I_[0]) # (!_BERR);


--P1L17 is CPU_SM:u_CPU_SM|CPU_SM_inputs:u_CPU_SM_inputs|E[51]~5
P1L17 = (C1_STATE[1] & (C1_STATE[3] & (C1_STATE[2] & !C1_STATE[4])));


--Q1L61 is CPU_SM:u_CPU_SM|CPU_SM_outputs:u_CPU_SM_outputs|SIZE1_d~1
Q1L61 = ((_STERM & ((A1L85) # (!V1L1)))) # (!P1L17);


--C1_nDSACK is CPU_SM:u_CPU_SM|nDSACK
C1_nDSACK = (!C1_DSACK_LATCHED_[0] & !C1_DSACK_LATCHED_[1]);


--Q1L14 is CPU_SM:u_CPU_SM|CPU_SM_outputs:u_CPU_SM_outputs|Equal2~2
Q1L14 = (C1_STATE[0] & (!C1_STATE[3] & (!C1_STATE[2] & !C1_STATE[4])));


--Q1L62 is CPU_SM:u_CPU_SM|CPU_SM_outputs:u_CPU_SM_outputs|SIZE1_d~2
Q1L62 = (((_STERM & !C1_nDSACK)) # (!Q1L14)) # (!C1_STATE[1]);


--Q1L15 is CPU_SM:u_CPU_SM|CPU_SM_outputs:u_CPU_SM_outputs|Equal2~3
Q1L15 = (C1_STATE[1] & (C1_STATE[2] & (Q1L12 & !C1_STATE[4])));


--Q1L63 is CPU_SM:u_CPU_SM|CPU_SM_outputs:u_CPU_SM_outputs|SIZE1_d~3
Q1L63 = (((!Q1L15 & !P1L17)) # (!_STERM)) # (!C1_nDSACK);


--Q1L16 is CPU_SM:u_CPU_SM|CPU_SM_outputs:u_CPU_SM_outputs|Equal2~4
Q1L16 = (C1_STATE[4] & !C1_STATE[1]);


--Q1L17 is CPU_SM:u_CPU_SM|CPU_SM_outputs:u_CPU_SM_outputs|Equal2~5
Q1L17 = (C1_STATE[0] & (Q1L16 & (!C1_STATE[3] & !C1_STATE[2])));


--P1L13 is CPU_SM:u_CPU_SM|CPU_SM_inputs:u_CPU_SM_inputs|E[46]~6
P1L13 = (C1_STATE[0] & (C1_STATE[2] & (C1_STATE[4] & !C1_STATE[1])));


--Q1L64 is CPU_SM:u_CPU_SM|CPU_SM_outputs:u_CPU_SM_outputs|SIZE1_d~4
Q1L64 = (Q1L63 & (!Q1L17 & !P1L13));


--Q1L65 is CPU_SM:u_CPU_SM|CPU_SM_outputs:u_CPU_SM_outputs|SIZE1_d~5
Q1L65 = (Q1L60 & (Q1L61 & (Q1L62 & Q1L64)));


--P1L25 is CPU_SM:u_CPU_SM|CPU_SM_inputs:u_CPU_SM_inputs|E[62]~7
P1L25 = (C1_STATE[0] & (C1_STATE[3] & (!C1_STATE[1] & !C1_STATE[4])));


--Q1L18 is CPU_SM:u_CPU_SM|CPU_SM_outputs:u_CPU_SM_outputs|Equal2~6
Q1L18 = (C1_STATE[1] & Q1L14);


--Q1L55 is CPU_SM:u_CPU_SM|CPU_SM_outputs:u_CPU_SM_outputs|SIZE1_X~0
Q1L55 = (!Q1L18 & (!Q1L15 & ((!P1L17) # (!A1L85))));


--P1L23 is CPU_SM:u_CPU_SM|CPU_SM_inputs:u_CPU_SM_inputs|E[61]~8
P1L23 = (C1_STATE[1] & (C1_STATE[3] & (!C1_STATE[0] & !C1_STATE[4])));


--P1L15 is CPU_SM:u_CPU_SM|CPU_SM_inputs:u_CPU_SM_inputs|E[50]~9
P1L15 = (C1_STATE[0] & (C1_STATE[2] & (!C1_STATE[1] & !C1_STATE[4])));


--P1L19 is CPU_SM:u_CPU_SM|CPU_SM_inputs:u_CPU_SM_inputs|E[56]~10
P1L19 = (C1_STATE[1] & (C1_STATE[3] & (C1_STATE[4] & !C1_STATE[0])));


--Q1L71 is CPU_SM:u_CPU_SM|CPU_SM_outputs:u_CPU_SM_outputs|nBRIDGEIN_d~0
Q1L71 = (!P1L23 & (!P1L15 & !P1L19));


--Q1L56 is CPU_SM:u_CPU_SM|CPU_SM_outputs:u_CPU_SM_outputs|SIZE1_X~1
Q1L56 = (P1L25) # (((V1L1 & !Q1L55)) # (!Q1L71));


--P1L16 is CPU_SM:u_CPU_SM|CPU_SM_inputs:u_CPU_SM_inputs|E[50]~11
P1L16 = (!C1_STATE[1] & !C1_STATE[4]);


--Q1L19 is CPU_SM:u_CPU_SM|CPU_SM_outputs:u_CPU_SM_outputs|Equal2~7
Q1L19 = (C1_STATE[2] & (P1L16 & (!C1_STATE[0] & !C1_STATE[3])));


--J1_BO1 is fifo:int_fifo|fifo_byte_ptr:u_byte_ptr|BO1
J1_BO1 = DFFEAS(J1L5, X1__clk2, X1__locked,  ,  ,  ,  ,  ,  );


--J1_BO0 is fifo:int_fifo|fifo_byte_ptr:u_byte_ptr|BO0
J1_BO0 = DFFEAS(J1L2, X1__clk2, X1__locked,  ,  ,  ,  ,  ,  );


--DB1L1 is datapath:u_datapath|datapath_scsi:u_datapath_scsi|datapath_24dec:u_datapath_24dec|Z2~0
DB1L1 = (J1_BO1 & J1_BO0);


--K1_FIFOEMPTY is fifo:int_fifo|fifo__full_empty_ctr:u_full_empty_ctr|FIFOEMPTY
K1_FIFOEMPTY = DFFEAS(K1L24, !SCLK, X1__locked,  ,  ,  ,  ,  ,  );


--G1_FLUSHFIFO is registers:u_registers|FLUSHFIFO
G1_FLUSHFIFO = DFFEAS(G1L4, !X1__clk0, X1__locked,  ,  ,  ,  ,  ,  );


--C1L23 is CPU_SM:u_CPU_SM|LASTWORD~0
C1L23 = (G1_FLUSHFIFO & ((J1_BO1) # (J1_BO0)));


--P1L26 is CPU_SM:u_CPU_SM|CPU_SM_inputs:u_CPU_SM_inputs|nE~0
P1L26 = (C1_STATE[3] & (C1_STATE[2] & (C1_STATE[4] & !C1_STATE[1])));


--P1_E[26] is CPU_SM:u_CPU_SM|CPU_SM_inputs:u_CPU_SM_inputs|E[26]
P1_E[26] = (DB1L1) # ((K1_FIFOEMPTY) # ((!P1L26) # (!C1L23)));


--P1L21 is CPU_SM:u_CPU_SM|CPU_SM_inputs:u_CPU_SM_inputs|E[58]~12
P1L21 = (C1_STATE[2] & (C1_STATE[4] & (!C1_STATE[0] & !C1_STATE[3])));


--Q1L57 is CPU_SM:u_CPU_SM|CPU_SM_outputs:u_CPU_SM_outputs|SIZE1_X~2
Q1L57 = (P1_E[26] & !P1L21);


--Q1L66 is CPU_SM:u_CPU_SM|CPU_SM_outputs:u_CPU_SM_outputs|SIZE1_d~6
Q1L66 = ((!Q1L56 & (!Q1L19 & Q1L57))) # (!Q1L65);


--HB1_TERM_COUNTER[2] is registers:u_registers|registers_term:u_registers_term|TERM_COUNTER[2]
HB1_TERM_COUNTER[2] = DFFEAS(HB1L9, !X1__clk0,  ,  ,  ,  ,  ,  ,  );


--HB1_TERM_COUNTER[0] is registers:u_registers|registers_term:u_registers_term|TERM_COUNTER[0]
HB1_TERM_COUNTER[0] = DFFEAS(HB1L10, !X1__clk0,  ,  ,  ,  ,  ,  ,  );


--HB1_TERM_COUNTER[1] is registers:u_registers|registers_term:u_registers_term|TERM_COUNTER[1]
HB1_TERM_COUNTER[1] = DFFEAS(HB1L11, !X1__clk0,  ,  ,  ,  ,  ,  ,  );


--HB1L4 is registers:u_registers|registers_term:u_registers_term|REG_DSK_~0
HB1L4 = (HB1_REG_DSK_) # ((!HB1_TERM_COUNTER[2] & (HB1_TERM_COUNTER[0] & HB1_TERM_COUNTER[1])));


--Y1_state_reg.s6 is SCSI_SM:u_SCSI_SM|SCSI_SM_INTERNALS:u_SCSI_SM_INTERNALS|state_reg.s6
Y1_state_reg.s6 = DFFEAS(Y1_state_reg.s26, X1__clk1, E1_CRESET_,  ,  ,  ,  ,  ,  );


--Y1_state_reg.s19 is SCSI_SM:u_SCSI_SM|SCSI_SM_INTERNALS:u_SCSI_SM_INTERNALS|state_reg.s19
Y1_state_reg.s19 = DFFEAS(Y1_state_reg.s3, X1__clk1, E1_CRESET_,  ,  ,  ,  ,  ,  );


--E1L26 is SCSI_SM:u_SCSI_SM|nLS2CPU~0
E1L26 = (E1_nLS2CPU) # ((Y1_state_reg.s6) # (Y1_state_reg.s19));


--Q1L20 is CPU_SM:u_CPU_SM|CPU_SM_outputs:u_CPU_SM_outputs|Equal2~8
Q1L20 = (!C1_STATE[0] & (!C1_STATE[3] & (!C1_STATE[2] & !C1_STATE[4])));


--Q1L21 is CPU_SM:u_CPU_SM|CPU_SM_outputs:u_CPU_SM_outputs|Equal2~9
Q1L21 = (C1_STATE[1] & Q1L20);


--Q1L22 is CPU_SM:u_CPU_SM|CPU_SM_outputs:u_CPU_SM_outputs|Equal2~10
Q1L22 = (C1_STATE[3] & (!C1_STATE[0] & !C1_STATE[2]));


--K1_FIFOFULL is fifo:int_fifo|fifo__full_empty_ctr:u_full_empty_ctr|FIFOFULL
K1_FIFOFULL = DFFEAS(K1L18, !SCLK, X1__locked,  ,  ,  ,  ,  ,  );


--C1_FLUSHFIFO is CPU_SM:u_CPU_SM|FLUSHFIFO
C1_FLUSHFIFO = DFFEAS(G1_FLUSHFIFO, X1__clk2, E1_CRESET_,  ,  ,  ,  ,  ,  );


--Q1L67 is CPU_SM:u_CPU_SM|CPU_SM_outputs:u_CPU_SM_outputs|nBREQ_d~4
Q1L67 = (K1_FIFOFULL) # ((C1_FLUSHFIFO & ((C1L23) # (K1_FIFOEMPTY))));


--C1_DMAENA is CPU_SM:u_CPU_SM|DMAENA
C1_DMAENA = DFFEAS(FB1_CNTR_O[8], X1__clk2, E1_CRESET_,  ,  ,  ,  ,  ,  );


--P1L2 is CPU_SM:u_CPU_SM|CPU_SM_inputs:u_CPU_SM_inputs|E[0]~13
P1L2 = (FB1_CNTR_O[1] & (Q1L20 & (C1_DMAENA & !C1_STATE[1])));


--Q1L68 is CPU_SM:u_CPU_SM|CPU_SM_outputs:u_CPU_SM_outputs|nBREQ_d~5
Q1L68 = (Q1L21) # ((Q1L69) # ((Q1L67 & P1L2)));


--Y1_state_reg.s16 is SCSI_SM:u_SCSI_SM|SCSI_SM_INTERNALS:u_SCSI_SM_INTERNALS|state_reg.s16
Y1_state_reg.s16 = DFFEAS(Y1L14, X1__clk1, E1_CRESET_,  ,  ,  ,  ,  ,  );


--E1_CCPUREQ is SCSI_SM:u_SCSI_SM|CCPUREQ
E1_CCPUREQ = DFFEAS(EB1_WDREGREQ, X1__clk1, E1_CRESET_,  ,  ,  ,  ,  ,  );


--E1_RDFIFO_o is SCSI_SM:u_SCSI_SM|RDFIFO_o
E1_RDFIFO_o = DFFEAS(E1L14, X1__clk2, X1__locked,  ,  ,  ,  ,  ,  );


--E1_CDREQ_ is SCSI_SM:u_SCSI_SM|CDREQ_
E1_CDREQ_ = DFFEAS(DREQ_, X1__clk1, E1_CRESET_,  ,  ,  ,  ,  ,  );


--Y1L30 is SCSI_SM:u_SCSI_SM|SCSI_SM_INTERNALS:u_SCSI_SM_INTERNALS|always1~0
Y1L30 = (FB1_CNTR_O[1]) # ((E1_CCPUREQ) # ((E1_RDFIFO_o) # (!E1_CDREQ_)));


--Y1L4 is SCSI_SM:u_SCSI_SM|SCSI_SM_INTERNALS:u_SCSI_SM_INTERNALS|Selector0~0
Y1L4 = (K1_FIFOEMPTY & (Y1_state_reg.s16 & !Y1L30));


--E1_RIFIFO_o is SCSI_SM:u_SCSI_SM|RIFIFO_o
E1_RIFIFO_o = DFFEAS(E1L19, X1__clk2, X1__locked,  ,  ,  ,  ,  ,  );


--Y1L31 is SCSI_SM:u_SCSI_SM|SCSI_SM_INTERNALS:u_SCSI_SM_INTERNALS|always1~1
Y1L31 = (FB1_CNTR_O[1] & (E1_CDREQ_ & (!E1_CCPUREQ & !E1_RIFIFO_o)));


--Y1_state_reg.s0 is SCSI_SM:u_SCSI_SM|SCSI_SM_INTERNALS:u_SCSI_SM_INTERNALS|state_reg.s0
Y1_state_reg.s0 = DFFEAS(Y1L11, X1__clk1, E1_CRESET_,  ,  ,  ,  ,  ,  );


--Y1L5 is SCSI_SM:u_SCSI_SM|SCSI_SM_INTERNALS:u_SCSI_SM_INTERNALS|Selector0~1
Y1L5 = (Y1L31 & (!K1_FIFOFULL & !Y1_state_reg.s0));


--Y1_state_reg.s24 is SCSI_SM:u_SCSI_SM|SCSI_SM_INTERNALS:u_SCSI_SM_INTERNALS|state_reg.s24
Y1_state_reg.s24 = DFFEAS(Y1L5, X1__clk1, E1_CRESET_,  ,  ,  ,  ,  ,  );


--Y1_state_reg.s4 is SCSI_SM:u_SCSI_SM|SCSI_SM_INTERNALS:u_SCSI_SM_INTERNALS|state_reg.s4
Y1_state_reg.s4 = DFFEAS(Y1_state_reg.s24, X1__clk1, E1_CRESET_,  ,  ,  ,  ,  ,  );


--Y1_state_reg.s20 is SCSI_SM:u_SCSI_SM|SCSI_SM_INTERNALS:u_SCSI_SM_INTERNALS|state_reg.s20
Y1_state_reg.s20 = DFFEAS(Y1_state_reg.s4, X1__clk1, E1_CRESET_,  ,  ,  ,  ,  ,  );


--Y1L6 is SCSI_SM:u_SCSI_SM|SCSI_SM_INTERNALS:u_SCSI_SM_INTERNALS|Selector0~2
Y1L6 = (!Y1_state_reg.s4 & (!Y1_state_reg.s20 & ((K1_FIFOFULL) # (!Y1_state_reg.s24))));


--Y1_state_reg.s2 is SCSI_SM:u_SCSI_SM|SCSI_SM_INTERNALS:u_SCSI_SM_INTERNALS|state_reg.s2
Y1_state_reg.s2 = DFFEAS(Y1_state_reg.s28, X1__clk1, E1_CRESET_,  ,  ,  ,  ,  ,  );


--Y1_state_reg.s18 is SCSI_SM:u_SCSI_SM|SCSI_SM_INTERNALS:u_SCSI_SM_INTERNALS|state_reg.s18
Y1_state_reg.s18 = DFFEAS(Y1_state_reg.s2, X1__clk1, E1_CRESET_,  ,  ,  ,  ,  ,  );


--Y1_state_reg.s28 is SCSI_SM:u_SCSI_SM|SCSI_SM_INTERNALS:u_SCSI_SM_INTERNALS|state_reg.s28
Y1_state_reg.s28 = DFFEAS(Y1L4, X1__clk1, E1_CRESET_,  ,  ,  ,  ,  ,  );


--Y1L27 is SCSI_SM:u_SCSI_SM|SCSI_SM_INTERNALS:u_SCSI_SM_INTERNALS|WideOr22~0
Y1L27 = (!Y1_state_reg.s2 & (!Y1_state_reg.s18 & !Y1_state_reg.s28));


--Y1L7 is SCSI_SM:u_SCSI_SM|SCSI_SM_INTERNALS:u_SCSI_SM_INTERNALS|Selector0~3
Y1L7 = (Y1L4) # ((Y1L5) # ((!Y1L27) # (!Y1L6)));


--Y1_state_reg.s3 is SCSI_SM:u_SCSI_SM|SCSI_SM_INTERNALS:u_SCSI_SM_INTERNALS|state_reg.s3
Y1_state_reg.s3 = DFFEAS(Y1_state_reg.s30, X1__clk1, E1_CRESET_,  ,  ,  ,  ,  ,  );


--Y1_state_reg.s10 is SCSI_SM:u_SCSI_SM|SCSI_SM_INTERNALS:u_SCSI_SM_INTERNALS|state_reg.s10
Y1_state_reg.s10 = DFFEAS(Y1L21, X1__clk1, E1_CRESET_,  ,  ,  ,  ,  ,  );


--Y1_state_reg.s30 is SCSI_SM:u_SCSI_SM|SCSI_SM_INTERNALS:u_SCSI_SM_INTERNALS|state_reg.s30
Y1_state_reg.s30 = DFFEAS(Y1_state_reg.s10, X1__clk1, E1_CRESET_,  ,  ,  ,  ,  ,  );


--Y1L29 is SCSI_SM:u_SCSI_SM|SCSI_SM_INTERNALS:u_SCSI_SM_INTERNALS|WideOr30~0
Y1L29 = (Y1_state_reg.s6) # ((Y1_state_reg.s3) # ((Y1_state_reg.s10) # (Y1_state_reg.s30)));


--Y1_state_reg.s8 is SCSI_SM:u_SCSI_SM|SCSI_SM_INTERNALS:u_SCSI_SM_INTERNALS|state_reg.s8
Y1_state_reg.s8 = DFFEAS(Y1L12, X1__clk1, E1_CRESET_,  ,  ,  ,  ,  ,  );


--Y1_state_reg.s17 is SCSI_SM:u_SCSI_SM|SCSI_SM_INTERNALS:u_SCSI_SM_INTERNALS|state_reg.s17
Y1_state_reg.s17 = DFFEAS(Y1L15, X1__clk1, E1_CRESET_,  ,  ,  ,  ,  ,  );


--Y1_state_reg.s26 is SCSI_SM:u_SCSI_SM|SCSI_SM_INTERNALS:u_SCSI_SM_INTERNALS|state_reg.s26
Y1_state_reg.s26 = DFFEAS(Y1_state_reg.s17, X1__clk1, E1_CRESET_,  ,  ,  ,  ,  ,  );


--Y1_WideOr30 is SCSI_SM:u_SCSI_SM|SCSI_SM_INTERNALS:u_SCSI_SM_INTERNALS|WideOr30
Y1_WideOr30 = (Y1L29) # ((Y1_state_reg.s8) # ((Y1_state_reg.s17) # (Y1_state_reg.s26)));


--ADDR[3] is ADDR[3]
ADDR[3] = INPUT();


--ADDR[5] is ADDR[5]
ADDR[5] = INPUT();


--ADDR[6] is ADDR[6]
ADDR[6] = INPUT();


--EB1L8 is registers:u_registers|addr_decoder:u_addr_decoder|h_0C~0
EB1L8 = (FB1L9 & (ADDR[3] & (!ADDR[5] & !ADDR[6])));


--ADDR[2] is ADDR[2]
ADDR[2] = INPUT();


--ADDR[4] is ADDR[4]
ADDR[4] = INPUT();


--EB1L2 is registers:u_registers|addr_decoder:u_addr_decoder|CONTR_WR~0
EB1L2 = (EB1L8 & (!A1L123 & (!ADDR[2] & !ADDR[4])));


--FB1L7 is registers:u_registers|registers_cntr:u_registers_cntr|CNTR_O[4]~1
FB1L7 = (EB1L2 & (A1L20)) # (!EB1L2 & ((FB1_CNTR_O[4])));


--Y1L19 is SCSI_SM:u_SCSI_SM|SCSI_SM_INTERNALS:u_SCSI_SM_INTERNALS|Selector25~0
Y1L19 = (!Y1_state_reg.s19 & (!Y1_state_reg.s3 & (!Y1_state_reg.s10 & !Y1_state_reg.s30)));


--Y1L20 is SCSI_SM:u_SCSI_SM|SCSI_SM_INTERNALS:u_SCSI_SM_INTERNALS|Selector25~1
Y1L20 = (((A1L123 & Y1_state_reg.s8)) # (!Y1L19)) # (!Y1L6);


--Y1L15 is SCSI_SM:u_SCSI_SM|SCSI_SM_INTERNALS:u_SCSI_SM_INTERNALS|Selector13~0
Y1L15 = (Y1_state_reg.s8 & !A1L123);


--Y1L18 is SCSI_SM:u_SCSI_SM|SCSI_SM_INTERNALS:u_SCSI_SM_INTERNALS|Selector24~0
Y1L18 = (Y1_state_reg.s17) # ((Y1_state_reg.s26) # ((Y1L15) # (!Y1L27)));


--FB1L3 is registers:u_registers|registers_cntr:u_registers_cntr|CNTR_O[1]~2
FB1L3 = (EB1L2 & (A1L14)) # (!EB1L2 & ((FB1_CNTR_O[1])));


--FB1L5 is registers:u_registers|registers_cntr:u_registers_cntr|CNTR_O[2]~3
FB1L5 = (EB1L2 & (A1L16)) # (!EB1L2 & ((FB1_CNTR_O[2])));


--_RST is _RST
_RST = INPUT();


--SCLK is SCLK
SCLK = INPUT();


--R1L1 is CPU_SM:u_CPU_SM|cpudff1:u_cpudff1|cpudff1_d~0
R1L1 = (C1_STATE[3] & (C1_STATE[2] & (Q1L16 & !C1_STATE[0])));


--Q1L35 is CPU_SM:u_CPU_SM|CPU_SM_outputs:u_CPU_SM_outputs|INCFIFO_d~0
Q1L35 = (V1L1 & (A1L85 & ((P1L17) # (R1L1))));


--G1_A1 is registers:u_registers|A1
G1_A1 = DFFEAS(G1L2, !X1__clk0, X1__locked,  ,  ,  ,  ,  ,  );


--P1L5 is CPU_SM:u_CPU_SM|CPU_SM_inputs:u_CPU_SM_inputs|E[12]~14
P1L5 = (C1_BGRANT_ & (C1_nCYCLEDONE & G1_A1));


--R1L2 is CPU_SM:u_CPU_SM|cpudff1:u_cpudff1|cpudff1_d~1
R1L2 = (P1L18) # ((Q1L35) # ((Q1L21 & P1L5)));


--P1L11 is CPU_SM:u_CPU_SM|CPU_SM_inputs:u_CPU_SM_inputs|E[43]~15
P1L11 = (C1_STATE[0] & (C1_STATE[3] & (C1_STATE[4] & !C1_STATE[2])));


--S1L9 is CPU_SM:u_CPU_SM|cpudff2:u_cpudff2|p2b~0
S1L9 = (!_STERM & ((P1L17) # ((P1L13) # (P1L11))));


--P1L24 is CPU_SM:u_CPU_SM|CPU_SM_inputs:u_CPU_SM_inputs|E[61]~16
P1L24 = (C1_STATE[1] & !C1_STATE[4]);


--Q1L23 is CPU_SM:u_CPU_SM|CPU_SM_outputs:u_CPU_SM_outputs|Equal2~11
Q1L23 = (C1_STATE[0] & (C1_STATE[3] & (P1L24 & !C1_STATE[2])));


--S1L1 is CPU_SM:u_CPU_SM|cpudff2:u_cpudff2|cpudff2_d~0
S1L1 = (P1_E[26] & (!P1L21 & ((!Q1L23) # (!K1_FIFOFULL))));


--P1L12 is CPU_SM:u_CPU_SM|CPU_SM_inputs:u_CPU_SM_inputs|E[43]~17
P1L12 = (C1_STATE[0] & (C1_STATE[3] & !C1_STATE[2]));


--P1L22 is CPU_SM:u_CPU_SM|CPU_SM_inputs:u_CPU_SM_inputs|E[60]~18
P1L22 = (C1_STATE[1] & (C1_STATE[4] & (!C1_STATE[0] & !C1_STATE[3])));


--Q1L46 is CPU_SM:u_CPU_SM|CPU_SM_outputs:u_CPU_SM_outputs|PLHW_d~0
Q1L46 = (!P1L22 & ((K1_FIFOFULL) # ((!P1L12) # (!P1L24))));


--R1L3 is CPU_SM:u_CPU_SM|cpudff1:u_cpudff1|cpudff1_d~2
R1L3 = (Q1L46 & (!P1L25 & !Q1L19));


--C1_LASTWORD is CPU_SM:u_CPU_SM|LASTWORD
C1_LASTWORD = (G1_FLUSHFIFO & (!K1_FIFOEMPTY & ((J1_BO1) # (J1_BO0))));


--Q1L72 is CPU_SM:u_CPU_SM|CPU_SM_outputs:u_CPU_SM_outputs|nSTOPFLUSH_d~0
Q1L72 = (C1_STATE[3] & (C1_STATE[2] & (Q1L16 & !K1_FIFOEMPTY)));


--R1L4 is CPU_SM:u_CPU_SM|cpudff1:u_cpudff1|cpudff1_d~3
R1L4 = (S1L1 & (R1L3 & ((C1_LASTWORD) # (!Q1L72))));


--R1L5 is CPU_SM:u_CPU_SM|cpudff1:u_cpudff1|cpudff1_d~4
R1L5 = (P1L15) # ((P1L19) # ((S1L9) # (!R1L4)));


--Q1L48 is CPU_SM:u_CPU_SM|CPU_SM_outputs:u_CPU_SM_outputs|PLLW_Y~0
Q1L48 = (!P1L11 & (((!P1L24) # (!C1_STATE[2])) # (!C1_STATE[3])));


--U1L11 is CPU_SM:u_CPU_SM|cpudff4:u_cpudff4|p4b~0
U1L11 = (Q1L48 & (!Q1L14 & !Q1L15));


--P1L10 is CPU_SM:u_CPU_SM|CPU_SM_inputs:u_CPU_SM_inputs|E[37]~19
P1L10 = (C1_STATE[3] & (C1_STATE[2] & (!C1_STATE[1] & !C1_STATE[4])));


--R1L7 is CPU_SM:u_CPU_SM|cpudff1:u_cpudff1|p1c~0
R1L7 = (!Q1L13 & (!Q1L17 & (!P1L13 & !P1L10)));


--P1L20 is CPU_SM:u_CPU_SM|CPU_SM_inputs:u_CPU_SM_inputs|E[57]~20
P1L20 = (C1_STATE[0] & (C1_STATE[3] & (C1_STATE[4] & !C1_STATE[1])));


--S1L10 is CPU_SM:u_CPU_SM|cpudff2:u_cpudff2|p2c~0
S1L10 = (!P1L20 & (((A1L85) # (!P1L17)) # (!V1L1)));


--R1L8 is CPU_SM:u_CPU_SM|cpudff1:u_cpudff1|p1c~1
R1L8 = (((C1_nDSACK & !U1L11)) # (!S1L10)) # (!R1L7);


--R1L6 is CPU_SM:u_CPU_SM|cpudff1:u_cpudff1|cpudff1_d~5
R1L6 = (R1L2) # ((R1L5) # ((_STERM & R1L8)));


--S1L11 is CPU_SM:u_CPU_SM|cpudff2:u_cpudff2|p2c~1
S1L11 = (C1_nDSACK & ((Q1L18) # ((Q1L15) # (!Q1L48))));


--P1L14 is CPU_SM:u_CPU_SM|CPU_SM_inputs:u_CPU_SM_inputs|E[46]~21
P1L14 = (C1_STATE[2] & (C1_STATE[4] & !C1_STATE[1]));


--R1L9 is CPU_SM:u_CPU_SM|cpudff1:u_cpudff1|p1c~2
R1L9 = (!Q1L13 & (!Q1L17 & ((!P1L14) # (!C1_STATE[0]))));


--P1L8 is CPU_SM:u_CPU_SM|CPU_SM_inputs:u_CPU_SM_inputs|E[27]~22
P1L8 = (_STERM & ((S1L11) # ((!S1L10) # (!R1L9))));


--S1L2 is CPU_SM:u_CPU_SM|cpudff2:u_cpudff2|cpudff2_d~1
S1L2 = (C1_STATE[4] & (!FB1_CNTR_O[1] & (!C1_STATE[0] & !C1_STATE[3])));


--C1_DREQ_ is CPU_SM:u_CPU_SM|DREQ_
C1_DREQ_ = DFFEAS(DREQ_, X1__clk2, E1_CRESET_,  ,  ,  ,  ,  ,  );


--S1L3 is CPU_SM:u_CPU_SM|cpudff2:u_cpudff2|cpudff2_d~2
S1L3 = (C1_DMAENA & (S1L2 & (C1_DREQ_ & !C1_STATE[1])));


--S1L4 is CPU_SM:u_CPU_SM|cpudff2:u_cpudff2|cpudff2_d~3
S1L4 = (!K1_FIFOEMPTY & ((S1L3) # ((P1L26 & !C1L23))));


--Q1L58 is CPU_SM:u_CPU_SM|CPU_SM_outputs:u_CPU_SM_outputs|SIZE1_X~3
Q1L58 = (P1L17 & ((!DSACK_I_[0]) # (!_BERR)));


--A1L86 is DSK1_IN_~0
A1L86 = (!_BERR) # (!DSACK_I_[1]);


--S1L5 is CPU_SM:u_CPU_SM|cpudff2:u_cpudff2|cpudff2_d~4
S1L5 = (A1L86 & ((P1L11) # ((Q1L58 & !C1_nDSACK))));


--P1L9 is CPU_SM:u_CPU_SM|CPU_SM_inputs:u_CPU_SM_inputs|E[35]~23
P1L9 = (C1_STATE[1] & (C1_STATE[3] & (C1_STATE[2] & C1_STATE[4])));


--S1L6 is CPU_SM:u_CPU_SM|cpudff2:u_cpudff2|cpudff2_d~5
S1L6 = (P1L23) # ((C1_STATE[1] & (Q1L20 & !P1L5)));


--Q1L36 is CPU_SM:u_CPU_SM|CPU_SM_outputs:u_CPU_SM_outputs|INCFIFO_d~1
Q1L36 = (!P1L18 & (!S1L9 & ((C1_nDSACK) # (!P1L15))));


--S1L7 is CPU_SM:u_CPU_SM|cpudff2:u_cpudff2|cpudff2_d~6
S1L7 = (P1L9) # ((S1L6) # ((!Q1L36) # (!S1L1)));


--S1L8 is CPU_SM:u_CPU_SM|cpudff2:u_cpudff2|cpudff2_d~7
S1L8 = (P1L8) # ((S1L4) # ((S1L5) # (S1L7)));


--P1L27 is CPU_SM:u_CPU_SM|CPU_SM_inputs:u_CPU_SM_inputs|nE~1
P1L27 = (C1_BGRANT_ & (C1_nCYCLEDONE & !G1_A1));


--P1L28 is CPU_SM:u_CPU_SM|CPU_SM_inputs:u_CPU_SM_inputs|nE~2
P1L28 = (P1L16 & (C1_LASTWORD & (Q1L22 & P1L27)));


--U1L1 is CPU_SM:u_CPU_SM|cpudff4:u_cpudff4|cpudff4_d~0
U1L1 = (DB1L1 & ((P1L28) # ((P1L2 & Q1L67)))) # (!DB1L1 & (P1L2 & (Q1L67)));


--U1L2 is CPU_SM:u_CPU_SM|cpudff4:u_cpudff4|cpudff4_d~1
U1L2 = (U1L1) # ((!_STERM & ((!R1L7) # (!U1L11))));


--P1L4 is CPU_SM:u_CPU_SM|CPU_SM_inputs:u_CPU_SM_inputs|E[8]~24
P1L4 = (P1L16 & (Q1L22 & (P1L27 & !C1_LASTWORD)));


--Q1L49 is CPU_SM:u_CPU_SM|CPU_SM_outputs:u_CPU_SM_outputs|PLLW_Y~1
Q1L49 = (!C1_DSACK_LATCHED_[0] & (!C1_DSACK_LATCHED_[1] & ((P1L17) # (P1L11))));


--U1L3 is CPU_SM:u_CPU_SM|cpudff4:u_cpudff4|cpudff4_d~2
U1L3 = (_STERM & ((P1L13) # ((Q1L49) # (!S1L10))));


--P1L29 is CPU_SM:u_CPU_SM|CPU_SM_inputs:u_CPU_SM_inputs|nE~3
P1L29 = (Q1L14 & ((!DSACK_I_[0]) # (!_BERR)));


--U1L4 is CPU_SM:u_CPU_SM|cpudff4:u_cpudff4|cpudff4_d~3
U1L4 = (P1L15) # ((A1L86 & ((P1L29) # (!Q1L55))));


--U1L5 is CPU_SM:u_CPU_SM|cpudff4:u_cpudff4|cpudff4_d~4
U1L5 = (P1L4) # ((U1L3) # ((U1L4 & !C1_nDSACK)));


--P1L6 is CPU_SM:u_CPU_SM|CPU_SM_inputs:u_CPU_SM_inputs|E[21]~25
P1L6 = (C1L23 & (P1L26 & !K1_FIFOEMPTY));


--T1L1 is CPU_SM:u_CPU_SM|cpudff3:u_cpudff3|cpudff3_d~0
T1L1 = (DB1L1 & (!P1L6 & ((!Q1L22) # (!Q1L16)))) # (!DB1L1 & (((!Q1L22) # (!Q1L16))));


--U1L6 is CPU_SM:u_CPU_SM|cpudff4:u_cpudff4|cpudff4_d~5
U1L6 = (((K1_FIFOEMPTY & P1L26)) # (!T1L1)) # (!Q1L46);


--U1L7 is CPU_SM:u_CPU_SM|cpudff4:u_cpudff4|cpudff4_d~6
U1L7 = (P1L16 & (Q1L22 & ((!C1_nCYCLEDONE) # (!C1_BGRANT_))));


--U1L8 is CPU_SM:u_CPU_SM|cpudff4:u_cpudff4|cpudff4_d~7
U1L8 = (P1L23) # ((U1L7) # ((P1L11 & A1L86)));


--U1L9 is CPU_SM:u_CPU_SM|cpudff4:u_cpudff4|cpudff4_d~8
U1L9 = (P1L18) # ((U1L8) # ((Q1L21 & P1L5)));


--U1L10 is CPU_SM:u_CPU_SM|cpudff4:u_cpudff4|cpudff4_d~9
U1L10 = (U1L2) # ((U1L5) # ((U1L6) # (U1L9)));


--V1L11 is CPU_SM:u_CPU_SM|cpudff5:u_cpudff5|p5b~0
V1L11 = (!Q1L14 & (!Q1L17 & !P1L10));


--V1L12 is CPU_SM:u_CPU_SM|cpudff5:u_cpudff5|p5b~1
V1L12 = (!_STERM & ((Q1L15) # ((Q1L13) # (!V1L11))));


--T1L2 is CPU_SM:u_CPU_SM|cpudff3:u_cpudff3|cpudff3_d~1
T1L2 = ((P1L28 & ((!J1_BO0) # (!J1_BO1)))) # (!T1L1);


--T1L3 is CPU_SM:u_CPU_SM|cpudff3:u_cpudff3|cpudff3_d~2
T1L3 = (P1L25) # ((P1L19) # ((K1_FIFOFULL & Q1L23)));


--T1L4 is CPU_SM:u_CPU_SM|cpudff3:u_cpudff3|cpudff3_d~3
T1L4 = (K1_FIFOEMPTY) # (((!J1_BO1 & !J1_BO0)) # (!G1_FLUSHFIFO));


--T1L11 is CPU_SM:u_CPU_SM|cpudff3:u_cpudff3|p3a~0
T1L11 = (C1_STATE[0] & (!C1_STATE[3] & ((C1_STATE[1]) # (!C1_STATE[2]))));


--Q1L38 is CPU_SM:u_CPU_SM|CPU_SM_outputs:u_CPU_SM_outputs|PAS_Y~0
Q1L38 = (T1L11 & !C1_STATE[4]);


--T1L5 is CPU_SM:u_CPU_SM|cpudff3:u_cpudff3|cpudff3_d~4
T1L5 = (V1L1 & ((Q1L38) # ((P1L26 & T1L4)))) # (!V1L1 & (P1L26 & (T1L4)));


--Q1L50 is CPU_SM:u_CPU_SM|CPU_SM_outputs:u_CPU_SM_outputs|PLLW_d~0
Q1L50 = (!P1L9 & ((C1_DSACK_LATCHED_[0]) # ((C1_DSACK_LATCHED_[1]) # (!P1L15))));


--T1L6 is CPU_SM:u_CPU_SM|cpudff3:u_cpudff3|cpudff3_d~5
T1L6 = ((P1L16 & (Q1L22 & P1L5))) # (!Q1L50);


--T1L7 is CPU_SM:u_CPU_SM|cpudff3:u_cpudff3|cpudff3_d~6
T1L7 = (T1L2) # ((T1L3) # ((T1L5) # (T1L6)));


--V1L2 is CPU_SM:u_CPU_SM|cpudff5:u_cpudff5|cpudff5_d~1
V1L2 = (_BERR & (V1L1 & (P1L17 & DSACK_I_[0])));


--T1L8 is CPU_SM:u_CPU_SM|cpudff3:u_cpudff3|cpudff3_d~7
T1L8 = (!C1_DSACK_LATCHED_[0] & (!C1_DSACK_LATCHED_[1] & ((Q1L15) # (P1L17))));


--T1L9 is CPU_SM:u_CPU_SM|cpudff3:u_cpudff3|cpudff3_d~8
T1L9 = (Q1L13) # ((V1L2) # ((P1L13) # (T1L8)));


--T1L10 is CPU_SM:u_CPU_SM|cpudff3:u_cpudff3|cpudff3_d~9
T1L10 = (V1L12) # ((T1L7) # ((_STERM & T1L9)));


--_BG is _BG
_BG = INPUT();


--C1L36 is CPU_SM:u_CPU_SM|aCYCLEDONE_~0
C1L36 = (DSACK_I_[1] & (_BERR & (DSACK_I_[0] & _STERM)));


--C1L37 is CPU_SM:u_CPU_SM|aCYCLEDONE_~1
C1L37 = (A1L126 & (A1L130 & C1L36));


--V1L3 is CPU_SM:u_CPU_SM|cpudff5:u_cpudff5|cpudff5_d~2
V1L3 = (!Q1L15 & (((!A1L85 & !C1_STATE[1])) # (!Q1L14)));


--V1L4 is CPU_SM:u_CPU_SM|cpudff5:u_cpudff5|cpudff5_d~3
V1L4 = (P1L28) # ((P1L4) # ((V1L1 & !V1L3)));


--V1L5 is CPU_SM:u_CPU_SM|cpudff5:u_cpudff5|cpudff5_d~4
V1L5 = (P1L23) # ((C1_STATE[1] & (Q1L20 & P1L27)));


--Q1L39 is CPU_SM:u_CPU_SM|CPU_SM_outputs:u_CPU_SM_outputs|PAS_Y~1
Q1L39 = (P1L11 & (!C1_DSACK_LATCHED_[0] & !C1_DSACK_LATCHED_[1]));


--V1L6 is CPU_SM:u_CPU_SM|cpudff5:u_cpudff5|cpudff5_d~5
V1L6 = (V1L5) # ((_STERM & ((Q1L39) # (!S1L10))));


--V1L7 is CPU_SM:u_CPU_SM|cpudff5:u_cpudff5|cpudff5_d~6
V1L7 = (FB1_CNTR_O[1]) # ((!K1_FIFOEMPTY & (C1_DREQ_ & C1_STATE[4])));


--V1L8 is CPU_SM:u_CPU_SM|cpudff5:u_cpudff5|cpudff5_d~7
V1L8 = (C1_DMAENA & (!V1L7 & ((C1_STATE[4]) # (!C1_STATE[1])))) # (!C1_DMAENA & (((C1_STATE[4]))));


--V1L9 is CPU_SM:u_CPU_SM|cpudff5:u_cpudff5|cpudff5_d~8
V1L9 = (V1L6) # ((V1L8 & (!C1_STATE[0] & !C1_STATE[3])));


--V1L10 is CPU_SM:u_CPU_SM|cpudff5:u_cpudff5|cpudff5_d~9
V1L10 = (V1L12) # ((V1L4) # ((V1L9) # (!R1L4)));


--FB1L10 is registers:u_registers|registers_cntr:u_registers_cntr|CNTR_O[8]~4
FB1L10 = (ADDR[3] & (!_CS & (!A1L126 & !ADDR[6])));


--EB1_h_0C is registers:u_registers|addr_decoder:u_addr_decoder|h_0C
EB1_h_0C = (FB1L10 & (ADDR[2] & (!ADDR[5] & !ADDR[4])));


--E1_INCBO_o is SCSI_SM:u_SCSI_SM|INCBO_o
E1_INCBO_o = DFFEAS(Y1_INCBO, X1__clk1,  ,  ,  ,  ,  ,  ,  );


--J1L4 is fifo:int_fifo|fifo_byte_ptr:u_byte_ptr|BO1~0
J1L4 = (E1_INCBO_o & (((!J1_BO0 & !EB1_h_0C)))) # (!E1_INCBO_o & (A1L123 & ((EB1_h_0C))));


--J1L5 is fifo:int_fifo|fifo_byte_ptr:u_byte_ptr|BO1~1
J1L5 = (EB1_h_0C & ((J1L4 & (J1_BO1)) # (!J1L4 & ((!A1L62))))) # (!EB1_h_0C & (J1_BO1 $ (((J1L4)))));


--J1L2 is fifo:int_fifo|fifo_byte_ptr:u_byte_ptr|BO0~0
J1L2 = J1_BO0 $ (E1_INCBO_o);


--K1_UP[7] is fifo:int_fifo|fifo__full_empty_ctr:u_full_empty_ctr|UP[7]
K1_UP[7] = DFFEAS(K1L35, X1__clk2, X1__locked,  , K1L36,  ,  ,  ,  );


--K1_UP[6] is fifo:int_fifo|fifo__full_empty_ctr:u_full_empty_ctr|UP[6]
K1_UP[6] = DFFEAS(K1L37, X1__clk2, X1__locked,  , K1L36,  ,  ,  ,  );


--K1_UP[5] is fifo:int_fifo|fifo__full_empty_ctr:u_full_empty_ctr|UP[5]
K1_UP[5] = DFFEAS(K1L38, X1__clk2, X1__locked,  , K1L36,  ,  ,  ,  );


--K1_UP[4] is fifo:int_fifo|fifo__full_empty_ctr:u_full_empty_ctr|UP[4]
K1_UP[4] = DFFEAS(K1L39, X1__clk2, X1__locked,  , K1L36,  ,  ,  ,  );


--K1L20 is fifo:int_fifo|fifo__full_empty_ctr:u_full_empty_ctr|FIFOEMPTY~0
K1L20 = (!K1_UP[7] & (!K1_UP[6] & (!K1_UP[5] & !K1_UP[4])));


--K1_UP[3] is fifo:int_fifo|fifo__full_empty_ctr:u_full_empty_ctr|UP[3]
K1_UP[3] = DFFEAS(K1L40, X1__clk2, X1__locked,  , K1L36,  ,  ,  ,  );


--K1_UP[2] is fifo:int_fifo|fifo__full_empty_ctr:u_full_empty_ctr|UP[2]
K1_UP[2] = DFFEAS(K1L41, X1__clk2, X1__locked,  , K1L36,  ,  ,  ,  );


--K1_UP[1] is fifo:int_fifo|fifo__full_empty_ctr:u_full_empty_ctr|UP[1]
K1_UP[1] = DFFEAS(K1L42, X1__clk2, X1__locked,  , K1L36,  ,  ,  ,  );


--K1_UP[0] is fifo:int_fifo|fifo__full_empty_ctr:u_full_empty_ctr|UP[0]
K1_UP[0] = DFFEAS(C1_INCFIFO, X1__clk2, X1__locked,  , K1L36,  ,  ,  ,  );


--K1L21 is fifo:int_fifo|fifo__full_empty_ctr:u_full_empty_ctr|FIFOEMPTY~1
K1L21 = (!K1_UP[3] & (!K1_UP[2] & (!K1_UP[1] & !K1_UP[0])));


--K1_DOWN[6] is fifo:int_fifo|fifo__full_empty_ctr:u_full_empty_ctr|DOWN[6]
K1_DOWN[6] = DFFEAS(K1L15, X1__clk2, X1__locked,  ,  ,  ,  ,  ,  );


--K1_DOWN[5] is fifo:int_fifo|fifo__full_empty_ctr:u_full_empty_ctr|DOWN[5]
K1_DOWN[5] = DFFEAS(K1L13, X1__clk2, X1__locked,  ,  ,  ,  ,  ,  );


--K1_DOWN[4] is fifo:int_fifo|fifo__full_empty_ctr:u_full_empty_ctr|DOWN[4]
K1_DOWN[4] = DFFEAS(K1L11, X1__clk2, X1__locked,  ,  ,  ,  ,  ,  );


--K1_DOWN[3] is fifo:int_fifo|fifo__full_empty_ctr:u_full_empty_ctr|DOWN[3]
K1_DOWN[3] = DFFEAS(K1L9, X1__clk2, X1__locked,  ,  ,  ,  ,  ,  );


--K1L22 is fifo:int_fifo|fifo__full_empty_ctr:u_full_empty_ctr|FIFOEMPTY~2
K1L22 = (!K1_DOWN[6] & (!K1_DOWN[5] & (!K1_DOWN[4] & !K1_DOWN[3])));


--K1_DOWN[2] is fifo:int_fifo|fifo__full_empty_ctr:u_full_empty_ctr|DOWN[2]
K1_DOWN[2] = DFFEAS(K1L7, X1__clk2, X1__locked,  ,  ,  ,  ,  ,  );


--K1_DOWN[1] is fifo:int_fifo|fifo__full_empty_ctr:u_full_empty_ctr|DOWN[1]
K1_DOWN[1] = DFFEAS(K1L5, X1__clk2, X1__locked,  ,  ,  ,  ,  ,  );


--K1_DOWN[0] is fifo:int_fifo|fifo__full_empty_ctr:u_full_empty_ctr|DOWN[0]
K1_DOWN[0] = DFFEAS(K1L3, X1__clk2, X1__locked,  ,  ,  ,  ,  ,  );


--K1L23 is fifo:int_fifo|fifo__full_empty_ctr:u_full_empty_ctr|FIFOEMPTY~3
K1L23 = (!K1_DOWN[2] & (!K1_DOWN[1] & !K1_DOWN[0]));


--K1L24 is fifo:int_fifo|fifo__full_empty_ctr:u_full_empty_ctr|FIFOEMPTY~4
K1L24 = (((!K1L23) # (!K1L22)) # (!K1L21)) # (!K1L20);


--EB1L3 is registers:u_registers|addr_decoder:u_addr_decoder|FLUSH_~0
EB1L3 = (FB1L9 & (!ADDR[5] & (!ADDR[3] & !ADDR[6])));


--EB1L4 is registers:u_registers|addr_decoder:u_addr_decoder|FLUSH_~1
EB1L4 = (FB1_CNTR_O[1] & (ADDR[2] & ADDR[4]));


--C1_STOPFLUSH is CPU_SM:u_CPU_SM|STOPFLUSH
C1_STOPFLUSH = DFFEAS(Q1L73, X1__clk1, E1_CRESET_,  ,  ,  ,  ,  ,  );


--G1L4 is registers:u_registers|FLUSHFIFO~0
G1L4 = (EB1L3 & ((EB1L4) # ((G1_FLUSHFIFO & !C1_STOPFLUSH)))) # (!EB1L3 & (((G1_FLUSHFIFO & !C1_STOPFLUSH))));


--HB1L2 is registers:u_registers|registers_term:u_registers_term|CYCLE_ACTIVE~0
HB1L2 = (_CS) # ((A1L126) # ((ADDR[6]) # (EB1_h_0C)));


--HB1L1 is registers:u_registers|registers_term:u_registers_term|Add0~0
HB1L1 = (HB1_TERM_COUNTER[0] & HB1_TERM_COUNTER[1]);


--HB1L9 is registers:u_registers|registers_term:u_registers_term|TERM_COUNTER~0
HB1L9 = (!A1L126 & (HB1_TERM_COUNTER[2] $ (((!HB1L2 & HB1L1)))));


--HB1L10 is registers:u_registers|registers_term:u_registers_term|TERM_COUNTER~1
HB1L10 = (!A1L126 & (HB1_TERM_COUNTER[0] $ (!HB1L2)));


--HB1L11 is registers:u_registers|registers_term:u_registers_term|TERM_COUNTER~2
HB1L11 = (!A1L126 & (HB1_TERM_COUNTER[1] $ (((!HB1L2 & HB1_TERM_COUNTER[0])))));


--K1L16 is fifo:int_fifo|fifo__full_empty_ctr:u_full_empty_ctr|Equal2~0
K1L16 = (K1_UP[7] & (K1_UP[6] & (K1_UP[5] & K1_UP[4])));


--K1L17 is fifo:int_fifo|fifo__full_empty_ctr:u_full_empty_ctr|Equal2~1
K1L17 = (K1_UP[3] & K1_UP[2]);


--K1L18 is fifo:int_fifo|fifo__full_empty_ctr:u_full_empty_ctr|Equal2~2
K1L18 = (K1_UP[1] & (K1_UP[0] & (K1L16 & K1L17)));


--FB1_CNTR_O[8] is registers:u_registers|registers_cntr:u_registers_cntr|CNTR_O[8]
FB1_CNTR_O[8] = DFFEAS(FB1L12, !X1__clk0, X1__locked,  ,  ,  ,  ,  ,  );


--Y1_state_reg.s1 is SCSI_SM:u_SCSI_SM|SCSI_SM_INTERNALS:u_SCSI_SM_INTERNALS|state_reg.s1
Y1_state_reg.s1 = DFFEAS(Y1_state_reg.s18, X1__clk1, E1_CRESET_,  ,  ,  ,  ,  ,  );


--Y1L14 is SCSI_SM:u_SCSI_SM|SCSI_SM_INTERNALS:u_SCSI_SM_INTERNALS|Selector12~0
Y1L14 = (Y1_state_reg.s1) # ((!FB1_CNTR_O[1] & (!E1_CCPUREQ & !Y1_state_reg.s0)));


--EB1_WDREGREQ is registers:u_registers|addr_decoder:u_addr_decoder|WDREGREQ
EB1_WDREGREQ = (ADDR[6] & (!_CS & !A1L126));


--E1_RDFIFO_d is SCSI_SM:u_SCSI_SM|RDFIFO_d
E1_RDFIFO_d = DFFEAS(Y1L2, X1__clk1,  ,  ,  ,  ,  ,  ,  );


--C1_INCFIFO is CPU_SM:u_CPU_SM|INCFIFO
C1_INCFIFO = DFFEAS(Q1L37, X1__clk1, E1_CRESET_,  ,  ,  ,  ,  ,  );


--C1_DECFIFO is CPU_SM:u_CPU_SM|DECFIFO
C1_DECFIFO = DFFEAS(Q1L7, X1__clk1, E1_CRESET_,  ,  ,  ,  ,  ,  );


--E1L14 is SCSI_SM:u_SCSI_SM|RDFIFO_o~0
E1L14 = (!C1_DECFIFO & ((E1_RDFIFO_o) # ((E1_RDFIFO_d & !C1_INCFIFO))));


--_DREQ is _DREQ
_DREQ = INPUT();


--DREQ_ is DREQ_
DREQ_ = (!_DREQ & FB1_CNTR_O[8]);


--E1_RIFIFO_d is SCSI_SM:u_SCSI_SM|RIFIFO_d
E1_RIFIFO_d = DFFEAS(Y1L3, X1__clk1,  ,  ,  ,  ,  ,  ,  );


--E1L18 is SCSI_SM:u_SCSI_SM|RIFIFO_o~0
E1L18 = (E1_RIFIFO_d & !E1_RDFIFO_d);


--E1L19 is SCSI_SM:u_SCSI_SM|RIFIFO_o~1
E1L19 = (C1_DECFIFO & (E1_RIFIFO_o)) # (!C1_DECFIFO & (!C1_INCFIFO & ((E1_RIFIFO_o) # (E1L18))));


--Y1_state_reg.s14 is SCSI_SM:u_SCSI_SM|SCSI_SM_INTERNALS:u_SCSI_SM_INTERNALS|state_reg.s14
Y1_state_reg.s14 = DFFEAS(Y1L13, X1__clk1, E1_CRESET_,  ,  ,  ,  ,  ,  );


--Y1_state_reg.s25 is SCSI_SM:u_SCSI_SM|SCSI_SM_INTERNALS:u_SCSI_SM_INTERNALS|state_reg.s25
Y1_state_reg.s25 = DFFEAS(Y1L16, X1__clk1, E1_CRESET_,  ,  ,  ,  ,  ,  );


--E1_CDSACK_ is SCSI_SM:u_SCSI_SM|CDSACK_
E1_CDSACK_ = DFFEAS(E1_nLS2CPU, X1__clk1, E1_CRESET_,  ,  ,  ,  ,  ,  );


--Y1L8 is SCSI_SM:u_SCSI_SM|SCSI_SM_INTERNALS:u_SCSI_SM_INTERNALS|Selector1~0
Y1L8 = (Y1_state_reg.s14 & (((!E1_CDSACK_) # (!Y1_state_reg.s0)))) # (!Y1_state_reg.s14 & (Y1_state_reg.s25 & ((!E1_CDSACK_) # (!Y1_state_reg.s0))));


--Y1L9 is SCSI_SM:u_SCSI_SM|SCSI_SM_INTERNALS:u_SCSI_SM_INTERNALS|Selector1~1
Y1L9 = (Y1_state_reg.s16 & (!E1_CCPUREQ & ((Y1L30) # (!K1_FIFOEMPTY))));


--Y1_state_reg.s12 is SCSI_SM:u_SCSI_SM|SCSI_SM_INTERNALS:u_SCSI_SM_INTERNALS|state_reg.s12
Y1_state_reg.s12 = DFFEAS(Y1_state_reg.s20, X1__clk1, E1_CRESET_,  ,  ,  ,  ,  ,  );


--Y1L32 is SCSI_SM:u_SCSI_SM|SCSI_SM_INTERNALS:u_SCSI_SM_INTERNALS|always1~2
Y1L32 = (FB1_CNTR_O[1] & !E1_CCPUREQ);


--Y1L10 is SCSI_SM:u_SCSI_SM|SCSI_SM_INTERNALS:u_SCSI_SM_INTERNALS|Selector1~2
Y1L10 = (Y1L32 & (!Y1_state_reg.s0 & ((K1_FIFOFULL) # (!Y1L31))));


--Y1L11 is SCSI_SM:u_SCSI_SM|SCSI_SM_INTERNALS:u_SCSI_SM_INTERNALS|Selector1~3
Y1L11 = (!Y1L8 & (!Y1L9 & (!Y1_state_reg.s12 & !Y1L10)));


--Y1L21 is SCSI_SM:u_SCSI_SM|SCSI_SM_INTERNALS:u_SCSI_SM_INTERNALS|Selector25~2
Y1L21 = (A1L123 & Y1_state_reg.s8);


--Y1L12 is SCSI_SM:u_SCSI_SM|SCSI_SM_INTERNALS:u_SCSI_SM_INTERNALS|Selector7~0
Y1L12 = (E1_CCPUREQ & ((Y1_state_reg.s16) # (!Y1_state_reg.s0)));


--AS_O_ is AS_O_
AS_O_ = DFFEAS(A1L8, !SCLK,  ,  ,  ,  ,  ,  ,  );


--DS_O_ is DS_O_
DS_O_ = DFFEAS(A1L88, !SCLK,  ,  ,  ,  ,  ,  ,  );


--AB1_LD_LATCH[0] is datapath:u_datapath|datapath_output:u_datapath_output|LD_LATCH[0]
AB1_LD_LATCH[0] = DFFEAS(N4_q_b[7], X1__clk2,  ,  , C1_PAS,  ,  ,  ,  );


--GB1_ISTR_O[0] is registers:u_registers|registers_istr:u_registers_istr|ISTR_O[0]
GB1_ISTR_O[0] = DFFEAS(GB1L15, !X1__clk0,  ,  ,  ,  ,  ,  ,  );


--EB1L5 is registers:u_registers|addr_decoder:u_addr_decoder|ISTR_RD_~0
EB1L5 = (ADDR[2] & ADDR[4]);


--C1_F2CPUL is CPU_SM:u_CPU_SM|F2CPUL
C1_F2CPUL = DFFEAS(Q1L32, X1__clk1, E1_CRESET_,  ,  ,  ,  ,  ,  );


--E1_S2CPU_o is SCSI_SM:u_SCSI_SM|S2CPU_o
E1_S2CPU_o = DFFEAS(Y1L22, X1__clk1,  ,  ,  ,  ,  ,  ,  );


--AB1L1 is datapath:u_datapath|datapath_output:u_datapath_output|DATA[0]~0
AB1L1 = (!C1_F2CPUL & !E1_S2CPU_o);


--AB1L2 is datapath:u_datapath|datapath_output:u_datapath_output|DATA[0]~1
AB1L2 = (A1L123 & (EB1L8 & (EB1L5 & AB1L1)));


--AB1L10 is datapath:u_datapath|datapath_output:u_datapath_output|DATA[3]~2
AB1L10 = (C1_F2CPUL & !E1_S2CPU_o);


--AB1L3 is datapath:u_datapath|datapath_output:u_datapath_output|DATA[0]~3
AB1L3 = (AB1_LD_LATCH[0] & ((AB1L10) # ((GB1_ISTR_O[0] & AB1L2)))) # (!AB1_LD_LATCH[0] & (GB1_ISTR_O[0] & (AB1L2)));


--AB1_LD_LATCH[1] is datapath:u_datapath|datapath_output:u_datapath_output|LD_LATCH[1]
AB1_LD_LATCH[1] = DFFEAS(N4_q_b[6], X1__clk2,  ,  , C1_PAS,  ,  ,  ,  );


--EB1L1 is registers:u_registers|addr_decoder:u_addr_decoder|CONTR_RD_~0
EB1L1 = (A1L123 & (EB1L8 & (!ADDR[2] & !ADDR[4])));


--AB1L4 is datapath:u_datapath|datapath_output:u_datapath_output|DATA[1]~4
AB1L4 = (EB1L1 & (!C1_F2CPUL & !E1_S2CPU_o));


--AB1L5 is datapath:u_datapath|datapath_output:u_datapath_output|DATA[1]~5
AB1L5 = (FB1_CNTR_O[1] & ((AB1L4) # ((AB1L10 & AB1_LD_LATCH[1])))) # (!FB1_CNTR_O[1] & (AB1L10 & (AB1_LD_LATCH[1])));


--GB1_ISTR_O[1] is registers:u_registers|registers_istr:u_registers_istr|ISTR_O[1]
GB1_ISTR_O[1] = DFFEAS(GB1_FF, !X1__clk0,  ,  ,  ,  ,  ,  ,  );


--AB1L6 is datapath:u_datapath|datapath_output:u_datapath_output|DATA[1]~6
AB1L6 = (AB1L5) # ((AB1L2 & (GB1_ISTR_O[1] & !EB1L1)));


--AB1L7 is datapath:u_datapath|datapath_output:u_datapath_output|DATA[2]~7
AB1L7 = (A1L123 & (ADDR[2] & (AB1L1 & !ADDR[4])));


--AB1L8 is datapath:u_datapath|datapath_output:u_datapath_output|DATA[2]~8
AB1L8 = (FB1_CNTR_O[2] & ((AB1L4) # ((EB1L3 & AB1L7)))) # (!FB1_CNTR_O[2] & (EB1L3 & (AB1L7)));


--AB1_LD_LATCH[2] is datapath:u_datapath|datapath_output:u_datapath_output|LD_LATCH[2]
AB1_LD_LATCH[2] = DFFEAS(N4_q_b[5], X1__clk2,  ,  , C1_PAS,  ,  ,  ,  );


--AB1L9 is datapath:u_datapath|datapath_output:u_datapath_output|DATA[2]~9
AB1L9 = (AB1L8) # ((C1_F2CPUL & (AB1_LD_LATCH[2] & !E1_S2CPU_o)));


--AB1_LD_LATCH[3] is datapath:u_datapath|datapath_output:u_datapath_output|LD_LATCH[3]
AB1_LD_LATCH[3] = DFFEAS(N4_q_b[4], X1__clk2,  ,  , C1_PAS,  ,  ,  ,  );


--AB1L11 is datapath:u_datapath|datapath_output:u_datapath_output|DATA[3]~10
AB1L11 = (C1_F2CPUL & (AB1_LD_LATCH[3] & !E1_S2CPU_o));


--AB1_LD_LATCH[4] is datapath:u_datapath|datapath_output:u_datapath_output|LD_LATCH[4]
AB1_LD_LATCH[4] = DFFEAS(N4_q_b[3], X1__clk2,  ,  , C1_PAS,  ,  ,  ,  );


--AB1L12 is datapath:u_datapath|datapath_output:u_datapath_output|DATA[4]~11
AB1L12 = (FB1_CNTR_O[4] & ((AB1L4) # ((AB1L10 & AB1_LD_LATCH[4])))) # (!FB1_CNTR_O[4] & (AB1L10 & (AB1_LD_LATCH[4])));


--GB1_ISTR_O[4] is registers:u_registers|registers_istr:u_registers_istr|ISTR_O[4]
GB1_ISTR_O[4] = DFFEAS(GB1_INT_P, !X1__clk0,  ,  ,  ,  ,  ,  ,  );


--AB1L13 is datapath:u_datapath|datapath_output:u_datapath_output|DATA[4]~12
AB1L13 = (AB1L12) # ((AB1L2 & (GB1_ISTR_O[4] & !EB1L1)));


--GB1_ISTR_O[5] is registers:u_registers|registers_istr:u_registers_istr|ISTR_O[5]
GB1_ISTR_O[5] = DFFEAS(GB1_INT_F, !X1__clk0,  ,  ,  ,  ,  ,  ,  );


--AB1_LD_LATCH[5] is datapath:u_datapath|datapath_output:u_datapath_output|LD_LATCH[5]
AB1_LD_LATCH[5] = DFFEAS(N4_q_b[2], X1__clk2,  ,  , C1_PAS,  ,  ,  ,  );


--AB1L14 is datapath:u_datapath|datapath_output:u_datapath_output|DATA[5]~13
AB1L14 = (AB1L10 & ((AB1_LD_LATCH[5]) # ((AB1L2 & GB1_ISTR_O[5])))) # (!AB1L10 & (AB1L2 & (GB1_ISTR_O[5])));


--AB1_LD_LATCH[6] is datapath:u_datapath|datapath_output:u_datapath_output|LD_LATCH[6]
AB1_LD_LATCH[6] = DFFEAS(N4_q_b[1], X1__clk2,  ,  , C1_PAS,  ,  ,  ,  );


--AB1L15 is datapath:u_datapath|datapath_output:u_datapath_output|DATA[6]~14
AB1L15 = (AB1L10 & ((AB1_LD_LATCH[6]) # ((AB1L2 & GB1_ISTR_O[5])))) # (!AB1L10 & (AB1L2 & (GB1_ISTR_O[5])));


--AB1_LD_LATCH[7] is datapath:u_datapath|datapath_output:u_datapath_output|LD_LATCH[7]
AB1_LD_LATCH[7] = DFFEAS(N4_q_b[0], X1__clk2,  ,  , C1_PAS,  ,  ,  ,  );


--AB1L16 is datapath:u_datapath|datapath_output:u_datapath_output|DATA[7]~15
AB1L16 = (AB1L10 & ((AB1_LD_LATCH[7]) # ((AB1L2 & GB1_ISTR_O[5])))) # (!AB1L10 & (AB1L2 & (GB1_ISTR_O[5])));


--BB1_SCSI_DATA_LATCHED[0] is datapath:u_datapath|datapath_scsi:u_datapath_scsi|SCSI_DATA_LATCHED[0]
BB1_SCSI_DATA_LATCHED[0] = DFFEAS(A1L99, !SCLK, E1_S2CPU_o,  , E1_nLS2CPU,  ,  ,  ,  );


--AB1_LD_LATCH[8] is datapath:u_datapath|datapath_output:u_datapath_output|LD_LATCH[8]
AB1_LD_LATCH[8] = DFFEAS(N3_q_b[7], X1__clk2,  ,  , C1_PAS,  ,  ,  ,  );


--AB1L17 is datapath:u_datapath|datapath_output:u_datapath_output|DATA[8]~16
AB1L17 = (E1_S2CPU_o & (BB1_SCSI_DATA_LATCHED[0])) # (!E1_S2CPU_o & (((C1_F2CPUL & AB1_LD_LATCH[8]))));


--AB1L18 is datapath:u_datapath|datapath_output:u_datapath_output|DATA[8]~17
AB1L18 = (AB1L17) # ((FB1_CNTR_O[8] & (AB1L1 & EB1L1)));


--BB1_SCSI_DATA_LATCHED[1] is datapath:u_datapath|datapath_scsi:u_datapath_scsi|SCSI_DATA_LATCHED[1]
BB1_SCSI_DATA_LATCHED[1] = DFFEAS(A1L101, !SCLK, E1_S2CPU_o,  , E1_nLS2CPU,  ,  ,  ,  );


--AB1_LD_LATCH[9] is datapath:u_datapath|datapath_output:u_datapath_output|LD_LATCH[9]
AB1_LD_LATCH[9] = DFFEAS(N3_q_b[6], X1__clk2,  ,  , C1_PAS,  ,  ,  ,  );


--AB1L19 is datapath:u_datapath|datapath_output:u_datapath_output|DATA[9]~18
AB1L19 = (E1_S2CPU_o & (BB1_SCSI_DATA_LATCHED[1])) # (!E1_S2CPU_o & (((C1_F2CPUL & AB1_LD_LATCH[9]))));


--BB1_SCSI_DATA_LATCHED[2] is datapath:u_datapath|datapath_scsi:u_datapath_scsi|SCSI_DATA_LATCHED[2]
BB1_SCSI_DATA_LATCHED[2] = DFFEAS(A1L103, !SCLK, E1_S2CPU_o,  , E1_nLS2CPU,  ,  ,  ,  );


--AB1_LD_LATCH[10] is datapath:u_datapath|datapath_output:u_datapath_output|LD_LATCH[10]
AB1_LD_LATCH[10] = DFFEAS(N3_q_b[5], X1__clk2,  ,  , C1_PAS,  ,  ,  ,  );


--AB1L20 is datapath:u_datapath|datapath_output:u_datapath_output|DATA[10]~19
AB1L20 = (E1_S2CPU_o & (BB1_SCSI_DATA_LATCHED[2])) # (!E1_S2CPU_o & (((C1_F2CPUL & AB1_LD_LATCH[10]))));


--BB1_SCSI_DATA_LATCHED[3] is datapath:u_datapath|datapath_scsi:u_datapath_scsi|SCSI_DATA_LATCHED[3]
BB1_SCSI_DATA_LATCHED[3] = DFFEAS(A1L105, !SCLK, E1_S2CPU_o,  , E1_nLS2CPU,  ,  ,  ,  );


--AB1_LD_LATCH[11] is datapath:u_datapath|datapath_output:u_datapath_output|LD_LATCH[11]
AB1_LD_LATCH[11] = DFFEAS(N3_q_b[4], X1__clk2,  ,  , C1_PAS,  ,  ,  ,  );


--AB1L21 is datapath:u_datapath|datapath_output:u_datapath_output|DATA[11]~20
AB1L21 = (E1_S2CPU_o & (BB1_SCSI_DATA_LATCHED[3])) # (!E1_S2CPU_o & (((C1_F2CPUL & AB1_LD_LATCH[11]))));


--BB1_SCSI_DATA_LATCHED[4] is datapath:u_datapath|datapath_scsi:u_datapath_scsi|SCSI_DATA_LATCHED[4]
BB1_SCSI_DATA_LATCHED[4] = DFFEAS(A1L107, !SCLK, E1_S2CPU_o,  , E1_nLS2CPU,  ,  ,  ,  );


--AB1_LD_LATCH[12] is datapath:u_datapath|datapath_output:u_datapath_output|LD_LATCH[12]
AB1_LD_LATCH[12] = DFFEAS(N3_q_b[3], X1__clk2,  ,  , C1_PAS,  ,  ,  ,  );


--AB1L22 is datapath:u_datapath|datapath_output:u_datapath_output|DATA[12]~21
AB1L22 = (E1_S2CPU_o & (BB1_SCSI_DATA_LATCHED[4])) # (!E1_S2CPU_o & (((C1_F2CPUL & AB1_LD_LATCH[12]))));


--BB1_SCSI_DATA_LATCHED[5] is datapath:u_datapath|datapath_scsi:u_datapath_scsi|SCSI_DATA_LATCHED[5]
BB1_SCSI_DATA_LATCHED[5] = DFFEAS(A1L109, !SCLK, E1_S2CPU_o,  , E1_nLS2CPU,  ,  ,  ,  );


--AB1_LD_LATCH[13] is datapath:u_datapath|datapath_output:u_datapath_output|LD_LATCH[13]
AB1_LD_LATCH[13] = DFFEAS(N3_q_b[2], X1__clk2,  ,  , C1_PAS,  ,  ,  ,  );


--AB1L23 is datapath:u_datapath|datapath_output:u_datapath_output|DATA[13]~22
AB1L23 = (E1_S2CPU_o & (BB1_SCSI_DATA_LATCHED[5])) # (!E1_S2CPU_o & (((C1_F2CPUL & AB1_LD_LATCH[13]))));


--BB1_SCSI_DATA_LATCHED[6] is datapath:u_datapath|datapath_scsi:u_datapath_scsi|SCSI_DATA_LATCHED[6]
BB1_SCSI_DATA_LATCHED[6] = DFFEAS(A1L111, !SCLK, E1_S2CPU_o,  , E1_nLS2CPU,  ,  ,  ,  );


--AB1_LD_LATCH[14] is datapath:u_datapath|datapath_output:u_datapath_output|LD_LATCH[14]
AB1_LD_LATCH[14] = DFFEAS(N3_q_b[1], X1__clk2,  ,  , C1_PAS,  ,  ,  ,  );


--AB1L24 is datapath:u_datapath|datapath_output:u_datapath_output|DATA[14]~23
AB1L24 = (E1_S2CPU_o & (BB1_SCSI_DATA_LATCHED[6])) # (!E1_S2CPU_o & (((C1_F2CPUL & AB1_LD_LATCH[14]))));


--BB1_SCSI_DATA_LATCHED[7] is datapath:u_datapath|datapath_scsi:u_datapath_scsi|SCSI_DATA_LATCHED[7]
BB1_SCSI_DATA_LATCHED[7] = DFFEAS(A1L113, !SCLK, E1_S2CPU_o,  , E1_nLS2CPU,  ,  ,  ,  );


--AB1_LD_LATCH[15] is datapath:u_datapath|datapath_output:u_datapath_output|LD_LATCH[15]
AB1_LD_LATCH[15] = DFFEAS(N3_q_b[0], X1__clk2,  ,  , C1_PAS,  ,  ,  ,  );


--AB1L25 is datapath:u_datapath|datapath_output:u_datapath_output|DATA[15]~24
AB1L25 = (E1_S2CPU_o & (BB1_SCSI_DATA_LATCHED[7])) # (!E1_S2CPU_o & (((C1_F2CPUL & AB1_LD_LATCH[15]))));


--AB1_UD_LATCH[0] is datapath:u_datapath|datapath_output:u_datapath_output|UD_LATCH[0]
AB1_UD_LATCH[0] = DFFEAS(AB1L76, X1__clk2,  ,  , C1_PAS,  ,  ,  ,  );


--C1_F2CPUH is CPU_SM:u_CPU_SM|F2CPUH
C1_F2CPUH = DFFEAS(Q1L28, X1__clk1, E1_CRESET_,  ,  ,  ,  ,  ,  );


--AB1L26 is datapath:u_datapath|datapath_output:u_datapath_output|DATA[16]~25
AB1L26 = (AB1_UD_LATCH[0] & (C1_F2CPUH & !E1_S2CPU_o));


--AB1_UD_LATCH[1] is datapath:u_datapath|datapath_output:u_datapath_output|UD_LATCH[1]
AB1_UD_LATCH[1] = DFFEAS(AB1L77, X1__clk2,  ,  , C1_PAS,  ,  ,  ,  );


--AB1L27 is datapath:u_datapath|datapath_output:u_datapath_output|DATA[17]~26
AB1L27 = (C1_F2CPUH & (AB1_UD_LATCH[1] & !E1_S2CPU_o));


--AB1_UD_LATCH[2] is datapath:u_datapath|datapath_output:u_datapath_output|UD_LATCH[2]
AB1_UD_LATCH[2] = DFFEAS(AB1L78, X1__clk2,  ,  , C1_PAS,  ,  ,  ,  );


--AB1L28 is datapath:u_datapath|datapath_output:u_datapath_output|DATA[18]~27
AB1L28 = (C1_F2CPUH & (AB1_UD_LATCH[2] & !E1_S2CPU_o));


--AB1_UD_LATCH[3] is datapath:u_datapath|datapath_output:u_datapath_output|UD_LATCH[3]
AB1_UD_LATCH[3] = DFFEAS(AB1L79, X1__clk2,  ,  , C1_PAS,  ,  ,  ,  );


--AB1L29 is datapath:u_datapath|datapath_output:u_datapath_output|DATA[19]~28
AB1L29 = (C1_F2CPUH & (AB1_UD_LATCH[3] & !E1_S2CPU_o));


--AB1_UD_LATCH[4] is datapath:u_datapath|datapath_output:u_datapath_output|UD_LATCH[4]
AB1_UD_LATCH[4] = DFFEAS(AB1L80, X1__clk2,  ,  , C1_PAS,  ,  ,  ,  );


--AB1L30 is datapath:u_datapath|datapath_output:u_datapath_output|DATA[20]~29
AB1L30 = (C1_F2CPUH & (AB1_UD_LATCH[4] & !E1_S2CPU_o));


--AB1_UD_LATCH[5] is datapath:u_datapath|datapath_output:u_datapath_output|UD_LATCH[5]
AB1_UD_LATCH[5] = DFFEAS(AB1L81, X1__clk2,  ,  , C1_PAS,  ,  ,  ,  );


--AB1L31 is datapath:u_datapath|datapath_output:u_datapath_output|DATA[21]~30
AB1L31 = (C1_F2CPUH & (AB1_UD_LATCH[5] & !E1_S2CPU_o));


--AB1_UD_LATCH[6] is datapath:u_datapath|datapath_output:u_datapath_output|UD_LATCH[6]
AB1_UD_LATCH[6] = DFFEAS(AB1L82, X1__clk2,  ,  , C1_PAS,  ,  ,  ,  );


--AB1L32 is datapath:u_datapath|datapath_output:u_datapath_output|DATA[22]~31
AB1L32 = (C1_F2CPUH & (AB1_UD_LATCH[6] & !E1_S2CPU_o));


--AB1_UD_LATCH[7] is datapath:u_datapath|datapath_output:u_datapath_output|UD_LATCH[7]
AB1_UD_LATCH[7] = DFFEAS(AB1L83, X1__clk2,  ,  , C1_PAS,  ,  ,  ,  );


--AB1L33 is datapath:u_datapath|datapath_output:u_datapath_output|DATA[23]~32
AB1L33 = (C1_F2CPUH & (AB1_UD_LATCH[7] & !E1_S2CPU_o));


--AB1_UD_LATCH[8] is datapath:u_datapath|datapath_output:u_datapath_output|UD_LATCH[8]
AB1_UD_LATCH[8] = DFFEAS(AB1L84, X1__clk2,  ,  , C1_PAS,  ,  ,  ,  );


--AB1L34 is datapath:u_datapath|datapath_output:u_datapath_output|DATA[24]~33
AB1L34 = (E1_S2CPU_o & (BB1_SCSI_DATA_LATCHED[0])) # (!E1_S2CPU_o & (((C1_F2CPUH & AB1_UD_LATCH[8]))));


--AB1_UD_LATCH[9] is datapath:u_datapath|datapath_output:u_datapath_output|UD_LATCH[9]
AB1_UD_LATCH[9] = DFFEAS(AB1L85, X1__clk2,  ,  , C1_PAS,  ,  ,  ,  );


--AB1L35 is datapath:u_datapath|datapath_output:u_datapath_output|DATA[25]~34
AB1L35 = (E1_S2CPU_o & (BB1_SCSI_DATA_LATCHED[1])) # (!E1_S2CPU_o & (((C1_F2CPUH & AB1_UD_LATCH[9]))));


--AB1_UD_LATCH[10] is datapath:u_datapath|datapath_output:u_datapath_output|UD_LATCH[10]
AB1_UD_LATCH[10] = DFFEAS(AB1L86, X1__clk2,  ,  , C1_PAS,  ,  ,  ,  );


--AB1L36 is datapath:u_datapath|datapath_output:u_datapath_output|DATA[26]~35
AB1L36 = (E1_S2CPU_o & (BB1_SCSI_DATA_LATCHED[2])) # (!E1_S2CPU_o & (((C1_F2CPUH & AB1_UD_LATCH[10]))));


--AB1_UD_LATCH[11] is datapath:u_datapath|datapath_output:u_datapath_output|UD_LATCH[11]
AB1_UD_LATCH[11] = DFFEAS(AB1L87, X1__clk2,  ,  , C1_PAS,  ,  ,  ,  );


--AB1L37 is datapath:u_datapath|datapath_output:u_datapath_output|DATA[27]~36
AB1L37 = (E1_S2CPU_o & (BB1_SCSI_DATA_LATCHED[3])) # (!E1_S2CPU_o & (((C1_F2CPUH & AB1_UD_LATCH[11]))));


--AB1_UD_LATCH[12] is datapath:u_datapath|datapath_output:u_datapath_output|UD_LATCH[12]
AB1_UD_LATCH[12] = DFFEAS(AB1L88, X1__clk2,  ,  , C1_PAS,  ,  ,  ,  );


--AB1L38 is datapath:u_datapath|datapath_output:u_datapath_output|DATA[28]~37
AB1L38 = (E1_S2CPU_o & (BB1_SCSI_DATA_LATCHED[4])) # (!E1_S2CPU_o & (((C1_F2CPUH & AB1_UD_LATCH[12]))));


--AB1_UD_LATCH[13] is datapath:u_datapath|datapath_output:u_datapath_output|UD_LATCH[13]
AB1_UD_LATCH[13] = DFFEAS(AB1L89, X1__clk2,  ,  , C1_PAS,  ,  ,  ,  );


--AB1L39 is datapath:u_datapath|datapath_output:u_datapath_output|DATA[29]~38
AB1L39 = (E1_S2CPU_o & (BB1_SCSI_DATA_LATCHED[5])) # (!E1_S2CPU_o & (((C1_F2CPUH & AB1_UD_LATCH[13]))));


--AB1_UD_LATCH[14] is datapath:u_datapath|datapath_output:u_datapath_output|UD_LATCH[14]
AB1_UD_LATCH[14] = DFFEAS(AB1L90, X1__clk2,  ,  , C1_PAS,  ,  ,  ,  );


--AB1L40 is datapath:u_datapath|datapath_output:u_datapath_output|DATA[30]~39
AB1L40 = (E1_S2CPU_o & (BB1_SCSI_DATA_LATCHED[6])) # (!E1_S2CPU_o & (((C1_F2CPUH & AB1_UD_LATCH[14]))));


--AB1_UD_LATCH[15] is datapath:u_datapath|datapath_output:u_datapath_output|UD_LATCH[15]
AB1_UD_LATCH[15] = DFFEAS(AB1L91, X1__clk2,  ,  , C1_PAS,  ,  ,  ,  );


--AB1L41 is datapath:u_datapath|datapath_output:u_datapath_output|DATA[31]~40
AB1L41 = (E1_S2CPU_o & (BB1_SCSI_DATA_LATCHED[7])) # (!E1_S2CPU_o & (((C1_F2CPUH & AB1_UD_LATCH[15]))));


--C1_DIEH is CPU_SM:u_CPU_SM|DIEH
C1_DIEH = DFFEAS(Q1L10, X1__clk1, E1_CRESET_,  ,  ,  ,  ,  ,  );


--BB1L10 is datapath:u_datapath|datapath_scsi:u_datapath_scsi|SCSI_DATA_OUT[0]~0
BB1L10 = (ADDR[3] & (A1L44 & (C1_DIEH))) # (!ADDR[3] & (((A1L12))));


--E1_CPU2S_o is SCSI_SM:u_SCSI_SM|CPU2S_o
E1_CPU2S_o = DFFEAS(Y1L24, X1__clk1,  ,  ,  ,  ,  ,  ,  );


--E1_F2S_o is SCSI_SM:u_SCSI_SM|F2S_o
E1_F2S_o = DFFEAS(Y1_WideOr22, X1__clk1,  ,  ,  ,  ,  ,  ,  );


--BB1L11 is datapath:u_datapath|datapath_scsi:u_datapath_scsi|SCSI_DATA_OUT[0]~1
BB1L11 = (J1_BO1 & (((J1_BO0)))) # (!J1_BO1 & ((J1_BO0 & (N3_q_b[7])) # (!J1_BO0 & ((N1_q_b[7])))));


--BB1L12 is datapath:u_datapath|datapath_scsi:u_datapath_scsi|SCSI_DATA_OUT[0]~2
BB1L12 = (J1_BO1 & ((BB1L11 & (N4_q_b[7])) # (!BB1L11 & ((N2_q_b[7]))))) # (!J1_BO1 & (((BB1L11))));


--BB1L13 is datapath:u_datapath|datapath_scsi:u_datapath_scsi|SCSI_DATA_OUT[0]~3
BB1L13 = (E1_CPU2S_o & (BB1L10 & (!E1_F2S_o))) # (!E1_CPU2S_o & (((E1_F2S_o & BB1L12))));


--BB1L14 is datapath:u_datapath|datapath_scsi:u_datapath_scsi|SCSI_DATA_OUT[1]~4
BB1L14 = (ADDR[3] & (A1L46 & (C1_DIEH))) # (!ADDR[3] & (((A1L14))));


--BB1L15 is datapath:u_datapath|datapath_scsi:u_datapath_scsi|SCSI_DATA_OUT[1]~5
BB1L15 = (J1_BO1 & (((J1_BO0)))) # (!J1_BO1 & ((J1_BO0 & (N3_q_b[6])) # (!J1_BO0 & ((N1_q_b[6])))));


--BB1L16 is datapath:u_datapath|datapath_scsi:u_datapath_scsi|SCSI_DATA_OUT[1]~6
BB1L16 = (J1_BO1 & ((BB1L15 & (N4_q_b[6])) # (!BB1L15 & ((N2_q_b[6]))))) # (!J1_BO1 & (((BB1L15))));


--BB1L17 is datapath:u_datapath|datapath_scsi:u_datapath_scsi|SCSI_DATA_OUT[1]~7
BB1L17 = (E1_F2S_o & (((!E1_CPU2S_o & BB1L16)))) # (!E1_F2S_o & (BB1L14 & (E1_CPU2S_o)));


--BB1L18 is datapath:u_datapath|datapath_scsi:u_datapath_scsi|SCSI_DATA_OUT[2]~8
BB1L18 = (ADDR[3] & (A1L48 & (C1_DIEH))) # (!ADDR[3] & (((A1L16))));


--BB1L19 is datapath:u_datapath|datapath_scsi:u_datapath_scsi|SCSI_DATA_OUT[2]~9
BB1L19 = (J1_BO1 & (((J1_BO0)))) # (!J1_BO1 & ((J1_BO0 & (N3_q_b[5])) # (!J1_BO0 & ((N1_q_b[5])))));


--BB1L20 is datapath:u_datapath|datapath_scsi:u_datapath_scsi|SCSI_DATA_OUT[2]~10
BB1L20 = (J1_BO1 & ((BB1L19 & (N4_q_b[5])) # (!BB1L19 & ((N2_q_b[5]))))) # (!J1_BO1 & (((BB1L19))));


--BB1L21 is datapath:u_datapath|datapath_scsi:u_datapath_scsi|SCSI_DATA_OUT[2]~11
BB1L21 = (E1_F2S_o & (((!E1_CPU2S_o & BB1L20)))) # (!E1_F2S_o & (BB1L18 & (E1_CPU2S_o)));


--BB1L22 is datapath:u_datapath|datapath_scsi:u_datapath_scsi|SCSI_DATA_OUT[3]~12
BB1L22 = (ADDR[3] & (A1L50 & (C1_DIEH))) # (!ADDR[3] & (((A1L18))));


--BB1L23 is datapath:u_datapath|datapath_scsi:u_datapath_scsi|SCSI_DATA_OUT[3]~13
BB1L23 = (J1_BO1 & (((J1_BO0)))) # (!J1_BO1 & ((J1_BO0 & (N3_q_b[4])) # (!J1_BO0 & ((N1_q_b[4])))));


--BB1L24 is datapath:u_datapath|datapath_scsi:u_datapath_scsi|SCSI_DATA_OUT[3]~14
BB1L24 = (J1_BO1 & ((BB1L23 & (N4_q_b[4])) # (!BB1L23 & ((N2_q_b[4]))))) # (!J1_BO1 & (((BB1L23))));


--BB1L25 is datapath:u_datapath|datapath_scsi:u_datapath_scsi|SCSI_DATA_OUT[3]~15
BB1L25 = (E1_F2S_o & (((!E1_CPU2S_o & BB1L24)))) # (!E1_F2S_o & (BB1L22 & (E1_CPU2S_o)));


--BB1L26 is datapath:u_datapath|datapath_scsi:u_datapath_scsi|SCSI_DATA_OUT[4]~16
BB1L26 = (ADDR[3] & (A1L52 & (C1_DIEH))) # (!ADDR[3] & (((A1L20))));


--BB1L27 is datapath:u_datapath|datapath_scsi:u_datapath_scsi|SCSI_DATA_OUT[4]~17
BB1L27 = (J1_BO1 & (((J1_BO0)))) # (!J1_BO1 & ((J1_BO0 & (N3_q_b[3])) # (!J1_BO0 & ((N1_q_b[3])))));


--BB1L28 is datapath:u_datapath|datapath_scsi:u_datapath_scsi|SCSI_DATA_OUT[4]~18
BB1L28 = (J1_BO1 & ((BB1L27 & (N4_q_b[3])) # (!BB1L27 & ((N2_q_b[3]))))) # (!J1_BO1 & (((BB1L27))));


--BB1L29 is datapath:u_datapath|datapath_scsi:u_datapath_scsi|SCSI_DATA_OUT[4]~19
BB1L29 = (E1_F2S_o & (((!E1_CPU2S_o & BB1L28)))) # (!E1_F2S_o & (BB1L26 & (E1_CPU2S_o)));


--BB1L30 is datapath:u_datapath|datapath_scsi:u_datapath_scsi|SCSI_DATA_OUT[5]~20
BB1L30 = (ADDR[3] & (A1L54 & (C1_DIEH))) # (!ADDR[3] & (((A1L22))));


--BB1L31 is datapath:u_datapath|datapath_scsi:u_datapath_scsi|SCSI_DATA_OUT[5]~21
BB1L31 = (J1_BO1 & (((J1_BO0)))) # (!J1_BO1 & ((J1_BO0 & (N3_q_b[2])) # (!J1_BO0 & ((N1_q_b[2])))));


--BB1L32 is datapath:u_datapath|datapath_scsi:u_datapath_scsi|SCSI_DATA_OUT[5]~22
BB1L32 = (J1_BO1 & ((BB1L31 & (N4_q_b[2])) # (!BB1L31 & ((N2_q_b[2]))))) # (!J1_BO1 & (((BB1L31))));


--BB1L33 is datapath:u_datapath|datapath_scsi:u_datapath_scsi|SCSI_DATA_OUT[5]~23
BB1L33 = (E1_F2S_o & (((!E1_CPU2S_o & BB1L32)))) # (!E1_F2S_o & (BB1L30 & (E1_CPU2S_o)));


--BB1L34 is datapath:u_datapath|datapath_scsi:u_datapath_scsi|SCSI_DATA_OUT[6]~24
BB1L34 = (ADDR[3] & (A1L56 & (C1_DIEH))) # (!ADDR[3] & (((A1L24))));


--BB1L35 is datapath:u_datapath|datapath_scsi:u_datapath_scsi|SCSI_DATA_OUT[6]~25
BB1L35 = (J1_BO1 & (((J1_BO0)))) # (!J1_BO1 & ((J1_BO0 & (N3_q_b[1])) # (!J1_BO0 & ((N1_q_b[1])))));


--BB1L36 is datapath:u_datapath|datapath_scsi:u_datapath_scsi|SCSI_DATA_OUT[6]~26
BB1L36 = (J1_BO1 & ((BB1L35 & (N4_q_b[1])) # (!BB1L35 & ((N2_q_b[1]))))) # (!J1_BO1 & (((BB1L35))));


--BB1L37 is datapath:u_datapath|datapath_scsi:u_datapath_scsi|SCSI_DATA_OUT[6]~27
BB1L37 = (E1_F2S_o & (((!E1_CPU2S_o & BB1L36)))) # (!E1_F2S_o & (BB1L34 & (E1_CPU2S_o)));


--BB1L38 is datapath:u_datapath|datapath_scsi:u_datapath_scsi|SCSI_DATA_OUT[7]~28
BB1L38 = (ADDR[3] & (A1L58 & (C1_DIEH))) # (!ADDR[3] & (((A1L26))));


--BB1L39 is datapath:u_datapath|datapath_scsi:u_datapath_scsi|SCSI_DATA_OUT[7]~29
BB1L39 = (J1_BO1 & (((J1_BO0)))) # (!J1_BO1 & ((J1_BO0 & (N3_q_b[0])) # (!J1_BO0 & ((N1_q_b[0])))));


--BB1L40 is datapath:u_datapath|datapath_scsi:u_datapath_scsi|SCSI_DATA_OUT[7]~30
BB1L40 = (J1_BO1 & ((BB1L39 & (N4_q_b[0])) # (!BB1L39 & ((N2_q_b[0]))))) # (!J1_BO1 & (((BB1L39))));


--BB1L41 is datapath:u_datapath|datapath_scsi:u_datapath_scsi|SCSI_DATA_OUT[7]~31
BB1L41 = (E1_F2S_o & (((!E1_CPU2S_o & BB1L40)))) # (!E1_F2S_o & (BB1L38 & (E1_CPU2S_o)));


--G1L2 is registers:u_registers|A1~0
G1L2 = (EB1_h_0C & ((A1L123 & (G1_A1)) # (!A1L123 & ((A1L62))))) # (!EB1_h_0C & (G1_A1));


--Y1_INCBO is SCSI_SM:u_SCSI_SM|SCSI_SM_INTERNALS:u_SCSI_SM_INTERNALS|INCBO
Y1_INCBO = (Y1_state_reg.s1) # (Y1_state_reg.s12);


--K1L35 is fifo:int_fifo|fifo__full_empty_ctr:u_full_empty_ctr|UP~0
K1L35 = (C1_INCFIFO & ((K1_UP[6]) # (K1_DOWN[0])));


--K1L36 is fifo:int_fifo|fifo__full_empty_ctr:u_full_empty_ctr|UP~1
K1L36 = (C1_INCFIFO) # ((C1_DECFIFO & ((!K1L21) # (!K1L20))));


--K1L37 is fifo:int_fifo|fifo__full_empty_ctr:u_full_empty_ctr|UP~2
K1L37 = (C1_INCFIFO & ((K1_UP[5]) # (K1_DOWN[1])));


--K1L38 is fifo:int_fifo|fifo__full_empty_ctr:u_full_empty_ctr|UP~3
K1L38 = (C1_INCFIFO & ((K1_UP[4]) # (K1_DOWN[2])));


--K1L39 is fifo:int_fifo|fifo__full_empty_ctr:u_full_empty_ctr|UP~4
K1L39 = (C1_INCFIFO & ((K1_UP[3]) # (K1_DOWN[3])));


--K1L40 is fifo:int_fifo|fifo__full_empty_ctr:u_full_empty_ctr|UP~5
K1L40 = (C1_INCFIFO & ((K1_UP[2]) # (K1_DOWN[4])));


--K1L41 is fifo:int_fifo|fifo__full_empty_ctr:u_full_empty_ctr|UP~6
K1L41 = (C1_INCFIFO & ((K1_UP[1]) # (K1_DOWN[5])));


--K1L42 is fifo:int_fifo|fifo__full_empty_ctr:u_full_empty_ctr|UP~7
K1L42 = (C1_INCFIFO & ((K1_UP[0]) # (K1_DOWN[6])));


--K1L15 is fifo:int_fifo|fifo__full_empty_ctr:u_full_empty_ctr|DOWN[6]~0
K1L15 = (C1_DECFIFO & (((K1_UP[1]) # (K1_DOWN[5])))) # (!C1_DECFIFO & (K1_DOWN[6]));


--K1L13 is fifo:int_fifo|fifo__full_empty_ctr:u_full_empty_ctr|DOWN[5]~1
K1L13 = (C1_DECFIFO & (((K1_UP[2]) # (K1_DOWN[4])))) # (!C1_DECFIFO & (K1_DOWN[5]));


--K1L11 is fifo:int_fifo|fifo__full_empty_ctr:u_full_empty_ctr|DOWN[4]~2
K1L11 = (C1_DECFIFO & (((K1_UP[3]) # (K1_DOWN[3])))) # (!C1_DECFIFO & (K1_DOWN[4]));


--K1L9 is fifo:int_fifo|fifo__full_empty_ctr:u_full_empty_ctr|DOWN[3]~3
K1L9 = (C1_DECFIFO & (((K1_UP[4]) # (K1_DOWN[2])))) # (!C1_DECFIFO & (K1_DOWN[3]));


--K1L7 is fifo:int_fifo|fifo__full_empty_ctr:u_full_empty_ctr|DOWN[2]~4
K1L7 = (C1_DECFIFO & (((K1_UP[5]) # (K1_DOWN[1])))) # (!C1_DECFIFO & (K1_DOWN[2]));


--K1L5 is fifo:int_fifo|fifo__full_empty_ctr:u_full_empty_ctr|DOWN[1]~5
K1L5 = (C1_DECFIFO & (((K1_UP[6]) # (K1_DOWN[0])))) # (!C1_DECFIFO & (K1_DOWN[1]));


--K1L3 is fifo:int_fifo|fifo__full_empty_ctr:u_full_empty_ctr|DOWN[0]~6
K1L3 = (C1_DECFIFO & (K1_UP[7])) # (!C1_DECFIFO & ((K1_DOWN[0])));


--P1L3 is CPU_SM:u_CPU_SM|CPU_SM_inputs:u_CPU_SM_inputs|E[0]~26
P1L3 = (C1_FLUSHFIFO & (!C1L23 & (!K1_FIFOEMPTY & !K1_FIFOFULL)));


--Q1L73 is CPU_SM:u_CPU_SM|CPU_SM_outputs:u_CPU_SM_outputs|nSTOPFLUSH_d~1
Q1L73 = (Q1L72) # ((P1L28) # ((P1L2 & P1L3)));


--FB1L11 is registers:u_registers|registers_cntr:u_registers_cntr|CNTR_O[8]~5
FB1L11 = (FB1_CNTR_O[8] & (((!EB1L5) # (!FB1L10)) # (!ADDR[5])));


--FB1L12 is registers:u_registers|registers_cntr:u_registers_cntr|CNTR_O[8]~6
FB1L12 = (FB1L11) # ((ADDR[4] & (EB1L3 & !ADDR[2])));


--Y1L2 is SCSI_SM:u_SCSI_SM|SCSI_SM_INTERNALS:u_SCSI_SM_INTERNALS|RDFIFO~0
Y1L2 = (J1_BO1 & (J1_BO0 & Y1_state_reg.s1));


--Q1L33 is CPU_SM:u_CPU_SM|CPU_SM_outputs:u_CPU_SM_outputs|FF~0
Q1L33 = (Q1L14 & ((C1_STATE[1]) # ((!DSACK_I_[0]) # (!_BERR))));


--Q1L34 is CPU_SM:u_CPU_SM|CPU_SM_outputs:u_CPU_SM_outputs|FF~1
Q1L34 = (V1L1 & ((Q1L33) # ((!_STERM & !V1L11)))) # (!V1L1 & (((!_STERM & !V1L11))));


--Q1L37 is CPU_SM:u_CPU_SM|CPU_SM_outputs:u_CPU_SM_outputs|INCFIFO_d~2
Q1L37 = (Q1L35) # (((E1_RIFIFO_o & !Q1L34)) # (!Q1L36));


--Q1L7 is CPU_SM:u_CPU_SM|CPU_SM_outputs:u_CPU_SM_outputs|DECFIFO_d~0
Q1L7 = (Q1L34) # ((E1_RDFIFO_o & (Q1L36 & !Q1L35)));


--Y1L3 is SCSI_SM:u_SCSI_SM|SCSI_SM_INTERNALS:u_SCSI_SM_INTERNALS|RIFIFO~0
Y1L3 = (J1_BO1 & (J1_BO0 & Y1_state_reg.s12));


--Y1_state_reg.s22 is SCSI_SM:u_SCSI_SM|SCSI_SM_INTERNALS:u_SCSI_SM_INTERNALS|state_reg.s22
Y1_state_reg.s22 = DFFEAS(Y1_state_reg.s6, X1__clk1, E1_CRESET_,  ,  ,  ,  ,  ,  );


--Y1L13 is SCSI_SM:u_SCSI_SM|SCSI_SM_INTERNALS:u_SCSI_SM_INTERNALS|Selector11~0
Y1L13 = (Y1_state_reg.s22) # ((Y1_state_reg.s14 & E1_CDSACK_));


--Y1_state_reg.s9 is SCSI_SM:u_SCSI_SM|SCSI_SM_INTERNALS:u_SCSI_SM_INTERNALS|state_reg.s9
Y1_state_reg.s9 = DFFEAS(Y1_state_reg.s19, X1__clk1, E1_CRESET_,  ,  ,  ,  ,  ,  );


--Y1L16 is SCSI_SM:u_SCSI_SM|SCSI_SM_INTERNALS:u_SCSI_SM_INTERNALS|Selector19~0
Y1L16 = (Y1_state_reg.s9) # ((Y1_state_reg.s25 & E1_CDSACK_));


--C1_PAS is CPU_SM:u_CPU_SM|PAS
C1_PAS = DFFEAS(Q1L45, X1__clk1, E1_CRESET_,  ,  ,  ,  ,  ,  );


--C1_PDS is CPU_SM:u_CPU_SM|PDS
C1_PDS = DFFEAS(Q1L44, X1__clk1, E1_CRESET_,  ,  ,  ,  ,  ,  );


--GB1_FE is registers:u_registers|registers_istr:u_registers_istr|FE
GB1_FE = DFFEAS(GB1L2, !X1__clk0, X1__locked,  , GB1L7,  ,  ,  ,  );


--Q1L25 is CPU_SM:u_CPU_SM|CPU_SM_outputs:u_CPU_SM_outputs|F2CPUH_d~0
Q1L25 = (C1_nDSACK & (_STERM)) # (!C1_nDSACK & (((!_BERR) # (!DSACK_I_[1]))));


--Q1L29 is CPU_SM:u_CPU_SM|CPU_SM_outputs:u_CPU_SM_outputs|F2CPUL_d~0
Q1L29 = (Q1L19) # ((Q1L17) # ((Q1L38 & Q1L25)));


--Q1L30 is CPU_SM:u_CPU_SM|CPU_SM_outputs:u_CPU_SM_outputs|F2CPUL_d~1
Q1L30 = (Q1L14) # ((Q1L59 & !C1_STATE[3]));


--Q1L43 is CPU_SM:u_CPU_SM|CPU_SM_outputs:u_CPU_SM_outputs|PAS_d~0
Q1L43 = (Q1L57 & (T1L1 & ((!P1L26) # (!K1_FIFOEMPTY))));


--Q1L31 is CPU_SM:u_CPU_SM|CPU_SM_outputs:u_CPU_SM_outputs|F2CPUL_d~2
Q1L31 = (Q1L43 & (!P1L10 & ((!Q1L13) # (!_STERM))));


--Q1L32 is CPU_SM:u_CPU_SM|CPU_SM_outputs:u_CPU_SM_outputs|F2CPUL_d~3
Q1L32 = (Q1L29) # (((Q1L30 & !_STERM)) # (!Q1L31));


--Y1L22 is SCSI_SM:u_SCSI_SM|SCSI_SM_INTERNALS:u_SCSI_SM_INTERNALS|Selector26~0
Y1L22 = (Y1L21) # ((Y1_state_reg.s25) # ((Y1_state_reg.s9) # (!Y1L19)));


--GB1_FF is registers:u_registers|registers_istr:u_registers_istr|FF
GB1_FF = DFFEAS(GB1L4, !X1__clk0, X1__locked,  , GB1L7,  ,  ,  ,  );


--GB1_INT_P is registers:u_registers|registers_istr:u_registers_istr|INT_P
GB1_INT_P = DFFEAS(GB1L12, !X1__clk0, X1__locked,  , GB1L7,  ,  ,  ,  );


--GB1_INT_F is registers:u_registers|registers_istr:u_registers_istr|INT_F
GB1_INT_F = DFFEAS(GB1L8, !X1__clk0, X1__locked,  , GB1L7,  ,  ,  ,  );


--C1_BRIDGEOUT is CPU_SM:u_CPU_SM|BRIDGEOUT
C1_BRIDGEOUT = DFFEAS(Q1L6, X1__clk1, E1_CRESET_,  ,  ,  ,  ,  ,  );


--AB1L76 is datapath:u_datapath|datapath_output:u_datapath_output|UD_LATCH~0
AB1L76 = (C1_BRIDGEOUT & (N4_q_b[7])) # (!C1_BRIDGEOUT & ((N2_q_b[7])));


--Q1L24 is CPU_SM:u_CPU_SM|CPU_SM_outputs:u_CPU_SM_outputs|F2CPUH_X~0
Q1L24 = (C1_STATE[0] & (!C1_STATE[3] & (C1_STATE[1] $ (!C1_STATE[2]))));


--Q1L26 is CPU_SM:u_CPU_SM|CPU_SM_outputs:u_CPU_SM_outputs|F2CPUH_d~1
Q1L26 = (Q1L25 & (Q1L24 & !C1_STATE[4]));


--Q1L27 is CPU_SM:u_CPU_SM|CPU_SM_outputs:u_CPU_SM_outputs|F2CPUH_d~2
Q1L27 = (Q1L14 & (((Q1L59 & !C1_STATE[3])) # (!C1_STATE[1]))) # (!Q1L14 & (Q1L59 & ((!C1_STATE[3]))));


--Q1L28 is CPU_SM:u_CPU_SM|CPU_SM_outputs:u_CPU_SM_outputs|F2CPUH_d~3
Q1L28 = (Q1L26) # (((Q1L27 & !_STERM)) # (!Q1L31));


--AB1L77 is datapath:u_datapath|datapath_output:u_datapath_output|UD_LATCH~1
AB1L77 = (C1_BRIDGEOUT & (N4_q_b[6])) # (!C1_BRIDGEOUT & ((N2_q_b[6])));


--AB1L78 is datapath:u_datapath|datapath_output:u_datapath_output|UD_LATCH~2
AB1L78 = (C1_BRIDGEOUT & (N4_q_b[5])) # (!C1_BRIDGEOUT & ((N2_q_b[5])));


--AB1L79 is datapath:u_datapath|datapath_output:u_datapath_output|UD_LATCH~3
AB1L79 = (C1_BRIDGEOUT & (N4_q_b[4])) # (!C1_BRIDGEOUT & ((N2_q_b[4])));


--AB1L80 is datapath:u_datapath|datapath_output:u_datapath_output|UD_LATCH~4
AB1L80 = (C1_BRIDGEOUT & (N4_q_b[3])) # (!C1_BRIDGEOUT & ((N2_q_b[3])));


--AB1L81 is datapath:u_datapath|datapath_output:u_datapath_output|UD_LATCH~5
AB1L81 = (C1_BRIDGEOUT & (N4_q_b[2])) # (!C1_BRIDGEOUT & ((N2_q_b[2])));


--AB1L82 is datapath:u_datapath|datapath_output:u_datapath_output|UD_LATCH~6
AB1L82 = (C1_BRIDGEOUT & (N4_q_b[1])) # (!C1_BRIDGEOUT & ((N2_q_b[1])));


--AB1L83 is datapath:u_datapath|datapath_output:u_datapath_output|UD_LATCH~7
AB1L83 = (C1_BRIDGEOUT & (N4_q_b[0])) # (!C1_BRIDGEOUT & ((N2_q_b[0])));


--AB1L84 is datapath:u_datapath|datapath_output:u_datapath_output|UD_LATCH~8
AB1L84 = (C1_BRIDGEOUT & (N3_q_b[7])) # (!C1_BRIDGEOUT & ((N1_q_b[7])));


--AB1L85 is datapath:u_datapath|datapath_output:u_datapath_output|UD_LATCH~9
AB1L85 = (C1_BRIDGEOUT & (N3_q_b[6])) # (!C1_BRIDGEOUT & ((N1_q_b[6])));


--AB1L86 is datapath:u_datapath|datapath_output:u_datapath_output|UD_LATCH~10
AB1L86 = (C1_BRIDGEOUT & (N3_q_b[5])) # (!C1_BRIDGEOUT & ((N1_q_b[5])));


--AB1L87 is datapath:u_datapath|datapath_output:u_datapath_output|UD_LATCH~11
AB1L87 = (C1_BRIDGEOUT & (N3_q_b[4])) # (!C1_BRIDGEOUT & ((N1_q_b[4])));


--AB1L88 is datapath:u_datapath|datapath_output:u_datapath_output|UD_LATCH~12
AB1L88 = (C1_BRIDGEOUT & (N3_q_b[3])) # (!C1_BRIDGEOUT & ((N1_q_b[3])));


--AB1L89 is datapath:u_datapath|datapath_output:u_datapath_output|UD_LATCH~13
AB1L89 = (C1_BRIDGEOUT & (N3_q_b[2])) # (!C1_BRIDGEOUT & ((N1_q_b[2])));


--AB1L90 is datapath:u_datapath|datapath_output:u_datapath_output|UD_LATCH~14
AB1L90 = (C1_BRIDGEOUT & (N3_q_b[1])) # (!C1_BRIDGEOUT & ((N1_q_b[1])));


--AB1L91 is datapath:u_datapath|datapath_output:u_datapath_output|UD_LATCH~15
AB1L91 = (C1_BRIDGEOUT & (N3_q_b[0])) # (!C1_BRIDGEOUT & ((N1_q_b[0])));


--Q1L8 is CPU_SM:u_CPU_SM|CPU_SM_outputs:u_CPU_SM_outputs|DIEH_Z~0
Q1L8 = (P1L20) # ((Q1L49) # ((Q1L12 & P1L14)));


--Q1L9 is CPU_SM:u_CPU_SM|CPU_SM_outputs:u_CPU_SM_outputs|DIEH_d~0
Q1L9 = (_STERM & (((!Q1L8)))) # (!_STERM & (Q1L48 & (!P1L13)));


--Q1L51 is CPU_SM:u_CPU_SM|CPU_SM_outputs:u_CPU_SM_outputs|PLLW_d~1
Q1L51 = (Q1L46 & (!P1L25 & (!P1L23 & !P1L19)));


--Q1L10 is CPU_SM:u_CPU_SM|CPU_SM_outputs:u_CPU_SM_outputs|DIEH_d~1
Q1L10 = (P1L15) # ((S1L5) # ((!Q1L51) # (!Q1L9)));


--Y1L24 is SCSI_SM:u_SCSI_SM|SCSI_SM_INTERNALS:u_SCSI_SM_INTERNALS|Selector28~0
Y1L24 = (Y1_state_reg.s6) # ((Y1_state_reg.s17) # ((Y1_state_reg.s26) # (Y1L15)));


--Y1_WideOr22 is SCSI_SM:u_SCSI_SM|SCSI_SM_INTERNALS:u_SCSI_SM_INTERNALS|WideOr22
Y1_WideOr22 = (Y1_state_reg.s2) # ((Y1_state_reg.s18) # ((Y1_state_reg.s28) # (Y1_state_reg.s1)));


--LLW is LLW
LLW = DFFEAS(C1_PLLW, !SCLK,  ,  ,  ,  ,  ,  ,  );


--M1_LLWS is fifo:int_fifo|fifo_write_strobes:u_write_strobes|LLWS
M1_LLWS = (LLW) # ((E1_DACK_o & (E1_RE_o & DB1L1)));


--C1_BRIDGEIN is CPU_SM:u_CPU_SM|BRIDGEIN
C1_BRIDGEIN = DFFEAS(Q1_nBRIDGEIN_d, X1__clk1, E1_CRESET_,  ,  ,  ,  ,  ,  );


--Z1_UD_LATCH[0] is datapath:u_datapath|datapath_input:u_datapath_input|UD_LATCH[0]
Z1_UD_LATCH[0] = DFFEAS(A1L44, !X1__clk1,  ,  , !DS_O_,  ,  ,  ,  );


--C1_DIEL is CPU_SM:u_CPU_SM|DIEL
C1_DIEL = DFFEAS(Q1L11, X1__clk1, E1_CRESET_,  ,  ,  ,  ,  ,  );


--F1_bDIEL is datapath:u_datapath|bDIEL
F1_bDIEL = (E1_CPU2S_o) # (C1_DIEL);


--Z1L1 is datapath:u_datapath|datapath_input:u_datapath_input|CPU_OD[0]~0
Z1L1 = (F1_bDIEL & (A1L12)) # (!F1_bDIEL & (((C1_BRIDGEIN & Z1_UD_LATCH[0]))));


--E1_S2F_o is SCSI_SM:u_SCSI_SM|S2F_o
E1_S2F_o = DFFEAS(Y1L23, X1__clk1,  ,  ,  ,  ,  ,  ,  );


--F1L3 is datapath:u_datapath|FIFO_ID[0]~0
F1L3 = (E1_S2F_o & (A1L99)) # (!E1_S2F_o & ((Z1L1)));


--L1_COUNT[0] is fifo:int_fifo|fifo_3bit_cntr:u_next_in_cntr|COUNT[0]
L1_COUNT[0] = DFFEAS(L1L3, X1__clk2, X1__locked,  ,  ,  ,  ,  ,  );


--L1_COUNT[1] is fifo:int_fifo|fifo_3bit_cntr:u_next_in_cntr|COUNT[1]
L1_COUNT[1] = DFFEAS(L1L5, X1__clk2, X1__locked,  ,  ,  ,  ,  ,  );


--L1_COUNT[2] is fifo:int_fifo|fifo_3bit_cntr:u_next_in_cntr|COUNT[2]
L1_COUNT[2] = DFFEAS(L1L8, X1__clk2, X1__locked,  ,  ,  ,  ,  ,  );


--L2_COUNT[0] is fifo:int_fifo|fifo_3bit_cntr:u_next_out_cntr|COUNT[0]
L2_COUNT[0] = DFFEAS(L2L3, X1__clk2, X1__locked,  ,  ,  ,  ,  ,  );


--L2_COUNT[1] is fifo:int_fifo|fifo_3bit_cntr:u_next_out_cntr|COUNT[1]
L2_COUNT[1] = DFFEAS(L2L5, X1__clk2, X1__locked,  ,  ,  ,  ,  ,  );


--L2_COUNT[2] is fifo:int_fifo|fifo_3bit_cntr:u_next_out_cntr|COUNT[2]
L2_COUNT[2] = DFFEAS(L2L8, X1__clk2, X1__locked,  ,  ,  ,  ,  ,  );


--LHW is LHW
LHW = DFFEAS(C1_PLHW, !SCLK,  ,  ,  ,  ,  ,  ,  );


--M1L2 is fifo:int_fifo|fifo_write_strobes:u_write_strobes|LLWS~0
M1L2 = (E1_DACK_o & E1_RE_o);


--M1_UMWS is fifo:int_fifo|fifo_write_strobes:u_write_strobes|UMWS
M1_UMWS = (LHW) # ((J1_BO0 & (M1L2 & !J1_BO1)));


--F1L27 is datapath:u_datapath|FIFO_ID[16]~1
F1L27 = (E1_S2F_o & (A1L99)) # (!E1_S2F_o & (((A1L44 & C1_DIEH))));


--M1_LMWS is fifo:int_fifo|fifo_write_strobes:u_write_strobes|LMWS
M1_LMWS = (LLW) # ((J1_BO1 & (M1L2 & !J1_BO0)));


--F1L11 is datapath:u_datapath|FIFO_ID[8]~2
F1L11 = (E1_S2F_o & (A1L99)) # (!E1_S2F_o & (((A1L28 & F1_bDIEL))));


--Z1_UD_LATCH[8] is datapath:u_datapath|datapath_input:u_datapath_input|UD_LATCH[8]
Z1_UD_LATCH[8] = DFFEAS(A1L60, !X1__clk1,  ,  , !DS_O_,  ,  ,  ,  );


--Z1L8 is datapath:u_datapath|datapath_input:u_datapath_input|CPU_OD[7]~1
Z1L8 = (C1_BRIDGEIN & (!E1_CPU2S_o & !C1_DIEL));


--F1L12 is datapath:u_datapath|FIFO_ID[8]~3
F1L12 = (F1L11) # ((Z1_UD_LATCH[8] & (Z1L8 & !E1_S2F_o)));


--M1_UUWS is fifo:int_fifo|fifo_write_strobes:u_write_strobes|UUWS
M1_UUWS = (LHW) # ((M1L2 & (!J1_BO1 & !J1_BO0)));


--F1L35 is datapath:u_datapath|FIFO_ID[24]~4
F1L35 = (E1_S2F_o & (A1L99)) # (!E1_S2F_o & (((A1L60 & C1_DIEH))));


--Z1_UD_LATCH[1] is datapath:u_datapath|datapath_input:u_datapath_input|UD_LATCH[1]
Z1_UD_LATCH[1] = DFFEAS(A1L46, !X1__clk1,  ,  , !DS_O_,  ,  ,  ,  );


--Z1L2 is datapath:u_datapath|datapath_input:u_datapath_input|CPU_OD[1]~2
Z1L2 = (F1_bDIEL & (A1L14)) # (!F1_bDIEL & (((C1_BRIDGEIN & Z1_UD_LATCH[1]))));


--F1L4 is datapath:u_datapath|FIFO_ID[1]~5
F1L4 = (E1_S2F_o & (A1L101)) # (!E1_S2F_o & ((Z1L2)));


--F1L28 is datapath:u_datapath|FIFO_ID[17]~6
F1L28 = (E1_S2F_o & (A1L101)) # (!E1_S2F_o & (((A1L46 & C1_DIEH))));


--F1L13 is datapath:u_datapath|FIFO_ID[9]~7
F1L13 = (E1_S2F_o & (A1L101)) # (!E1_S2F_o & (((A1L30 & F1_bDIEL))));


--Z1_UD_LATCH[9] is datapath:u_datapath|datapath_input:u_datapath_input|UD_LATCH[9]
Z1_UD_LATCH[9] = DFFEAS(A1L62, !X1__clk1,  ,  , !DS_O_,  ,  ,  ,  );


--F1L14 is datapath:u_datapath|FIFO_ID[9]~8
F1L14 = (F1L13) # ((Z1L8 & (Z1_UD_LATCH[9] & !E1_S2F_o)));


--F1L36 is datapath:u_datapath|FIFO_ID[25]~9
F1L36 = (E1_S2F_o & (A1L101)) # (!E1_S2F_o & (((A1L62 & C1_DIEH))));


--Z1_UD_LATCH[2] is datapath:u_datapath|datapath_input:u_datapath_input|UD_LATCH[2]
Z1_UD_LATCH[2] = DFFEAS(A1L48, !X1__clk1,  ,  , !DS_O_,  ,  ,  ,  );


--Z1L3 is datapath:u_datapath|datapath_input:u_datapath_input|CPU_OD[2]~3
Z1L3 = (F1_bDIEL & (A1L16)) # (!F1_bDIEL & (((C1_BRIDGEIN & Z1_UD_LATCH[2]))));


--F1L5 is datapath:u_datapath|FIFO_ID[2]~10
F1L5 = (E1_S2F_o & (A1L103)) # (!E1_S2F_o & ((Z1L3)));


--F1L29 is datapath:u_datapath|FIFO_ID[18]~11
F1L29 = (E1_S2F_o & (A1L103)) # (!E1_S2F_o & (((A1L48 & C1_DIEH))));


--F1L15 is datapath:u_datapath|FIFO_ID[10]~12
F1L15 = (E1_S2F_o & (A1L103)) # (!E1_S2F_o & (((A1L32 & F1_bDIEL))));


--Z1_UD_LATCH[10] is datapath:u_datapath|datapath_input:u_datapath_input|UD_LATCH[10]
Z1_UD_LATCH[10] = DFFEAS(A1L64, !X1__clk1,  ,  , !DS_O_,  ,  ,  ,  );


--F1L16 is datapath:u_datapath|FIFO_ID[10]~13
F1L16 = (F1L15) # ((Z1L8 & (Z1_UD_LATCH[10] & !E1_S2F_o)));


--F1L37 is datapath:u_datapath|FIFO_ID[26]~14
F1L37 = (E1_S2F_o & (A1L103)) # (!E1_S2F_o & (((A1L64 & C1_DIEH))));


--Z1_UD_LATCH[3] is datapath:u_datapath|datapath_input:u_datapath_input|UD_LATCH[3]
Z1_UD_LATCH[3] = DFFEAS(A1L50, !X1__clk1,  ,  , !DS_O_,  ,  ,  ,  );


--Z1L4 is datapath:u_datapath|datapath_input:u_datapath_input|CPU_OD[3]~4
Z1L4 = (F1_bDIEL & (A1L18)) # (!F1_bDIEL & (((C1_BRIDGEIN & Z1_UD_LATCH[3]))));


--F1L6 is datapath:u_datapath|FIFO_ID[3]~15
F1L6 = (E1_S2F_o & (A1L105)) # (!E1_S2F_o & ((Z1L4)));


--F1L30 is datapath:u_datapath|FIFO_ID[19]~16
F1L30 = (E1_S2F_o & (A1L105)) # (!E1_S2F_o & (((A1L50 & C1_DIEH))));


--F1L17 is datapath:u_datapath|FIFO_ID[11]~17
F1L17 = (E1_S2F_o & (A1L105)) # (!E1_S2F_o & (((A1L34 & F1_bDIEL))));


--Z1_UD_LATCH[11] is datapath:u_datapath|datapath_input:u_datapath_input|UD_LATCH[11]
Z1_UD_LATCH[11] = DFFEAS(A1L66, !X1__clk1,  ,  , !DS_O_,  ,  ,  ,  );


--F1L18 is datapath:u_datapath|FIFO_ID[11]~18
F1L18 = (F1L17) # ((Z1L8 & (Z1_UD_LATCH[11] & !E1_S2F_o)));


--F1L38 is datapath:u_datapath|FIFO_ID[27]~19
F1L38 = (E1_S2F_o & (A1L105)) # (!E1_S2F_o & (((A1L66 & C1_DIEH))));


--Z1_UD_LATCH[4] is datapath:u_datapath|datapath_input:u_datapath_input|UD_LATCH[4]
Z1_UD_LATCH[4] = DFFEAS(A1L52, !X1__clk1,  ,  , !DS_O_,  ,  ,  ,  );


--Z1L5 is datapath:u_datapath|datapath_input:u_datapath_input|CPU_OD[4]~5
Z1L5 = (F1_bDIEL & (A1L20)) # (!F1_bDIEL & (((C1_BRIDGEIN & Z1_UD_LATCH[4]))));


--F1L7 is datapath:u_datapath|FIFO_ID[4]~20
F1L7 = (E1_S2F_o & (A1L107)) # (!E1_S2F_o & ((Z1L5)));


--F1L31 is datapath:u_datapath|FIFO_ID[20]~21
F1L31 = (E1_S2F_o & (A1L107)) # (!E1_S2F_o & (((A1L52 & C1_DIEH))));


--F1L19 is datapath:u_datapath|FIFO_ID[12]~22
F1L19 = (E1_S2F_o & (A1L107)) # (!E1_S2F_o & (((A1L36 & F1_bDIEL))));


--Z1_UD_LATCH[12] is datapath:u_datapath|datapath_input:u_datapath_input|UD_LATCH[12]
Z1_UD_LATCH[12] = DFFEAS(A1L68, !X1__clk1,  ,  , !DS_O_,  ,  ,  ,  );


--F1L20 is datapath:u_datapath|FIFO_ID[12]~23
F1L20 = (F1L19) # ((Z1L8 & (Z1_UD_LATCH[12] & !E1_S2F_o)));


--F1L39 is datapath:u_datapath|FIFO_ID[28]~24
F1L39 = (E1_S2F_o & (A1L107)) # (!E1_S2F_o & (((A1L68 & C1_DIEH))));


--Z1_UD_LATCH[5] is datapath:u_datapath|datapath_input:u_datapath_input|UD_LATCH[5]
Z1_UD_LATCH[5] = DFFEAS(A1L54, !X1__clk1,  ,  , !DS_O_,  ,  ,  ,  );


--Z1L6 is datapath:u_datapath|datapath_input:u_datapath_input|CPU_OD[5]~6
Z1L6 = (F1_bDIEL & (A1L22)) # (!F1_bDIEL & (((C1_BRIDGEIN & Z1_UD_LATCH[5]))));


--F1L8 is datapath:u_datapath|FIFO_ID[5]~25
F1L8 = (E1_S2F_o & (A1L109)) # (!E1_S2F_o & ((Z1L6)));


--F1L32 is datapath:u_datapath|FIFO_ID[21]~26
F1L32 = (E1_S2F_o & (A1L109)) # (!E1_S2F_o & (((A1L54 & C1_DIEH))));


--F1L21 is datapath:u_datapath|FIFO_ID[13]~27
F1L21 = (E1_S2F_o & (A1L109)) # (!E1_S2F_o & (((A1L38 & F1_bDIEL))));


--Z1_UD_LATCH[13] is datapath:u_datapath|datapath_input:u_datapath_input|UD_LATCH[13]
Z1_UD_LATCH[13] = DFFEAS(A1L70, !X1__clk1,  ,  , !DS_O_,  ,  ,  ,  );


--F1L22 is datapath:u_datapath|FIFO_ID[13]~28
F1L22 = (F1L21) # ((Z1L8 & (Z1_UD_LATCH[13] & !E1_S2F_o)));


--F1L40 is datapath:u_datapath|FIFO_ID[29]~29
F1L40 = (E1_S2F_o & (A1L109)) # (!E1_S2F_o & (((A1L70 & C1_DIEH))));


--Z1_UD_LATCH[6] is datapath:u_datapath|datapath_input:u_datapath_input|UD_LATCH[6]
Z1_UD_LATCH[6] = DFFEAS(A1L56, !X1__clk1,  ,  , !DS_O_,  ,  ,  ,  );


--Z1L7 is datapath:u_datapath|datapath_input:u_datapath_input|CPU_OD[6]~7
Z1L7 = (F1_bDIEL & (A1L24)) # (!F1_bDIEL & (((C1_BRIDGEIN & Z1_UD_LATCH[6]))));


--F1L9 is datapath:u_datapath|FIFO_ID[6]~30
F1L9 = (E1_S2F_o & (A1L111)) # (!E1_S2F_o & ((Z1L7)));


--F1L33 is datapath:u_datapath|FIFO_ID[22]~31
F1L33 = (E1_S2F_o & (A1L111)) # (!E1_S2F_o & (((A1L56 & C1_DIEH))));


--F1L23 is datapath:u_datapath|FIFO_ID[14]~32
F1L23 = (E1_S2F_o & (A1L111)) # (!E1_S2F_o & (((A1L40 & F1_bDIEL))));


--Z1_UD_LATCH[14] is datapath:u_datapath|datapath_input:u_datapath_input|UD_LATCH[14]
Z1_UD_LATCH[14] = DFFEAS(A1L72, !X1__clk1,  ,  , !DS_O_,  ,  ,  ,  );


--F1L24 is datapath:u_datapath|FIFO_ID[14]~33
F1L24 = (F1L23) # ((Z1L8 & (Z1_UD_LATCH[14] & !E1_S2F_o)));


--F1L41 is datapath:u_datapath|FIFO_ID[30]~34
F1L41 = (E1_S2F_o & (A1L111)) # (!E1_S2F_o & (((A1L72 & C1_DIEH))));


--Z1_UD_LATCH[7] is datapath:u_datapath|datapath_input:u_datapath_input|UD_LATCH[7]
Z1_UD_LATCH[7] = DFFEAS(A1L58, !X1__clk1,  ,  , !DS_O_,  ,  ,  ,  );


--Z1L9 is datapath:u_datapath|datapath_input:u_datapath_input|CPU_OD[7]~8
Z1L9 = (F1_bDIEL & (A1L26)) # (!F1_bDIEL & (((C1_BRIDGEIN & Z1_UD_LATCH[7]))));


--F1L10 is datapath:u_datapath|FIFO_ID[7]~35
F1L10 = (E1_S2F_o & (A1L113)) # (!E1_S2F_o & ((Z1L9)));


--F1L34 is datapath:u_datapath|FIFO_ID[23]~36
F1L34 = (E1_S2F_o & (A1L113)) # (!E1_S2F_o & (((A1L58 & C1_DIEH))));


--F1L25 is datapath:u_datapath|FIFO_ID[15]~37
F1L25 = (E1_S2F_o & (A1L113)) # (!E1_S2F_o & (((A1L42 & F1_bDIEL))));


--Z1_UD_LATCH[15] is datapath:u_datapath|datapath_input:u_datapath_input|UD_LATCH[15]
Z1_UD_LATCH[15] = DFFEAS(A1L74, !X1__clk1,  ,  , !DS_O_,  ,  ,  ,  );


--F1L26 is datapath:u_datapath|FIFO_ID[15]~38
F1L26 = (F1L25) # ((Z1L8 & (Z1_UD_LATCH[15] & !E1_S2F_o)));


--F1L42 is datapath:u_datapath|FIFO_ID[31]~39
F1L42 = (E1_S2F_o & (A1L113)) # (!E1_S2F_o & (((A1L74 & C1_DIEH))));


--Q1L40 is CPU_SM:u_CPU_SM|CPU_SM_outputs:u_CPU_SM_outputs|PAS_Y~2
Q1L40 = (T1L11 & (!C1_STATE[4] & (!C1_DSACK_LATCHED_[0] & !C1_DSACK_LATCHED_[1])));


--Q1L41 is CPU_SM:u_CPU_SM|CPU_SM_outputs:u_CPU_SM_outputs|PAS_Y~3
Q1L41 = (P1L20) # ((C1_nDSACK & ((P1L17) # (P1L11))));


--Q1L42 is CPU_SM:u_CPU_SM|CPU_SM_outputs:u_CPU_SM_outputs|PAS_Y~4
Q1L42 = (_STERM & ((Q1L40) # ((Q1L41) # (!R1L7))));


--Q1L44 is CPU_SM:u_CPU_SM|CPU_SM_outputs:u_CPU_SM_outputs|PAS_d~1
Q1L44 = ((Q1L42) # ((C1_nDSACK & P1L15))) # (!Q1L51);


--Q1L45 is CPU_SM:u_CPU_SM|CPU_SM_outputs:u_CPU_SM_outputs|PAS_d~2
Q1L45 = (Q1L19) # ((Q1L44) # (!Q1L43));


--GB1L2 is registers:u_registers|registers_istr:u_registers_istr|FE~0
GB1L2 = (A1L123 & (K1_FIFOEMPTY & (EB1L8 & EB1L5)));


--GB1L7 is registers:u_registers|registers_istr:u_registers_istr|INT_F~0
GB1L7 = (EB1L8 & (ADDR[4] & ((A1L123) # (!ADDR[2]))));


--GB1L4 is registers:u_registers|registers_istr:u_registers_istr|FF~0
GB1L4 = (A1L123 & (K1_FIFOFULL & (EB1L8 & EB1L5)));


--GB1L12 is registers:u_registers|registers_istr:u_registers_istr|INT_P~0
GB1L12 = (A1L123 & (!GB1_INT & (EB1L8 & EB1L5)));


--GB1L8 is registers:u_registers|registers_istr:u_registers_istr|INT_F~1
GB1L8 = (A1L123 & (INTA & (EB1L8 & EB1L5)));


--Q1L4 is CPU_SM:u_CPU_SM|CPU_SM_outputs:u_CPU_SM_outputs|BRIDGEOUT_Y~0
Q1L4 = (C1_STATE[0] & (!C1_STATE[2] & (C1_STATE[1] $ (C1_STATE[4]))));


--Q1L5 is CPU_SM:u_CPU_SM|CPU_SM_outputs:u_CPU_SM_outputs|BRIDGEOUT_d~0
Q1L5 = (_STERM & (Q1L17)) # (!_STERM & (((Q1L4 & !C1_STATE[3]))));


--Q1L6 is CPU_SM:u_CPU_SM|CPU_SM_outputs:u_CPU_SM_outputs|BRIDGEOUT_d~1
Q1L6 = (Q1L19) # ((Q1L5) # ((Q1L18 & Q1L25)));


--C1_PLLW is CPU_SM:u_CPU_SM|PLLW
C1_PLLW = DFFEAS(Q1L54, X1__clk1, E1_CRESET_,  ,  ,  ,  ,  ,  );


--Q1_nBRIDGEIN_d is CPU_SM:u_CPU_SM|CPU_SM_outputs:u_CPU_SM_outputs|nBRIDGEIN_d
Q1_nBRIDGEIN_d = (P1L9) # ((P1L18) # (!Q1L71));


--Q1L11 is CPU_SM:u_CPU_SM|CPU_SM_outputs:u_CPU_SM_outputs|DIEL_d~0
Q1L11 = (P1L25) # ((Q1L35) # ((!Q1L9) # (!Q1L46)));


--Y1L23 is SCSI_SM:u_SCSI_SM|SCSI_SM_INTERNALS:u_SCSI_SM_INTERNALS|Selector27~0
Y1L23 = (Y1_state_reg.s12) # (!Y1L6);


--C1_INCNI is CPU_SM:u_CPU_SM|INCNI
C1_INCNI = DFFEAS(Q1L23, X1__clk1, E1_CRESET_,  ,  ,  ,  ,  ,  );


--E1_INCNI_o is SCSI_SM:u_SCSI_SM|INCNI_o
E1_INCNI_o = DFFEAS(Y1L25, X1__clk1,  ,  ,  ,  ,  ,  ,  );


--L1L3 is fifo:int_fifo|fifo_3bit_cntr:u_next_in_cntr|COUNT[0]~0
L1L3 = L1_COUNT[0] $ (((C1_INCNI) # (E1_INCNI_o)));


--L1L5 is fifo:int_fifo|fifo_3bit_cntr:u_next_in_cntr|COUNT[1]~1
L1L5 = L1_COUNT[1] $ (((L1_COUNT[0] & ((C1_INCNI) # (E1_INCNI_o)))));


--L1L7 is fifo:int_fifo|fifo_3bit_cntr:u_next_in_cntr|COUNT[2]~2
L1L7 = (!L1_COUNT[1]) # (!L1_COUNT[0]);


--L1L8 is fifo:int_fifo|fifo_3bit_cntr:u_next_in_cntr|COUNT[2]~3
L1L8 = L1_COUNT[2] $ (((!L1L7 & ((C1_INCNI) # (E1_INCNI_o)))));


--C1_INCNO is CPU_SM:u_CPU_SM|INCNO
C1_INCNO = DFFEAS(Q1L34, X1__clk1, E1_CRESET_,  ,  ,  ,  ,  ,  );


--E1_INCNO_o is SCSI_SM:u_SCSI_SM|INCNO_o
E1_INCNO_o = DFFEAS(Y1L17, X1__clk1,  ,  ,  ,  ,  ,  ,  );


--L2L3 is fifo:int_fifo|fifo_3bit_cntr:u_next_out_cntr|COUNT[0]~0
L2L3 = L2_COUNT[0] $ (((C1_INCNO) # (E1_INCNO_o)));


--L2L5 is fifo:int_fifo|fifo_3bit_cntr:u_next_out_cntr|COUNT[1]~1
L2L5 = L2_COUNT[1] $ (((L2_COUNT[0] & ((C1_INCNO) # (E1_INCNO_o)))));


--L2L7 is fifo:int_fifo|fifo_3bit_cntr:u_next_out_cntr|COUNT[2]~2
L2L7 = (!L2_COUNT[1]) # (!L2_COUNT[0]);


--L2L8 is fifo:int_fifo|fifo_3bit_cntr:u_next_out_cntr|COUNT[2]~3
L2L8 = L2_COUNT[2] $ (((!L2L7 & ((C1_INCNO) # (E1_INCNO_o)))));


--C1_PLHW is CPU_SM:u_CPU_SM|PLHW
C1_PLHW = DFFEAS(Q1L47, X1__clk1, E1_CRESET_,  ,  ,  ,  ,  ,  );


--Q1L52 is CPU_SM:u_CPU_SM|CPU_SM_outputs:u_CPU_SM_outputs|PLLW_d~2
Q1L52 = (_STERM & ((P1L20) # ((Q1L12 & P1L14))));


--Q1L53 is CPU_SM:u_CPU_SM|CPU_SM_outputs:u_CPU_SM_outputs|PLLW_d~3
Q1L53 = (Q1L52) # (((_STERM & Q1L49)) # (!Q1L50));


--Q1L54 is CPU_SM:u_CPU_SM|CPU_SM_outputs:u_CPU_SM_outputs|PLLW_d~4
Q1L54 = (Q1L53) # (((_STERM & V1L2)) # (!Q1L51));


--Y1L25 is SCSI_SM:u_SCSI_SM|SCSI_SM_INTERNALS:u_SCSI_SM_INTERNALS|Selector29~0
Y1L25 = (DB1L1 & ((Y1_state_reg.s12) # ((K1_FIFOFULL & Y1_state_reg.s24)))) # (!DB1L1 & (K1_FIFOFULL & (Y1_state_reg.s24)));


--Y1L17 is SCSI_SM:u_SCSI_SM|SCSI_SM_INTERNALS:u_SCSI_SM_INTERNALS|Selector23~0
Y1L17 = (DB1L1 & ((Y1_state_reg.s1) # ((K1_FIFOFULL & Y1_state_reg.s24)))) # (!DB1L1 & (K1_FIFOFULL & (Y1_state_reg.s24)));


--Q1L47 is CPU_SM:u_CPU_SM|CPU_SM_outputs:u_CPU_SM_outputs|PLHW_d~1
Q1L47 = ((_STERM & ((P1L20) # (Q1L39)))) # (!Q1L46);


--Q1L69 is CPU_SM:u_CPU_SM|CPU_SM_outputs:u_CPU_SM_outputs|nBREQ_d~6
Q1L69 = (!C1_STATE[1] & (!C1_STATE[4] & Q1L22));


--P1L18 is CPU_SM:u_CPU_SM|CPU_SM_inputs:u_CPU_SM_inputs|E[55]~27
P1L18 = (!C1_STATE[0] & (C1_STATE[1] & C1_STATE[2]));


--C1L4 is CPU_SM:u_CPU_SM|BGRANT_~0
C1L4 = !_BG;


--A1L8 is AS_O_~0
A1L8 = !C1_PAS;


--A1L88 is DS_O_~0
A1L88 = !C1_PDS;


--GB1L15 is registers:u_registers|registers_istr:u_registers_istr|ISTR_O[0]~0
GB1L15 = !GB1_FE;


--A1L123 is R_W_IO~0
--operation mode is bidir

A1L123 = R_W_IO;

--R_W_IO is R_W_IO
--operation mode is bidir

R_W_IO_tri_out = TRI(!FB1_CNTR_O[1], C1_BGACK);
R_W_IO = BIDIR(R_W_IO_tri_out);


--A1L126 is _AS_IO~0
--operation mode is bidir

A1L126 = _AS_IO;

--_AS_IO is _AS_IO
--operation mode is bidir

_AS_IO_tri_out = TRI(AS_O_, C1_BGACK);
_AS_IO = BIDIR(_AS_IO_tri_out);


--A1L137 is _DS_IO~0
--operation mode is bidir

A1L137 = _DS_IO;

--_DS_IO is _DS_IO
--operation mode is bidir

_DS_IO_tri_out = TRI(DS_O_, C1_BGACK);
_DS_IO = BIDIR(_DS_IO_tri_out);


--A1L12 is DATA_IO[0]~0
--operation mode is bidir

A1L12 = DATA_IO[0];

--DATA_IO[0] is DATA_IO[0]
--operation mode is bidir

DATA_IO[0]_tri_out = TRI(AB1L3, F1_DATA_OE_);
DATA_IO[0] = BIDIR(DATA_IO[0]_tri_out);


--A1L14 is DATA_IO[1]~1
--operation mode is bidir

A1L14 = DATA_IO[1];

--DATA_IO[1] is DATA_IO[1]
--operation mode is bidir

DATA_IO[1]_tri_out = TRI(AB1L6, F1_DATA_OE_);
DATA_IO[1] = BIDIR(DATA_IO[1]_tri_out);


--A1L16 is DATA_IO[2]~2
--operation mode is bidir

A1L16 = DATA_IO[2];

--DATA_IO[2] is DATA_IO[2]
--operation mode is bidir

DATA_IO[2]_tri_out = TRI(AB1L9, F1_DATA_OE_);
DATA_IO[2] = BIDIR(DATA_IO[2]_tri_out);


--A1L18 is DATA_IO[3]~3
--operation mode is bidir

A1L18 = DATA_IO[3];

--DATA_IO[3] is DATA_IO[3]
--operation mode is bidir

DATA_IO[3]_tri_out = TRI(AB1L11, F1_DATA_OE_);
DATA_IO[3] = BIDIR(DATA_IO[3]_tri_out);


--A1L20 is DATA_IO[4]~4
--operation mode is bidir

A1L20 = DATA_IO[4];

--DATA_IO[4] is DATA_IO[4]
--operation mode is bidir

DATA_IO[4]_tri_out = TRI(AB1L13, F1_DATA_OE_);
DATA_IO[4] = BIDIR(DATA_IO[4]_tri_out);


--A1L22 is DATA_IO[5]~5
--operation mode is bidir

A1L22 = DATA_IO[5];

--DATA_IO[5] is DATA_IO[5]
--operation mode is bidir

DATA_IO[5]_tri_out = TRI(AB1L14, F1_DATA_OE_);
DATA_IO[5] = BIDIR(DATA_IO[5]_tri_out);


--A1L24 is DATA_IO[6]~6
--operation mode is bidir

A1L24 = DATA_IO[6];

--DATA_IO[6] is DATA_IO[6]
--operation mode is bidir

DATA_IO[6]_tri_out = TRI(AB1L15, F1_DATA_OE_);
DATA_IO[6] = BIDIR(DATA_IO[6]_tri_out);


--A1L26 is DATA_IO[7]~7
--operation mode is bidir

A1L26 = DATA_IO[7];

--DATA_IO[7] is DATA_IO[7]
--operation mode is bidir

DATA_IO[7]_tri_out = TRI(AB1L16, F1_DATA_OE_);
DATA_IO[7] = BIDIR(DATA_IO[7]_tri_out);


--A1L28 is DATA_IO[8]~8
--operation mode is bidir

A1L28 = DATA_IO[8];

--DATA_IO[8] is DATA_IO[8]
--operation mode is bidir

DATA_IO[8]_tri_out = TRI(AB1L18, F1_DATA_OE_);
DATA_IO[8] = BIDIR(DATA_IO[8]_tri_out);


--A1L30 is DATA_IO[9]~9
--operation mode is bidir

A1L30 = DATA_IO[9];

--DATA_IO[9] is DATA_IO[9]
--operation mode is bidir

DATA_IO[9]_tri_out = TRI(AB1L19, F1_DATA_OE_);
DATA_IO[9] = BIDIR(DATA_IO[9]_tri_out);


--A1L32 is DATA_IO[10]~10
--operation mode is bidir

A1L32 = DATA_IO[10];

--DATA_IO[10] is DATA_IO[10]
--operation mode is bidir

DATA_IO[10]_tri_out = TRI(AB1L20, F1_DATA_OE_);
DATA_IO[10] = BIDIR(DATA_IO[10]_tri_out);


--A1L34 is DATA_IO[11]~11
--operation mode is bidir

A1L34 = DATA_IO[11];

--DATA_IO[11] is DATA_IO[11]
--operation mode is bidir

DATA_IO[11]_tri_out = TRI(AB1L21, F1_DATA_OE_);
DATA_IO[11] = BIDIR(DATA_IO[11]_tri_out);


--A1L36 is DATA_IO[12]~12
--operation mode is bidir

A1L36 = DATA_IO[12];

--DATA_IO[12] is DATA_IO[12]
--operation mode is bidir

DATA_IO[12]_tri_out = TRI(AB1L22, F1_DATA_OE_);
DATA_IO[12] = BIDIR(DATA_IO[12]_tri_out);


--A1L38 is DATA_IO[13]~13
--operation mode is bidir

A1L38 = DATA_IO[13];

--DATA_IO[13] is DATA_IO[13]
--operation mode is bidir

DATA_IO[13]_tri_out = TRI(AB1L23, F1_DATA_OE_);
DATA_IO[13] = BIDIR(DATA_IO[13]_tri_out);


--A1L40 is DATA_IO[14]~14
--operation mode is bidir

A1L40 = DATA_IO[14];

--DATA_IO[14] is DATA_IO[14]
--operation mode is bidir

DATA_IO[14]_tri_out = TRI(AB1L24, F1_DATA_OE_);
DATA_IO[14] = BIDIR(DATA_IO[14]_tri_out);


--A1L42 is DATA_IO[15]~15
--operation mode is bidir

A1L42 = DATA_IO[15];

--DATA_IO[15] is DATA_IO[15]
--operation mode is bidir

DATA_IO[15]_tri_out = TRI(AB1L25, F1_DATA_OE_);
DATA_IO[15] = BIDIR(DATA_IO[15]_tri_out);


--A1L44 is DATA_IO[16]~16
--operation mode is bidir

A1L44 = DATA_IO[16];

--DATA_IO[16] is DATA_IO[16]
--operation mode is bidir

DATA_IO[16]_tri_out = TRI(AB1L26, F1_DATA_OE_);
DATA_IO[16] = BIDIR(DATA_IO[16]_tri_out);


--A1L46 is DATA_IO[17]~17
--operation mode is bidir

A1L46 = DATA_IO[17];

--DATA_IO[17] is DATA_IO[17]
--operation mode is bidir

DATA_IO[17]_tri_out = TRI(AB1L27, F1_DATA_OE_);
DATA_IO[17] = BIDIR(DATA_IO[17]_tri_out);


--A1L48 is DATA_IO[18]~18
--operation mode is bidir

A1L48 = DATA_IO[18];

--DATA_IO[18] is DATA_IO[18]
--operation mode is bidir

DATA_IO[18]_tri_out = TRI(AB1L28, F1_DATA_OE_);
DATA_IO[18] = BIDIR(DATA_IO[18]_tri_out);


--A1L50 is DATA_IO[19]~19
--operation mode is bidir

A1L50 = DATA_IO[19];

--DATA_IO[19] is DATA_IO[19]
--operation mode is bidir

DATA_IO[19]_tri_out = TRI(AB1L29, F1_DATA_OE_);
DATA_IO[19] = BIDIR(DATA_IO[19]_tri_out);


--A1L52 is DATA_IO[20]~20
--operation mode is bidir

A1L52 = DATA_IO[20];

--DATA_IO[20] is DATA_IO[20]
--operation mode is bidir

DATA_IO[20]_tri_out = TRI(AB1L30, F1_DATA_OE_);
DATA_IO[20] = BIDIR(DATA_IO[20]_tri_out);


--A1L54 is DATA_IO[21]~21
--operation mode is bidir

A1L54 = DATA_IO[21];

--DATA_IO[21] is DATA_IO[21]
--operation mode is bidir

DATA_IO[21]_tri_out = TRI(AB1L31, F1_DATA_OE_);
DATA_IO[21] = BIDIR(DATA_IO[21]_tri_out);


--A1L56 is DATA_IO[22]~22
--operation mode is bidir

A1L56 = DATA_IO[22];

--DATA_IO[22] is DATA_IO[22]
--operation mode is bidir

DATA_IO[22]_tri_out = TRI(AB1L32, F1_DATA_OE_);
DATA_IO[22] = BIDIR(DATA_IO[22]_tri_out);


--A1L58 is DATA_IO[23]~23
--operation mode is bidir

A1L58 = DATA_IO[23];

--DATA_IO[23] is DATA_IO[23]
--operation mode is bidir

DATA_IO[23]_tri_out = TRI(AB1L33, F1_DATA_OE_);
DATA_IO[23] = BIDIR(DATA_IO[23]_tri_out);


--A1L60 is DATA_IO[24]~24
--operation mode is bidir

A1L60 = DATA_IO[24];

--DATA_IO[24] is DATA_IO[24]
--operation mode is bidir

DATA_IO[24]_tri_out = TRI(AB1L34, F1_DATA_OE_);
DATA_IO[24] = BIDIR(DATA_IO[24]_tri_out);


--A1L62 is DATA_IO[25]~25
--operation mode is bidir

A1L62 = DATA_IO[25];

--DATA_IO[25] is DATA_IO[25]
--operation mode is bidir

DATA_IO[25]_tri_out = TRI(AB1L35, F1_DATA_OE_);
DATA_IO[25] = BIDIR(DATA_IO[25]_tri_out);


--A1L64 is DATA_IO[26]~26
--operation mode is bidir

A1L64 = DATA_IO[26];

--DATA_IO[26] is DATA_IO[26]
--operation mode is bidir

DATA_IO[26]_tri_out = TRI(AB1L36, F1_DATA_OE_);
DATA_IO[26] = BIDIR(DATA_IO[26]_tri_out);


--A1L66 is DATA_IO[27]~27
--operation mode is bidir

A1L66 = DATA_IO[27];

--DATA_IO[27] is DATA_IO[27]
--operation mode is bidir

DATA_IO[27]_tri_out = TRI(AB1L37, F1_DATA_OE_);
DATA_IO[27] = BIDIR(DATA_IO[27]_tri_out);


--A1L68 is DATA_IO[28]~28
--operation mode is bidir

A1L68 = DATA_IO[28];

--DATA_IO[28] is DATA_IO[28]
--operation mode is bidir

DATA_IO[28]_tri_out = TRI(AB1L38, F1_DATA_OE_);
DATA_IO[28] = BIDIR(DATA_IO[28]_tri_out);


--A1L70 is DATA_IO[29]~29
--operation mode is bidir

A1L70 = DATA_IO[29];

--DATA_IO[29] is DATA_IO[29]
--operation mode is bidir

DATA_IO[29]_tri_out = TRI(AB1L39, F1_DATA_OE_);
DATA_IO[29] = BIDIR(DATA_IO[29]_tri_out);


--A1L72 is DATA_IO[30]~30
--operation mode is bidir

A1L72 = DATA_IO[30];

--DATA_IO[30] is DATA_IO[30]
--operation mode is bidir

DATA_IO[30]_tri_out = TRI(AB1L40, F1_DATA_OE_);
DATA_IO[30] = BIDIR(DATA_IO[30]_tri_out);


--A1L74 is DATA_IO[31]~31
--operation mode is bidir

A1L74 = DATA_IO[31];

--DATA_IO[31] is DATA_IO[31]
--operation mode is bidir

DATA_IO[31]_tri_out = TRI(AB1L41, F1_DATA_OE_);
DATA_IO[31] = BIDIR(DATA_IO[31]_tri_out);


--A1L130 is _BGACK_IO~0
--operation mode is bidir

A1L130 = _BGACK_IO;

--_BGACK_IO is _BGACK_IO
--operation mode is bidir

_BGACK_IO = BIDIR(OPNDRN(!C1_BGACK));


--A1L99 is PD_PORT[0]~0
--operation mode is bidir

A1L99 = PD_PORT[0];

--PD_PORT[0] is PD_PORT[0]
--operation mode is bidir

PD_PORT[0]_tri_out = TRI(BB1L13, A1L142);
PD_PORT[0] = BIDIR(PD_PORT[0]_tri_out);


--A1L101 is PD_PORT[1]~1
--operation mode is bidir

A1L101 = PD_PORT[1];

--PD_PORT[1] is PD_PORT[1]
--operation mode is bidir

PD_PORT[1]_tri_out = TRI(BB1L17, A1L142);
PD_PORT[1] = BIDIR(PD_PORT[1]_tri_out);


--A1L103 is PD_PORT[2]~2
--operation mode is bidir

A1L103 = PD_PORT[2];

--PD_PORT[2] is PD_PORT[2]
--operation mode is bidir

PD_PORT[2]_tri_out = TRI(BB1L21, A1L142);
PD_PORT[2] = BIDIR(PD_PORT[2]_tri_out);


--A1L105 is PD_PORT[3]~3
--operation mode is bidir

A1L105 = PD_PORT[3];

--PD_PORT[3] is PD_PORT[3]
--operation mode is bidir

PD_PORT[3]_tri_out = TRI(BB1L25, A1L142);
PD_PORT[3] = BIDIR(PD_PORT[3]_tri_out);


--A1L107 is PD_PORT[4]~4
--operation mode is bidir

A1L107 = PD_PORT[4];

--PD_PORT[4] is PD_PORT[4]
--operation mode is bidir

PD_PORT[4]_tri_out = TRI(BB1L29, A1L142);
PD_PORT[4] = BIDIR(PD_PORT[4]_tri_out);


--A1L109 is PD_PORT[5]~5
--operation mode is bidir

A1L109 = PD_PORT[5];

--PD_PORT[5] is PD_PORT[5]
--operation mode is bidir

PD_PORT[5]_tri_out = TRI(BB1L33, A1L142);
PD_PORT[5] = BIDIR(PD_PORT[5]_tri_out);


--A1L111 is PD_PORT[6]~6
--operation mode is bidir

A1L111 = PD_PORT[6];

--PD_PORT[6] is PD_PORT[6]
--operation mode is bidir

PD_PORT[6]_tri_out = TRI(BB1L37, A1L142);
PD_PORT[6] = BIDIR(PD_PORT[6]_tri_out);


--A1L113 is PD_PORT[7]~7
--operation mode is bidir

A1L113 = PD_PORT[7];

--PD_PORT[7] is PD_PORT[7]
--operation mode is bidir

PD_PORT[7]_tri_out = TRI(BB1L41, A1L142);
PD_PORT[7] = BIDIR(PD_PORT[7]_tri_out);


--PD_PORT[8] is PD_PORT[8]
--operation mode is bidir

PD_PORT[8]_tri_out = TRI(BB1L13, A1L142);
PD_PORT[8] = BIDIR(PD_PORT[8]_tri_out);


--PD_PORT[9] is PD_PORT[9]
--operation mode is bidir

PD_PORT[9]_tri_out = TRI(BB1L17, A1L142);
PD_PORT[9] = BIDIR(PD_PORT[9]_tri_out);


--PD_PORT[10] is PD_PORT[10]
--operation mode is bidir

PD_PORT[10]_tri_out = TRI(BB1L21, A1L142);
PD_PORT[10] = BIDIR(PD_PORT[10]_tri_out);


--PD_PORT[11] is PD_PORT[11]
--operation mode is bidir

PD_PORT[11]_tri_out = TRI(BB1L25, A1L142);
PD_PORT[11] = BIDIR(PD_PORT[11]_tri_out);


--PD_PORT[12] is PD_PORT[12]
--operation mode is bidir

PD_PORT[12]_tri_out = TRI(BB1L29, A1L142);
PD_PORT[12] = BIDIR(PD_PORT[12]_tri_out);


--PD_PORT[13] is PD_PORT[13]
--operation mode is bidir

PD_PORT[13]_tri_out = TRI(BB1L33, A1L142);
PD_PORT[13] = BIDIR(PD_PORT[13]_tri_out);


--PD_PORT[14] is PD_PORT[14]
--operation mode is bidir

PD_PORT[14]_tri_out = TRI(BB1L37, A1L142);
PD_PORT[14] = BIDIR(PD_PORT[14]_tri_out);


--PD_PORT[15] is PD_PORT[15]
--operation mode is bidir

PD_PORT[15]_tri_out = TRI(BB1L41, A1L142);
PD_PORT[15] = BIDIR(PD_PORT[15]_tri_out);


--C1L2 is CPU_SM:u_CPU_SM|BGACK~_wirecell
C1L2 = !C1_BGACK;


--A1L84 is DSACK_O~0_wirecell
A1L84 = !A1L83;


--A1L96 is PDATA_OE_~0_wirecell
A1L96 = !A1L95;


--E1L7 is SCSI_SM:u_SCSI_SM|DACK_o~_wirecell
E1L7 = !E1_DACK_o;


--E1L23 is SCSI_SM:u_SCSI_SM|SCSI_CS_o~_wirecell
E1L23 = !E1_SCSI_CS_o;


--A1L140 is _IOR~0_wirecell
A1L140 = !A1L139;


--A1L143 is _IOW~0_wirecell
A1L143 = !A1L142;


--GB1L10 is registers:u_registers|registers_istr:u_registers_istr|INT_O_~_wirecell
GB1L10 = !GB1_INT_O_;



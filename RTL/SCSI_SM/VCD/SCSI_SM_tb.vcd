$date
	Wed Aug 16 22:16:24 2023
$end
$version
	Icarus Verilog
$end
$timescale
	100ps
$end
$scope module scsi_sm_tb $end
$var wire 1 ! WE_o $end
$var wire 1 " SCSI_CS_o $end
$var wire 1 # S2F_o $end
$var wire 1 $ S2CPU_o $end
$var wire 1 % RIFIFO_o $end
$var wire 1 & RE_o $end
$var wire 1 ' RDFIFO_o $end
$var wire 1 ( LS2CPU $end
$var wire 1 ) INCNO_o $end
$var wire 1 * INCNI_o $end
$var wire 1 + INCBO_o $end
$var wire 1 , F2S_o $end
$var wire 1 - DACK_o $end
$var wire 1 . CPU2S_o $end
$var reg 1 / BOEQ3 $end
$var reg 1 0 CPUCLK $end
$var reg 1 1 CPUREQ $end
$var reg 1 2 DECFIFO $end
$var reg 1 3 DMADIR $end
$var reg 1 4 DREQ_ $end
$var reg 1 5 FIFOEMPTY $end
$var reg 1 6 FIFOFULL $end
$var reg 1 7 INCFIFO $end
$var reg 1 8 RESET_ $end
$var reg 1 9 RW $end
$var reg 1 : nAS_ $end
$scope module u_SCSI_SM $end
$var wire 1 ; BBCLK $end
$var wire 1 0 BCLK $end
$var wire 1 / BOEQ3 $end
$var wire 1 1 CPUREQ $end
$var wire 1 2 DECFIFO $end
$var wire 1 3 DMADIR $end
$var wire 1 4 DREQ_ $end
$var wire 1 < DSACK_ $end
$var wire 1 5 FIFOEMPTY $end
$var wire 1 6 FIFOFULL $end
$var wire 1 7 INCFIFO $end
$var wire 1 = LBYTE_ $end
$var wire 1 ( LS2CPU $end
$var wire 1 > RDRST_ $end
$var wire 1 8 RESET_ $end
$var wire 1 ? RIRST_ $end
$var wire 1 9 RW $end
$var wire 1 : nAS_ $end
$var wire 1 @ nCLK $end
$var wire 1 A WE $end
$var wire 1 B SET_DSACK $end
$var wire 1 C SCSI_CS $end
$var wire 1 D S2F $end
$var wire 1 E S2CPU $end
$var wire 1 F RIFIFO $end
$var wire 1 G RE $end
$var wire 1 H RDFIFO $end
$var wire 1 I INCNO $end
$var wire 1 J INCNI $end
$var wire 1 K INCBO $end
$var wire 1 L F2S $end
$var wire 1 M DACK $end
$var wire 1 N CPU2S $end
$var reg 1 O CCPUREQ $end
$var reg 1 P CDREQ_ $end
$var reg 1 Q CDSACK_ $end
$var reg 1 . CPU2S_o $end
$var reg 1 R CRESET_ $end
$var reg 1 - DACK_o $end
$var reg 1 , F2S_o $end
$var reg 1 + INCBO_o $end
$var reg 1 * INCNI_o $end
$var reg 1 ) INCNO_o $end
$var reg 1 S RDFIFO_d $end
$var reg 1 ' RDFIFO_o $end
$var reg 1 & RE_o $end
$var reg 1 T RIFIFO_d $end
$var reg 1 % RIFIFO_o $end
$var reg 1 $ S2CPU_o $end
$var reg 1 # S2F_o $end
$var reg 1 " SCSI_CS_o $end
$var reg 1 ! WE_o $end
$var reg 1 U nLS2CPU $end
$scope module u_SCSI_SM_INTERNALS $end
$var wire 1 / BOEQ3 $end
$var wire 1 O CCPUREQ $end
$var wire 1 P CDREQ_ $end
$var wire 1 Q CDSACK_ $end
$var wire 1 0 CLK $end
$var wire 1 3 DMADIR $end
$var wire 1 5 FIFOEMPTY $end
$var wire 1 6 FIFOFULL $end
$var wire 1 ' RDFIFO_o $end
$var wire 1 % RIFIFO_o $end
$var wire 1 9 RW $end
$var wire 1 R nRESET $end
$var parameter 5 V s0 $end
$var parameter 5 W s1 $end
$var parameter 5 X s10 $end
$var parameter 5 Y s12 $end
$var parameter 5 Z s14 $end
$var parameter 5 [ s16 $end
$var parameter 5 \ s17 $end
$var parameter 5 ] s18 $end
$var parameter 5 ^ s19 $end
$var parameter 5 _ s2 $end
$var parameter 5 ` s20 $end
$var parameter 5 a s22 $end
$var parameter 5 b s24 $end
$var parameter 5 c s25 $end
$var parameter 5 d s26 $end
$var parameter 5 e s28 $end
$var parameter 5 f s3 $end
$var parameter 5 g s30 $end
$var parameter 5 h s4 $end
$var parameter 5 i s6 $end
$var parameter 5 j s8 $end
$var parameter 5 k s9 $end
$var reg 1 N CPU2S $end
$var reg 1 M DACK $end
$var reg 1 L F2S $end
$var reg 1 K INCBO $end
$var reg 1 J INCNI $end
$var reg 1 I INCNO $end
$var reg 1 H RDFIFO $end
$var reg 1 G RE $end
$var reg 1 F RIFIFO $end
$var reg 1 E S2CPU $end
$var reg 1 D S2F $end
$var reg 1 C SCSI_CS $end
$var reg 1 B SET_DSACK $end
$var reg 1 A WE $end
$var reg 5 l state_next [4:0] $end
$var reg 5 m state_reg [4:0] $end
$upscope $end
$upscope $end
$upscope $end
$enddefinitions $end
$comment Show the parameter values. $end
$dumpall
b1001 k
b1000 j
b110 i
b100 h
b11110 g
b11 f
b11100 e
b11010 d
b11001 c
b11000 b
b10110 a
b10100 `
b10 _
b10011 ^
b10010 ]
b10001 \
b10000 [
b1110 Z
b1100 Y
b1010 X
b1 W
b0 V
$end
#0
$dumpvars
bx m
bx l
0U
xT
xS
xR
xQ
1P
0O
0N
0M
0L
0K
0J
0I
0H
0G
0F
0E
0D
0C
0B
0A
z@
1?
1>
x=
1<
z;
0:
19
18
07
06
15
14
13
02
01
10
0/
x.
x-
x,
x+
x*
x)
1(
x'
x&
x%
x$
x#
x"
x!
$end
#200
00
#400
1=
0'
0%
1Q
0!
0"
0#
0$
0T
0&
0S
0)
0*
0+
0,
0-
0.
0>
0?
08
10
#600
00
#800
10
#1000
00
#1200
1>
1?
18
10
#1400
00
#1600
1O
11
10
#1800
00
#2000
1:
10
#2200
00
#2400
10
#2600
00
#2800
10
#3000
00
#3200
10
#3400
00
#3600
10
#3800
00
#4000
10
#4200
00
#4400
0:
10
#4600
00
#4800
0O
01
10
#5000
00
#5200
10
#5400
00
#5600
0>
0?
03
09
08
10
#5800
00
#6000
10
#6200
00
#6400
10
#6600
00
#6800
1>
1?
18
10
#7000
00
#7200
1O
11
10
#7400
00
#7600
1:
10
#7800
00
#8000
10
#8200
00
#8400
10
#8600
00
#8800
10
#9000
00
#9200
10
#9400
00
#9600
0:
10
#9800
00
#10000
0O
01
10
#10200
00
#10400
10
#10600
00
#10800
10

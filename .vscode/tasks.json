{
    // See https://go.microsoft.com/fwlink/?LinkId=733558
    // for the documentation about the tasks.json format
    "version": "2.0.0",
    "tasks": [
        {
            "label": "Build Firmware",
            "type": "shell",
            "command": "docker run --rm -v ${pwd}:/build -e LM_LICENSE_FILE=/opt/license.dat -v /path/to/license.dat:/opt/license.dat:ro -it -w /build/Quartus mbtaylor1982/quartus:22.1 quartus_sh -t  RESDMAC.tcl ${input:device}",
            "detail": "Trigger build using mbtaylor1982/quartus:22.1 Docker image",
            "presentation": {
                "echo": true,
                "reveal": "always",
                "focus": true,
                "panel": "dedicated",
                "showReuseMessage": false,
                "clear": true
            },
            "problemMatcher": {
                "fileLocation": ["relative", "${workspaceFolder}"],
                "owner": "Quartus",
                "pattern": {
                  "regexp": "^(Warning|Error)\\s+(\\(\\d+\\)):\\s+(.*)File:\\s+\/build(.*)Line:\\s+(\\d+)$",
                  "severity": 1,
                  "message": 3,
                  "file": 4,
                  "line": 5
                }
            },
            "group": {
                "kind": "build",
                "isDefault": true
            }
        },
        {
            "label": "Clean",
            "type": "shell",
            "command": "docker run --rm -v ${pwd}:/build -e LM_LICENSE_FILE=/opt/license.dat -v /path/to/license.dat:/opt/license.dat:ro -it mbtaylor1982/quartus:22.1 quartus_sh --clean /build/Quartus/RESDMAC.qpf",
            "detail": "Clean build folder",
            "presentation": {
                "echo": true,
                "reveal": "always",
                "focus": true,
                "panel": "dedicated",
                "showReuseMessage": false,
                "clear": true
            },
            "problemMatcher": {
                "fileLocation": ["relative", "${workspaceFolder}"],
                "owner": "Quartus",
                "pattern": {
                  "regexp": "^(Warning|Error)\\s+(\\(\\d+\\)):\\s+(.*)File:\\s+\/build(.*)Line:\\s+(\\d+)$",
                  "severity": 1,
                  "message": 3,
                  "file": 4,
                  "line": 5 
                }
            },
            "dependsOn":["Clean_sim_build"]
        },
        {
            "label": "Run Testbench",
            "type": "shell",
            "command": "docker run --rm -v ${pwd}:/test -w /test -it mbtaylor1982/cocotb-iverilog:latest pytest -o log_cli=true",
            "detail": "Run Testbench",
            "presentation": {
                "echo": true,
                "reveal": "always",
                "focus": true,
                "panel": "dedicated",
                "showReuseMessage": false,
                "clear": true
            },
            "group": {
                "kind": "test",
                "isDefault": true,

            }
        },
        {
            "label": "Clean_sim_build",
            "hide": true,
            "type": "shell",
            "command": "docker run --rm -v ${pwd}:/test -w /test -it mbtaylor1982/cocotb-iverilog:latest cocotb-clean -r",
            "detail": "Run Testbench",
            "presentation": {
                "echo": true,
                "reveal": "always",
                "focus": true,
                "panel": "dedicated",
                "showReuseMessage": false,
                "clear": true
            },
        },
        {
            "label": "Kicad_Output",
            "type": "shell",
            "command": "docker run --rm -v ${pwd}:/build -w /build/KiCad -it ghcr.io/inti-cmnb/kicad5_auto:latest kibot --quick-start",
            "detail": "Generate Kicad Outputfiles",
            "presentation": {
                "echo": true,
                "reveal": "always",
                "focus": true,
                "panel": "dedicated",
                "showReuseMessage": false,
                "clear": true
            },
        },
    ],
    "inputs": [
        {
            "id": "device",
            "description": "Enter the device to build the Firmware for. eg: 10M04SCU169C8G",
            "default": "10M16SCU169C8G",
            "type": "promptString",

        }
    ]
}